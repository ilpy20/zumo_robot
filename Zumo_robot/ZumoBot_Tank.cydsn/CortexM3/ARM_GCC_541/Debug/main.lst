ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.zmain,"ax",%progbits
  20              		.align	2
  21              		.global	zmain
  22              		.thumb
  23              		.thumb_func
  24              		.type	zmain, %function
  25              	zmain:
  26              	.LFB85:
  27              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        ****     
  12:main.c        ****     <p>
  13:main.c        ****     <B>Sensors</B><br>
  14:main.c        ****     &nbsp;Included: <br>
  15:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
  16:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
  17:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
  18:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
  19:main.c        ****     &nbsp;Wii nunchuck<br>
  20:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
  21:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
  22:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
  23:main.c        ****     &nbsp;IR LED <br><br><br>
  24:main.c        ****     </p>
  25:main.c        ****     
  26:main.c        ****     <p>
  27:main.c        ****     <B>Communication</B><br>
  28:main.c        ****     I2C, UART, Serial<br>
  29:main.c        ****     </p>
  30:main.c        **** */
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 2


  31:main.c        **** 
  32:main.c        **** #include <project.h>
  33:main.c        **** #include <stdio.h>
  34:main.c        **** #include <stdlib.h>
  35:main.c        **** #include "FreeRTOS.h"
  36:main.c        **** #include "task.h"
  37:main.c        **** #include "Motor.h"
  38:main.c        **** #include "Ultra.h"
  39:main.c        **** #include "Nunchuk.h"
  40:main.c        **** #include "Reflectance.h"
  41:main.c        **** #include "Gyro.h"
  42:main.c        **** #include "Accel_magnet.h"
  43:main.c        **** #include "LSM303D.h"
  44:main.c        **** #include "IR.h"
  45:main.c        **** #include "Beep.h"
  46:main.c        **** #include "mqtt_sender.h"
  47:main.c        **** #include <time.h>
  48:main.c        **** #include <sys/time.h>
  49:main.c        **** #include "serial1.h"
  50:main.c        **** #include <unistd.h>
  51:main.c        **** /**
  52:main.c        ****  * @file    main.c
  53:main.c        ****  * @brief   
  54:main.c        ****  * @details  ** Enable global interrupt since Zumo library uses interrupts. **<br>&nbsp;&nbsp;&nbsp
  55:main.c        **** */
  56:main.c        **** 
  57:main.c        **** #if 0
  58:main.c        **** //template
  59:main.c        **** void zmain(void){
  60:main.c        ****     
  61:main.c        ****     while(true)
  62:main.c        ****     {
  63:main.c        ****         BatteryLed_Write(!SW1_Read());
  64:main.c        ****         vTaskDelay(100);
  65:main.c        ****     }
  66:main.c        **** }
  67:main.c        **** #endif
  68:main.c        **** 
  69:main.c        **** #if 0
  70:main.c        **** // Beep light test
  71:main.c        **** void zmain(void)
  72:main.c        **** {
  73:main.c        ****     while(true)
  74:main.c        ****     {
  75:main.c        ****         if ((SW1_Read() == 0)){
  76:main.c        ****             for(int i = 0; i < 3; i++){
  77:main.c        ****                 BatteryLed_Write(1);
  78:main.c        ****                 Beep(750, 30);
  79:main.c        ****                 vTaskDelay(500);
  80:main.c        ****                 BatteryLed_Write(0);
  81:main.c        ****                 vTaskDelay(500);
  82:main.c        ****             }
  83:main.c        ****             for(int i = 0; i<3; i++){
  84:main.c        ****                 BatteryLed_Write(1);
  85:main.c        ****                 Beep(750, 30);
  86:main.c        ****                 vTaskDelay(1000);
  87:main.c        ****                 BatteryLed_Write(0);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 3


  88:main.c        ****                 vTaskDelay(500);
  89:main.c        ****             }
  90:main.c        ****             for(int i = 0; i < 3; i++){
  91:main.c        ****                 BatteryLed_Write(1);
  92:main.c        ****                 Beep(750, 30);
  93:main.c        ****                 vTaskDelay(500);
  94:main.c        ****                 BatteryLed_Write(0);
  95:main.c        ****                 vTaskDelay(500);
  96:main.c        ****             }
  97:main.c        ****         }
  98:main.c        ****     }
  99:main.c        ****     
 100:main.c        ****     
 101:main.c        ****  }   
 102:main.c        **** #endif
 103:main.c        **** 
 104:main.c        **** #if 0
 105:main.c        **** // Name and age
 106:main.c        **** void zmain(void)
 107:main.c        **** {
 108:main.c        ****     TickType_t start;
 109:main.c        ****     TickType_t end;
 110:main.c        ****     char name[32];
 111:main.c        ****     int age;
 112:main.c        ****     
 113:main.c        ****     
 114:main.c        ****     printf("\n\n");
 115:main.c        ****     
 116:main.c        ****     printf("Enter your name: ");
 117:main.c        ****     //fflush(stdout);
 118:main.c        ****     start = xTaskGetTickCount();
 119:main.c        ****     scanf("%s", name);
 120:main.c        ****     printf("Enter your age: ");
 121:main.c        ****     //fflush(stdout);
 122:main.c        ****     scanf("%d", &age);
 123:main.c        ****     end = xTaskGetTickCount();
 124:main.c        ****     int time_long = end - start;
 125:main.c        ****     //printf("You are [%s], age = %d\n", name, age);
 126:main.c        ****     if (age <= 21){
 127:main.c        ****         if(time_long < 3000){
 128:main.c        ****             printf("\nSuper fast dude!");
 129:main.c        ****         }
 130:main.c        ****         else if((time_long >= 3000)&&(time_long <=5000)){
 131:main.c        ****             printf("\nSo mediocre.");
 132:main.c        ****         }
 133:main.c        ****         else{
 134:main.c        ****             printf("\nMy granny is faster than you!");
 135:main.c        ****         }
 136:main.c        ****     }
 137:main.c        ****     else if((age >= 22)&&(age<=50)){
 138:main.c        ****         if(time_long < 3000){
 139:main.c        ****             printf("\nBe quick or be dead");
 140:main.c        ****         }
 141:main.c        ****         else if((time_long >= 3000)&&(time_long <=5000)){
 142:main.c        ****             printf("\nYou're so average.");
 143:main.c        ****         }
 144:main.c        ****         else{
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 4


 145:main.c        ****             printf("\nHave you been smoking something illegal?");
 146:main.c        ****         }
 147:main.c        ****     }
 148:main.c        ****     else{
 149:main.c        ****         if(time_long <= 3000){
 150:main.c        ****             printf("\nStill going strong");
 151:main.c        ****         }
 152:main.c        ****         else if((time_long >= 4000)&&(time_long <=5000)){
 153:main.c        ****             printf("\nYou are doing ok for your age.");
 154:main.c        ****         }
 155:main.c        ****         else{
 156:main.c        ****             printf("\nDo they still allow you to drive?");
 157:main.c        ****         }
 158:main.c        ****     }
 159:main.c        ****     while(true)
 160:main.c        ****     {
 161:main.c        ****         BatteryLed_Write(!SW1_Read());
 162:main.c        ****         vTaskDelay(100);
 163:main.c        ****     }
 164:main.c        ****  }   
 165:main.c        **** #endif
 166:main.c        **** 
 167:main.c        **** 
 168:main.c        **** #if 0
 169:main.c        **** //battery level//
 170:main.c        **** void zmain(void)
 171:main.c        **** {
 172:main.c        **** 	ADC_Battery_Start();   	 
 173:main.c        **** 
 174:main.c        **** 	int16 adcresult =0;
 175:main.c        **** 	float volts = 0.0;
 176:main.c        **** 
 177:main.c        **** 	printf("\nBoot\n");
 178:main.c        **** 
 179:main.c        **** 	//BatteryLed_Write(1); // Switch led on
 180:main.c        **** 	//BatteryLed_Write(0); // Switch led off
 181:main.c        **** 	//uint8 button;
 182:main.c        **** 	//button = SW1_Read(); // read SW1 on pSoC board
 183:main.c        **** 	// SW1_Read() returns zero when button is pressed
 184:main.c        **** 	// SW1_Read() returns one when button is not pressed
 185:main.c        **** 
 186:main.c        **** 	while(true)
 187:main.c        **** 	{
 188:main.c        ****     	char msg[80];
 189:main.c        ****     	ADC_Battery_StartConvert(); // start sampling
 190:main.c        ****     	if(ADC_Battery_IsEndConversion(ADC_Battery_WAIT_FOR_RESULT)) {   // wait for ADC converted val
 191:main.c        ****         	adcresult = ADC_Battery_GetResult16(); // get the ADC value (0 - 4095)
 192:main.c        ****         	volts=(adcresult*5/4095)*(30/20);
 193:main.c        ****         	// convert value to Volts
 194:main.c        ****         	// you need to implement the conversion
 195:main.c        ****        	 
 196:main.c        ****         	// Print both ADC results and converted value
 197:main.c        ****         	printf("%d %f\r\n",adcresult, volts);
 198:main.c        ****        	 
 199:main.c        ****     	if (volts<4){
 200:main.c        ****         	while(SW1_Read()){
 201:main.c        ****             	BatteryLed_Write(1);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 5


 202:main.c        ****             	vTaskDelay(500);
 203:main.c        ****             	BatteryLed_Write(0);
 204:main.c        ****             	vTaskDelay(500);
 205:main.c        ****         	}
 206:main.c        ****     	}
 207:main.c        ****     	}
 208:main.c        ****     	vTaskDelay(500);
 209:main.c        **** 	}
 210:main.c        ****  }  
 211:main.c        **** 
 212:main.c        ****    
 213:main.c        **** #endif
 214:main.c        **** 
 215:main.c        **** #if 0
 216:main.c        **** // button
 217:main.c        **** void zmain(void)
 218:main.c        **** {
 219:main.c        ****     while(true) {
 220:main.c        ****         printf("Press button within 5 seconds!\n");
 221:main.c        ****         int i = 50;
 222:main.c        ****         while(i > 0) {
 223:main.c        ****             if(SW1_Read() == 0) {
 224:main.c        ****                 break;
 225:main.c        ****             }
 226:main.c        ****             vTaskDelay(100);
 227:main.c        ****             --i;
 228:main.c        ****         }
 229:main.c        ****         if(i > 0) {
 230:main.c        ****             printf("Good work\n");
 231:main.c        ****             while(SW1_Read() == 0) vTaskDelay(10); // wait until button is released
 232:main.c        ****         }
 233:main.c        ****         else {
 234:main.c        ****             printf("You didn't press the button\n");
 235:main.c        ****         }
 236:main.c        ****     }
 237:main.c        **** }
 238:main.c        **** #endif
 239:main.c        **** 
 240:main.c        **** #if 0
 241:main.c        **** // button
 242:main.c        **** void zmain(void)
 243:main.c        **** {
 244:main.c        ****     printf("\nBoot\n");
 245:main.c        **** 
 246:main.c        ****     //BatteryLed_Write(1); // Switch led on 
 247:main.c        ****     BatteryLed_Write(0); // Switch led off 
 248:main.c        ****     
 249:main.c        ****     //uint8 button;
 250:main.c        ****     //button = SW1_Read(); // read SW1 on pSoC board
 251:main.c        ****     // SW1_Read() returns zero when button is pressed
 252:main.c        ****     // SW1_Read() returns one when button is not pressed
 253:main.c        ****     
 254:main.c        ****     bool led = false;
 255:main.c        ****     
 256:main.c        ****     while(true)
 257:main.c        ****     {
 258:main.c        ****         // toggle led state when button is pressed
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 6


 259:main.c        ****         if(SW1_Read() == 0) {
 260:main.c        ****             led = !led;
 261:main.c        ****             BatteryLed_Write(led);
 262:main.c        ****             if(led) printf("Led is ON\n");
 263:main.c        ****             else printf("Led is OFF\n");
 264:main.c        ****             Beep(1000, 150);
 265:main.c        ****             while(SW1_Read() == 0) vTaskDelay(10); // wait while button is being pressed
 266:main.c        ****         }        
 267:main.c        ****     }
 268:main.c        ****  }   
 269:main.c        **** #endif
 270:main.c        **** 
 271:main.c        **** #if 0
 272:main.c        ****     void tankturn_left(uint8 speed_left, uint8 speed_right, int delay);
 273:main.c        ****     
 274:main.c        **** void zmain(void)
 275:main.c        **** {
 276:main.c        ****     Ultra_Start();
 277:main.c        ****     motor_start(0,0);
 278:main.c        ****     motor_forward(0,0);
 279:main.c        ****     
 280:main.c        ****     vTaskDelay(3000);
 281:main.c        ****     
 282:main.c        ****     while(true){
 283:main.c        ****     int distance = Ultra_GetDistance();
 284:main.c        ****     
 285:main.c        ****     if(distance <= 10 && distance !=0){
 286:main.c        ****         motor_backward(50,500);
 287:main.c        ****         Beep(150, 200);
 288:main.c        ****         motor_turn(150,150, 500);
 289:main.c        ****         motor_forward(0,0);
 290:main.c        ****      }
 291:main.c        ****     motor_turn(200,100,50);
 292:main.c        ****     }   
 293:main.c        **** }
 294:main.c        **** #endif
 295:main.c        **** 
 296:main.c        **** #if 0
 297:main.c        **** //ultrasonic sensor//
 298:main.c        **** void zmain(void)
 299:main.c        **** {
 300:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 301:main.c        ****     
 302:main.c        ****     while(true) {
 303:main.c        ****         int d = Ultra_GetDistance();
 304:main.c        ****         // Print the detected distance (centimeters)
 305:main.c        ****         printf("distance = %d\r\n", d);
 306:main.c        ****         vTaskDelay(200);
 307:main.c        ****     }
 308:main.c        **** }   
 309:main.c        **** #endif
 310:main.c        **** 
 311:main.c        **** #if 0
 312:main.c        **** //IR receiverm - how to wait for IR remote commands
 313:main.c        **** void zmain(void)
 314:main.c        **** {
 315:main.c        ****     uint8_t button_;
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 7


 316:main.c        ****     printf("\nStart\n");
 317:main.c        ****     
 318:main.c        ****     while(true){
 319:main.c        ****         button_ = SW1_Read();
 320:main.c        ****         if(button_==0){
 321:main.c        ****             IR_Start();
 322:main.c        ****             printf("\n\nIR test\n");
 323:main.c        ****             struct sensors_ ref;
 324:main.c        ****             struct sensors_ dig;
 325:main.c        ****             bool led = false,loop = true, startline= true;
 326:main.c        ****             int count =0;
 327:main.c        ****             motor_start();              // enable motor controller 
 328:main.c        ****             IR_flush(); // clear IR receive buffer
 329:main.c        ****             printf("Buffer cleared\n");
 330:main.c        ****             
 331:main.c        ****             reflectance_start();
 332:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 333:main.c        ****             vTaskDelay(200);
 334:main.c        ****                 while(startline){
 335:main.c        ****                     // read raw sensor values
 336:main.c        ****                     reflectance_read(&ref);
 337:main.c        ****                     reflectance_digital(&dig); 
 338:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 339:main.c        ****                         motor_turn(50,50,50);       // motor forward
 340:main.c        ****                         Beep(60,80);
 341:main.c        ****                     }
 342:main.c        ****                     else{
 343:main.c        ****                         motor_forward(0,0);       // Stop motors
 344:main.c        ****                         startline = false;
 345:main.c        ****                     }
 346:main.c        ****                 }
 347:main.c        ****             IR_wait();  // wait for IR command
 348:main.c        ****             led = !led;
 349:main.c        ****             BatteryLed_Write(led);   
 350:main.c        ****             
 351:main.c        ****             // Toggle led when IR signal is received
 352:main.c        ****             while(loop)
 353:main.c        ****             {   
 354:main.c        ****                 if(led){
 355:main.c        ****                     // read raw sensor values
 356:main.c        ****                     reflectance_read(&ref);
 357:main.c        ****                     reflectance_digital(&dig); 
 358:main.c        ****                     
 359:main.c        ****                     if(dig.l3 == 1 && dig.r3 == 1 ){
 360:main.c        ****                         motor_turn(50,50,50);       // motor forward
 361:main.c        ****                         vTaskDelay(50);
 362:main.c        ****                         count++;
 363:main.c        ****                         printf("count %d \n",count);
 364:main.c        ****                         if(count >= 7){
 365:main.c        ****                             motor_forward(0,0);       // Stop motors
 366:main.c        ****                             loop = false;
 367:main.c        ****                         }
 368:main.c        ****                     }
 369:main.c        ****                     else{
 370:main.c        ****                          motor_turn(50,50,50);       // motor forward
 371:main.c        ****                         Beep(100,100);
 372:main.c        ****                     }
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 8


 373:main.c        ****                 }
 374:main.c        ****                 else {
 375:main.c        ****                     printf("Led is OFF\n");
 376:main.c        ****                     loop = false;
 377:main.c        ****                 }
 378:main.c        ****                
 379:main.c        ****             }    
 380:main.c        ****         }
 381:main.c        ****     }
 382:main.c        ****  }   
 383:main.c        **** #endif
 384:main.c        **** 
 385:main.c        **** 
 386:main.c        **** #if 0
 387:main.c        **** //IR receiverm - how to wait for IR remote commands
 388:main.c        **** void zmain(void)
 389:main.c        **** {
 390:main.c        ****     uint8_t button_;
 391:main.c        ****     printf("\nStart\n");
 392:main.c        ****     
 393:main.c        ****     while(true){
 394:main.c        ****         button_ = SW1_Read();
 395:main.c        ****         if(button_==0){
 396:main.c        ****             IR_Start();
 397:main.c        ****             printf("\n\nIR test\n");
 398:main.c        ****             struct sensors_ ref;
 399:main.c        ****             struct sensors_ dig;
 400:main.c        ****             bool led = false,loop = true, startline= true/*, crossline= true*/;
 401:main.c        ****             int count =0;
 402:main.c        ****             motor_start();              // enable motor controller 
 403:main.c        ****             IR_flush(); // clear IR receive buffer
 404:main.c        ****             printf("Buffer cleared\n");
 405:main.c        ****             
 406:main.c        ****             reflectance_start();
 407:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 408:main.c        ****             vTaskDelay(200);
 409:main.c        ****                 while(startline){
 410:main.c        ****                     // read raw sensor values
 411:main.c        ****                     reflectance_read(&ref);
 412:main.c        ****                     reflectance_digital(&dig); 
 413:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 414:main.c        ****                         motor_turn(50,50,0);       // motor forward
 415:main.c        ****                         //Beep(60,80);
 416:main.c        ****                     }
 417:main.c        ****                     else{
 418:main.c        ****                         motor_forward(0,0);       // Stop motors
 419:main.c        ****                         startline = false;
 420:main.c        ****                     }
 421:main.c        ****                 }
 422:main.c        ****             IR_wait();  // wait for IR command
 423:main.c        ****             led = !led;
 424:main.c        ****             BatteryLed_Write(led);   
 425:main.c        ****             
 426:main.c        ****             // Toggle led when IR signal is received
 427:main.c        ****             while(loop)
 428:main.c        ****             {   
 429:main.c        ****                 if(led){
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 9


 430:main.c        ****                     //do {
 431:main.c        ****                         // read raw sensor values
 432:main.c        ****                     //reflectance_read(&ref);
 433:main.c        ****                     reflectance_digital(&dig); 
 434:main.c        ****                     
 435:main.c        ****                    
 436:main.c        ****                         /*if(dig.l3 == 1 && dig.l2 == 1 && dig.l1 == 1 && dig.r3 == 1 && dig.r2 == 
 437:main.c        ****                             motor_forward(0,0);
 438:main.c        ****                             count++;
 439:main.c        ****                             if(count==1){
 440:main.c        ****                                 motor_turn(50,50,50);       // motor forward
 441:main.c        ****                             }
 442:main.c        ****                             if (count==2){
 443:main.c        ****                                 motor_turn_left(10,100,500);
 444:main.c        ****                             }
 445:main.c        ****                             if (count<=4){
 446:main.c        ****                                 motor_turn_right(100,10,500);
 447:main.c        ****                             }
 448:main.c        ****                             if (count==5){
 449:main.c        ****                                 motor_forward(0,0);       // Stop motors
 450:main.c        ****                                 led = false;
 451:main.c        ****                                 BatteryLed_Write(led);
 452:main.c        ****                             }
 453:main.c        ****                         } */
 454:main.c        ****                         if(dig.r2 == 1 && dig.r1 == 1){
 455:main.c        ****                             //count++;
 456:main.c        ****                             motor_turn(100,10,0);       // motor turn left
 457:main.c        ****                             //Beep(20,20);
 458:main.c        ****                             vTaskDelay(0);
 459:main.c        ****                             
 460:main.c        ****                             printf("count %d \n",count);
 461:main.c        ****                         }
 462:main.c        ****                         if(dig.l2 == 1 && dig.l1 == 1){
 463:main.c        ****                             //count++;
 464:main.c        ****                             motor_turn(10,100,0);       // motor turn right
 465:main.c        ****                            // Beep(20,20);
 466:main.c        ****                             vTaskDelay(0);
 467:main.c        ****                             
 468:main.c        ****                             printf("count %d \n",count);
 469:main.c        ****                         }
 470:main.c        ****                        // printf("count %d \n",count);
 471:main.c        ****                         if (dig.l1 == 1 && dig.r1 == 1){
 472:main.c        ****                             
 473:main.c        ****                             motor_turn(50,50,0);       // motor forward
 474:main.c        ****                             vTaskDelay(0);
 475:main.c        ****                             //Beep(50,50);
 476:main.c        ****                             //count++;
 477:main.c        ****                             printf("count %d \n",count);
 478:main.c        ****                         }
 479:main.c        ****                    
 480:main.c        ****                 }
 481:main.c        ****                 else {
 482:main.c        ****                     printf("Led is OFF\n");
 483:main.c        ****                     loop = false;
 484:main.c        ****                 }
 485:main.c        ****                
 486:main.c        ****             }    
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 10


 487:main.c        ****         }
 488:main.c        ****     }
 489:main.c        ****  }  
 490:main.c        **** #endif
 491:main.c        **** 
 492:main.c        **** #if 0
 493:main.c        **** //IR receiverm - how to wait for IR remote commands
 494:main.c        **** void zmain(void)
 495:main.c        **** {
 496:main.c        ****     //IR receiverm - how to wait for IR remote commands
 497:main.c        **** void zmain(void);
 498:main.c        **** 
 499:main.c        ****     uint8_t button_;
 500:main.c        ****     printf("\nStart\n");
 501:main.c        **** 
 502:main.c        ****     while(true){
 503:main.c        ****         button_ = SW1_Read();
 504:main.c        ****         if(button_==0){
 505:main.c        ****             IR_Start();
 506:main.c        ****             printf("\n\nIR test\n");
 507:main.c        ****             struct sensors_ ref;
 508:main.c        ****             struct sensors_ dig;
 509:main.c        ****             bool led = false,loop = true, startline= true;
 510:main.c        ****             int count =0;
 511:main.c        ****             motor_start();              // enable motor controller 
 512:main.c        ****             IR_flush(); // clear IR receive buffer
 513:main.c        ****             printf("Buffer cleared\n");
 514:main.c        **** 
 515:main.c        ****             reflectance_start();
 516:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 517:main.c        ****             vTaskDelay(200);
 518:main.c        ****                 while(startline){
 519:main.c        ****                     // read raw sensor values
 520:main.c        ****                     reflectance_read(&ref);
 521:main.c        ****                     reflectance_digital(&dig); 
 522:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 523:main.c        ****                         motor_turn(50,50,50);       // motor forward
 524:main.c        ****                         Beep(60,80);
 525:main.c        ****                     }
 526:main.c        **** 
 527:main.c        ****                     else{
 528:main.c        ****                         motor_forward(0,0);       // Stop motors
 529:main.c        ****                         startline = false;
 530:main.c        ****                     }
 531:main.c        ****                 }
 532:main.c        ****             IR_wait();  // wait for IR command
 533:main.c        ****             led = !led;
 534:main.c        ****             BatteryLed_Write(led);   
 535:main.c        **** 
 536:main.c        ****             // Toggle led when IR signal is received
 537:main.c        ****             while(loop)
 538:main.c        ****             {   
 539:main.c        ****                 if(led){
 540:main.c        ****                     // read raw sensor values
 541:main.c        ****                     reflectance_read(&ref);
 542:main.c        ****                     reflectance_digital(&dig); 
 543:main.c        **** 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 11


 544:main.c        ****                     if(dig.l3 == 1 && dig.r3 == 1 && dig.l1 == 1 && dig.r1 == 1){
 545:main.c        ****                         count++;
 546:main.c        ****                         printf("\nStart\n");
 547:main.c        ****                         printf("count %d \n",count);
 548:main.c        **** 
 549:main.c        **** 
 550:main.c        ****                         while (dig.r3 == 1 && dig.l3 == 1){
 551:main.c        ****                          motor_turn(50,49,0);
 552:main.c        ****                         reflectance_digital(&dig);
 553:main.c        ****                         }
 554:main.c        ****                         if(count >= 2){
 555:main.c        ****                             motor_forward(210,0);       // Stop motors
 556:main.c        ****                         }
 557:main.c        ****                     }
 558:main.c        **** 
 559:main.c        ****                     else if (dig.l1 == 1 && dig.r1 == 1){
 560:main.c        ****                         motor_turn(210,210,0);   //goes forward lul
 561:main.c        ****                         printf("%5d %5d", ref.l1, ref.r1);
 562:main.c        ****                     }
 563:main.c        ****                     else if (dig.l1 == 0 && dig.r1 == 1){
 564:main.c        ****                         motor_turn(210,0,0);  //turns right lul
 565:main.c        ****                         printf("%5d %5d", ref.l1, ref.r1);
 566:main.c        ****                     }
 567:main.c        ****                     else if (dig.l1 == 1 && dig.r1 == 0){
 568:main.c        ****                         motor_turn(0,210,0);   ///should turn left, right lul??   
 569:main.c        ****                         printf("%5d %5d", ref.l1, ref.r1);
 570:main.c        ****                     }
 571:main.c        ****                     else if (dig.l3 == 1 && dig.r3 == 1 && dig.l1 == 1 && dig.r1 == 1 && dig.l2 == 
 572:main.c        ****                         motor_turn(0,0,100000);   ///should stop, right lul??   
 573:main.c        **** 
 574:main.c        **** 
 575:main.c        ****                         }
 576:main.c        ****                     }
 577:main.c        ****                 }
 578:main.c        **** 
 579:main.c        **** 
 580:main.c        ****             }    
 581:main.c        ****         }
 582:main.c        **** 
 583:main.c        **** }   
 584:main.c        **** #endif
 585:main.c        **** 
 586:main.c        **** 
 587:main.c        **** #if 0
 588:main.c        **** //reflectance
 589:main.c        **** void zmain(void)
 590:main.c        **** {
 591:main.c        ****     struct sensors_ ref;
 592:main.c        ****     struct sensors_ dig;
 593:main.c        **** 
 594:main.c        ****     reflectance_start();
 595:main.c        ****     reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor threshold
 596:main.c        ****     
 597:main.c        **** 
 598:main.c        ****     while(true)
 599:main.c        ****     {
 600:main.c        ****         // read raw sensor values
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 12


 601:main.c        ****         reflectance_read(&ref);
 602:main.c        ****         // print out each period of reflectance sensors
 603:main.c        ****         printf("%5d %5d %5d %5d %5d %5d\r\n", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2, ref.r3);     
 604:main.c        ****         
 605:main.c        ****         // read digital values that are based on threshold. 0 = white, 1 = black
 606:main.c        ****         // when blackness value is over threshold the sensors reads 1, otherwise 0
 607:main.c        ****         reflectance_digital(&dig); 
 608:main.c        ****         //print out 0 or 1 according to results of reflectance period
 609:main.c        ****         printf("%5d %5d %5d %5d %5d %5d \r\n", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2, dig.r3);    
 610:main.c        ****         
 611:main.c        ****         vTaskDelay(200);
 612:main.c        ****     }
 613:main.c        **** }   
 614:main.c        **** #endif
 615:main.c        **** 
 616:main.c        **** 
 617:main.c        **** #if 0
 618:main.c        **** //motor
 619:main.c        **** void zmain(void)
 620:main.c        **** {
 621:main.c        ****     struct sensors_ ref;
 622:main.c        ****     struct sensors_ dig;
 623:main.c        **** 
 624:main.c        ****     reflectance_start();
 625:main.c        ****     reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor threshold
 626:main.c        ****     
 627:main.c        ****     reflectance_digital(&dig);
 628:main.c        ****     
 629:main.c        ****     motor_start();              // enable motor controller
 630:main.c        ****     motor_forward(0,0);         // set speed to zero to stop motors
 631:main.c        **** 
 632:main.c        ****     vTaskDelay(3000);
 633:main.c        ****     
 634:main.c        ****     if(dig.l3, dig.l2, dig.l1){
 635:main.c        ****         
 636:main.c        ****     }
 637:main.c        ****     motor_forward(100,2000);     // moving forward
 638:main.c        ****     motor_turn(200,50,2000);     // turn
 639:main.c        ****     motor_turn(50,200,2000);     // turn
 640:main.c        ****     motor_backward(100,2000);    // moving backward
 641:main.c        ****      
 642:main.c        ****     motor_forward(0,0);         // stop motors
 643:main.c        **** 
 644:main.c        ****     motor_stop();               // disable motor controller
 645:main.c        ****     
 646:main.c        ****     while(true)
 647:main.c        ****     {
 648:main.c        ****         vTaskDelay(100);
 649:main.c        ****     }
 650:main.c        **** }
 651:main.c        **** #endif
 652:main.c        **** 
 653:main.c        **** #if 0
 654:main.c        **** /* Example of how to use te Accelerometer!!!*/
 655:main.c        **** void zmain(void)
 656:main.c        **** {
 657:main.c        ****     struct accData_ data;
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 13


 658:main.c        ****     
 659:main.c        ****     printf("Accelerometer test...\n");
 660:main.c        **** 
 661:main.c        ****     if(!LSM303D_Start()){
 662:main.c        ****         printf("LSM303D failed to initialize!!! Program is Ending!!!\n");
 663:main.c        ****         vTaskSuspend(NULL);
 664:main.c        ****     }
 665:main.c        ****     else {
 666:main.c        ****         printf("Device Ok...\n");
 667:main.c        ****     }
 668:main.c        ****     motor_start();              // enable motor controller
 669:main.c        ****     motor_forward(0,0);
 670:main.c        ****     srand(time(NULL));   // Initialization, should only be called once.
 671:main.c        ****     int r=0, counter=0;
 672:main.c        ****     while(true)
 673:main.c        ****     {
 674:main.c        ****         LSM303D_Read_Acc(&data);
 675:main.c        ****        
 676:main.c        ****         motor_forward(200,20);
 677:main.c        ****         //vTaskDelay(200);
 678:main.c        ****         if (counter == 0) r = rand() % 2;
 679:main.c        ****         if (counter > 19){
 680:main.c        ****             counter = 0;
 681:main.c        ****             r = rand() % 2;
 682:main.c        ****         }// Returns a pseudo-random integer between 0 and RAND_MAX.
 683:main.c        ****             if(r == 0){
 684:main.c        ****                 motor_turn(200,50,5);
 685:main.c        ****                 vTaskDelay(0);
 686:main.c        ****                 //motor_forward(0,0);
 687:main.c        ****             }
 688:main.c        ****             else if(r == 1){
 689:main.c        ****                 motor_turn(50,200,5);
 690:main.c        ****                 vTaskDelay(0);
 691:main.c        ****                 //motor_forward(0,0);
 692:main.c        ****             }
 693:main.c        ****             else {
 694:main.c        ****                 motor_forward(200,20);
 695:main.c        ****                 vTaskDelay(0);
 696:main.c        ****             }
 697:main.c        ****         LSM303D_Read_Acc(&data);
 698:main.c        ****         if((data.accX<-4000)){
 699:main.c        ****             int r = rand() % 2;      // Returns a pseudo-random integer between 0 and RAND_MAX.
 700:main.c        ****             if(r == 0){
 701:main.c        ****                 motor_backward(80,50);
 702:main.c        ****                 motor_turn(200,50,500);
 703:main.c        ****                 vTaskDelay(0);
 704:main.c        ****                 //motor_forward(0,0);
 705:main.c        ****             }
 706:main.c        ****             else{
 707:main.c        ****                 motor_backward(80,50);
 708:main.c        ****                 motor_turn(50,200,500);
 709:main.c        ****                 vTaskDelay(0);
 710:main.c        ****                 //motor_forward(0,0);
 711:main.c        ****             }
 712:main.c        ****             motor_forward(100,100);
 713:main.c        ****         }
 714:main.c        ****         counter++;
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 14


 715:main.c        ****         printf("%8d %8d %8d\n",data.accX, data.accY, data.accZ);
 716:main.c        ****         vTaskDelay(0);
 717:main.c        ****     }
 718:main.c        ****  }   
 719:main.c        **** #endif    
 720:main.c        **** 
 721:main.c        **** #if 0
 722:main.c        **** // MQTT test
 723:main.c        **** void zmain(void)
 724:main.c        **** {
 725:main.c        ****     int ctr = 0;
 726:main.c        **** 
 727:main.c        ****     printf("\nBoot\n");
 728:main.c        ****     send_mqtt("Zumo01/debug", "Boot");
 729:main.c        **** 
 730:main.c        ****     //BatteryLed_Write(1); // Switch led on 
 731:main.c        ****     BatteryLed_Write(0); // Switch led off 
 732:main.c        **** 
 733:main.c        ****     while(true)
 734:main.c        ****     {
 735:main.c        ****         printf("Ctr: %d, Button: %d\n", ctr, SW1_Read());
 736:main.c        ****         print_mqtt("Zumo01/debug", "Ctr: %d, Button: %d", ctr, SW1_Read());
 737:main.c        **** 
 738:main.c        ****         vTaskDelay(1000);
 739:main.c        ****         ctr++;
 740:main.c        ****     }
 741:main.c        ****  }   
 742:main.c        **** #endif
 743:main.c        **** 
 744:main.c        **** #if 0
 745:main.c        **** 
 746:main.c        ****     
 747:main.c        **** void zmain(void)
 748:main.c        **** {
 749:main.c        ****     Ultra_Start();
 750:main.c        ****     motor_start(0,0);
 751:main.c        ****     motor_forward(0,0);
 752:main.c        ****     
 753:main.c        ****     vTaskDelay(3000);
 754:main.c        ****     
 755:main.c        ****     while(true){
 756:main.c        ****         int distance = Ultra_GetDistance();
 757:main.c        ****     
 758:main.c        ****         if(distance <= 10 && distance !=0){
 759:main.c        ****             int r = rand() % 2;      // Returns a pseudo-random integer between 0 and RAND_MAX.
 760:main.c        ****             if(r == 0){
 761:main.c        ****                 motor_turn(50,200,500);
 762:main.c        ****                 vTaskDelay(0);
 763:main.c        ****                 print_mqtt("Zumo006/turn", "left");
 764:main.c        ****                 //motor_forward(0,0);
 765:main.c        ****             }
 766:main.c        ****             else{
 767:main.c        ****                 motor_turn(200,50,500);
 768:main.c        ****                 vTaskDelay(0);
 769:main.c        ****                 print_mqtt("Zumo006/turn", "right");
 770:main.c        ****                 //motor_forward(0,0);
 771:main.c        ****             }
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 15


 772:main.c        ****             motor_forward(100,100);
 773:main.c        ****         }
 774:main.c        ****         
 775:main.c        ****     }   
 776:main.c        **** }
 777:main.c        **** #endif
 778:main.c        **** 
 779:main.c        **** #if 0
 780:main.c        **** //IR receiverm - how to wait for IR remote commands
 781:main.c        **** void zmain(void)
 782:main.c        **** {
 783:main.c        ****     RTC_Start(); // start real time clock
 784:main.c        ****     
 785:main.c        ****     RTC_TIME_DATE now;
 786:main.c        **** 
 787:main.c        ****     time_t myTime;
 788:main.c        ****     struct tm * timeinfo;
 789:main.c        ****     time( &myTime );
 790:main.c        ****     timeinfo = localtime( &myTime );
 791:main.c        ****     
 792:main.c        ****     // set current time
 793:main.c        ****     now.Hour = timeinfo->tm_hour;
 794:main.c        ****     now.Min = timeinfo->tm_min;
 795:main.c        ****     now.Sec = timeinfo->tm_sec6;
 796:main.c        ****     now.DayOfMonth = timeinfo->tm_mday;
 797:main.c        ****     now.Month = timeinfo->tm_mon+1;
 798:main.c        ****     now.Year = timeinfo->tm_year+1900;
 799:main.c        ****     RTC_WriteTime(&now); // write the time to real time clock
 800:main.c        ****     
 801:main.c        ****     uint8_t button_;
 802:main.c        ****     printf("\nStart\n");
 803:main.c        ****     
 804:main.c        ****     while(true){
 805:main.c        ****         button_ = SW1_Read();
 806:main.c        ****         if(button_==0){
 807:main.c        ****             IR_Start();
 808:main.c        ****             printf("\n\nIR test\n");
 809:main.c        ****             struct sensors_ ref;
 810:main.c        ****             struct sensors_ dig;
 811:main.c        ****             bool led = false,loop = true, startline= true;
 812:main.c        ****             int count =0;
 813:main.c        ****             motor_start();              // enable motor controller 
 814:main.c        ****             IR_flush(); // clear IR receive buffer
 815:main.c        ****             printf("Buffer cleared\n");
 816:main.c        ****             
 817:main.c        ****             reflectance_start();
 818:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 819:main.c        ****             vTaskDelay(200);
 820:main.c        ****                 while(startline){
 821:main.c        ****                     // read raw sensor values
 822:main.c        ****                     reflectance_read(&ref);
 823:main.c        ****                     reflectance_digital(&dig); 
 824:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 825:main.c        ****                         motor_turn(50,50,50);       // motor forward
 826:main.c        ****                         Beep(60,80);
 827:main.c        ****                     }
 828:main.c        ****                     else{
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 16


 829:main.c        ****                         motor_forward(0,0);       // Stop motors
 830:main.c        ****                         startline = false;
 831:main.c        ****                     }
 832:main.c        ****                 }
 833:main.c        ****             IR_wait();  // wait for IR command
 834:main.c        ****             led = !led;
 835:main.c        ****             BatteryLed_Write(led);   
 836:main.c        ****             
 837:main.c        ****             // Toggle led when IR signal is received
 838:main.c        ****             while(loop)
 839:main.c        ****             {   
 840:main.c        ****                 if(led){
 841:main.c        ****                     // read raw sensor values
 842:main.c        ****                     reflectance_read(&ref);
 843:main.c        ****                     reflectance_digital(&dig); 
 844:main.c        ****                     
 845:main.c        ****                     if(dig.l3 == 1 && dig.r3 == 1 ){
 846:main.c        ****                         motor_turn(50,50,50);       // motor forward
 847:main.c        ****                         motor_forward(0,0);       // Stop motors
 848:main.c        ****                         vTaskDelay(50);
 849:main.c        ****                         count++;
 850:main.c        ****                         printf("count %d \n",count);
 851:main.c        ****                         printf("%2d:%02d.%02d\n", now.Hour, now.Min, now.Sec);
 852:main.c        ****                         print_mqtt("Zumo006/lap", "%2d:%02d.%02d", now.Hour, now.Min, now.Sec);
 853:main.c        ****                         /*if(count >= 7){
 854:main.c        ****                             motor_forward(0,0);       // Stop motors
 855:main.c        ****                             loop = false;
 856:main.c        ****                         }*/
 857:main.c        ****                     }
 858:main.c        ****                     else{
 859:main.c        ****                          motor_turn(50,50,50);       // motor forward
 860:main.c        ****                         Beep(100,100);
 861:main.c        ****                     }
 862:main.c        ****                 }
 863:main.c        ****                 else {
 864:main.c        ****                     printf("Led is OFF\n");
 865:main.c        ****                     loop = false;
 866:main.c        ****                 }
 867:main.c        ****                
 868:main.c        ****             }    
 869:main.c        ****         }
 870:main.c        ****     }
 871:main.c        ****  }
 872:main.c        **** #endif
 873:main.c        **** 
 874:main.c        **** #if 0
 875:main.c        **** void zmain(void)
 876:main.c        **** {    
 877:main.c        ****     struct accData_ data;
 878:main.c        ****     struct sensors_ ref;
 879:main.c        ****     struct sensors_ dig;
 880:main.c        ****     
 881:main.c        ****     printf("MQTT and sensor test...\n");
 882:main.c        **** 
 883:main.c        ****     if(!LSM303D_Start()){
 884:main.c        ****         printf("LSM303D failed to initialize!!! Program is Ending!!!\n");
 885:main.c        ****         vTaskSuspend(NULL);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 17


 886:main.c        ****     }
 887:main.c        ****     else {
 888:main.c        ****         printf("Accelerometer Ok...\n");
 889:main.c        ****     }
 890:main.c        ****     
 891:main.c        ****     int ctr = 0;
 892:main.c        ****     reflectance_start();
 893:main.c        ****     while(true)
 894:main.c        ****     {
 895:main.c        ****         LSM303D_Read_Acc(&data);
 896:main.c        ****         // send data when we detect a hit and at 10 second intervals
 897:main.c        ****         if(data.accX > 1500 || ++ctr > 1000) {
 898:main.c        ****             printf("Acc: %8d %8d %8d\n",data.accX, data.accY, data.accZ);
 899:main.c        ****             print_mqtt("Zumo01/acc", "%d,%d,%d", data.accX, data.accY, data.accZ);
 900:main.c        ****             reflectance_read(&ref);
 901:main.c        ****             printf("Ref: %8d %8d %8d %8d %8d %8d\n", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2, ref.r3
 902:main.c        ****             print_mqtt("Zumo01/ref", "%d,%d,%d,%d,%d,%d", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2, r
 903:main.c        ****             reflectance_digital(&dig);
 904:main.c        ****             printf("Dig: %8d %8d %8d %8d %8d %8d\n", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2, dig.r3
 905:main.c        ****             print_mqtt("Zumo01/dig", "%d,%d,%d,%d,%d,%d", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2, d
 906:main.c        ****             ctr = 0;
 907:main.c        ****         }
 908:main.c        ****         vTaskDelay(10);
 909:main.c        ****     }
 910:main.c        ****  }   
 911:main.c        **** 
 912:main.c        **** #endif
 913:main.c        **** 
 914:main.c        **** #if 0
 915:main.c        **** void zmain(void)
 916:main.c        **** {    
 917:main.c        ****     RTC_Start(); // start real time clock
 918:main.c        ****     
 919:main.c        ****     RTC_TIME_DATE now;
 920:main.c        **** 
 921:main.c        ****     // set current time
 922:main.c        ****     now.Hour = 12;
 923:main.c        ****     now.Min = 34;
 924:main.c        ****     now.Sec = 56;
 925:main.c        ****     now.DayOfMonth = 25;
 926:main.c        ****     now.Month = 9;
 927:main.c        ****     now.Year = 2018;
 928:main.c        ****     RTC_WriteTime(&now); // write the time to real time clock
 929:main.c        **** 
 930:main.c        ****     while(true)
 931:main.c        ****     {
 932:main.c        ****         if(SW1_Read() == 0) {
 933:main.c        ****             // read the current time
 934:main.c        ****             RTC_DisableInt(); // Disable Interrupt of RTC Component
 935:main.c        ****             now = *RTC_ReadTime(); // copy the current time to a local variable
 936:main.c        ****             RTC_EnableInt(); // Enable Interrupt of RTC Component
 937:main.c        **** 
 938:main.c        ****             // print the current time
 939:main.c        ****             printf("%2d:%02d.%02d\n", now.Hour, now.Min, now.Sec);
 940:main.c        ****             print_mqtt("Zumo006/time", "%2d:%02d.%02d", now.Hour, now.Min, now.Sec);
 941:main.c        ****             
 942:main.c        ****             // wait until button is released
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 18


 943:main.c        ****             while(SW1_Read() == 0) vTaskDelay(50);
 944:main.c        ****         }
 945:main.c        ****         vTaskDelay(50);
 946:main.c        ****     }
 947:main.c        ****  }   
 948:main.c        **** #endif
 949:main.c        **** 
 950:main.c        **** #if 1
 951:main.c        **** //main project
 952:main.c        **** void zmain(void)
 953:main.c        **** {
  28              		.loc 1 953 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 8AB0     		sub	sp, sp, #40
  37              		.cfi_def_cfa_offset 48
 954:main.c        ****     struct accData_ data;
 955:main.c        ****     
 956:main.c        ****     uint8_t button_;
 957:main.c        ****     printf("\nStart\n");
  38              		.loc 1 957 0
  39 0004 6348     		ldr	r0, .L17
  40 0006 FFF7FEFF 		bl	puts
  41              	.LVL0:
  42              	.L2:
 958:main.c        ****     
 959:main.c        ****     while(true){
 960:main.c        ****         button_ = SW1_Read();
  43              		.loc 1 960 0
  44 000a FFF7FEFF 		bl	SW1_Read
  45              	.LVL1:
 961:main.c        ****         if(button_==0){
  46              		.loc 1 961 0
  47 000e 0028     		cmp	r0, #0
  48 0010 FBD1     		bne	.L2
  49              	.LBB2:
 962:main.c        ****             IR_Start();
  50              		.loc 1 962 0
  51 0012 FFF7FEFF 		bl	IR_Start
  52              	.LVL2:
 963:main.c        ****             printf("\n\nIR test\n");
  53              		.loc 1 963 0
  54 0016 6048     		ldr	r0, .L17+4
  55 0018 FFF7FEFF 		bl	puts
  56              	.LVL3:
 964:main.c        ****             struct sensors_ ref;
 965:main.c        ****             struct sensors_ dig;
 966:main.c        ****             bool led = false,loop1 = true, startline= true, loop2 = true;
 967:main.c        ****             int count =0;
 968:main.c        ****             motor_start();              // enable motor controller
  57              		.loc 1 968 0
  58 001c FFF7FEFF 		bl	motor_start
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 19


  59              	.LVL4:
 969:main.c        ****             print_mqtt("Zumo006/ready","line");
  60              		.loc 1 969 0
  61 0020 5E49     		ldr	r1, .L17+8
  62 0022 5F48     		ldr	r0, .L17+12
  63 0024 FFF7FEFF 		bl	print_mqtt
  64              	.LVL5:
 970:main.c        ****             IR_flush(); // clear IR receive buffer
  65              		.loc 1 970 0
  66 0028 FFF7FEFF 		bl	IR_flush
  67              	.LVL6:
 971:main.c        ****             printf("Buffer cleared\n");
  68              		.loc 1 971 0
  69 002c 5D48     		ldr	r0, .L17+16
  70 002e FFF7FEFF 		bl	puts
  71              	.LVL7:
 972:main.c        ****             
 973:main.c        ****             reflectance_start();
  72              		.loc 1 973 0
  73 0032 FFF7FEFF 		bl	reflectance_start
  74              	.LVL8:
 974:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
  75              		.loc 1 974 0
  76 0036 42F22830 		movw	r0, #9000
  77 003a 0190     		str	r0, [sp, #4]
  78 003c 0090     		str	r0, [sp]
  79 003e 42F6F823 		movw	r3, #11000
  80 0042 1A46     		mov	r2, r3
  81 0044 0146     		mov	r1, r0
  82 0046 FFF7FEFF 		bl	reflectance_set_threshold
  83              	.LVL9:
 975:main.c        ****             vTaskDelay(200);
  84              		.loc 1 975 0
  85 004a C820     		movs	r0, #200
  86 004c FFF7FEFF 		bl	vTaskDelay
  87              	.LVL10:
 966:main.c        ****             int count =0;
  88              		.loc 1 966 0
  89 0050 0124     		movs	r4, #1
 976:main.c        ****                 while(startline){
  90              		.loc 1 976 0
  91 0052 1CE0     		b	.L3
  92              	.LVL11:
  93              	.L6:
 977:main.c        ****                     // read raw sensor values
 978:main.c        ****                     reflectance_read(&ref);
  94              		.loc 1 978 0
  95 0054 02A8     		add	r0, sp, #8
  96 0056 FFF7FEFF 		bl	reflectance_read
  97              	.LVL12:
 979:main.c        ****                     reflectance_digital(&dig); 
  98              		.loc 1 979 0
  99 005a 05A8     		add	r0, sp, #20
 100 005c FFF7FEFF 		bl	reflectance_digital
 101              	.LVL13:
 980:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 102              		.loc 1 980 0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 20


 103 0060 BDF81430 		ldrh	r3, [sp, #20]
 104 0064 012B     		cmp	r3, #1
 105 0066 0DD0     		beq	.L4
 106              		.loc 1 980 0 is_stmt 0 discriminator 1
 107 0068 BDF81E30 		ldrh	r3, [sp, #30]
 108 006c 012B     		cmp	r3, #1
 109 006e 09D0     		beq	.L4
 981:main.c        ****                         motor_turn(50,50,50);       // motor forward
 110              		.loc 1 981 0 is_stmt 1
 111 0070 3222     		movs	r2, #50
 112 0072 1146     		mov	r1, r2
 113 0074 1046     		mov	r0, r2
 114 0076 FFF7FEFF 		bl	motor_turn
 115              	.LVL14:
 982:main.c        ****                         Beep(60,80);
 116              		.loc 1 982 0
 117 007a 5021     		movs	r1, #80
 118 007c 3C20     		movs	r0, #60
 119 007e FFF7FEFF 		bl	Beep
 120              	.LVL15:
 121 0082 04E0     		b	.L3
 122              	.L4:
 983:main.c        ****                     }
 984:main.c        ****                     else{
 985:main.c        ****                         motor_forward(0,0);       // Stop motors
 123              		.loc 1 985 0
 124 0084 0021     		movs	r1, #0
 125 0086 0846     		mov	r0, r1
 126 0088 FFF7FEFF 		bl	motor_forward
 127              	.LVL16:
 986:main.c        ****                         startline = false;
 128              		.loc 1 986 0
 129 008c 0024     		movs	r4, #0
 130              	.LVL17:
 131              	.L3:
 976:main.c        ****                     // read raw sensor values
 132              		.loc 1 976 0
 133 008e 002C     		cmp	r4, #0
 134 0090 E0D1     		bne	.L6
 987:main.c        ****                     }
 988:main.c        ****                 }
 989:main.c        ****             print_mqtt("Zumo006/ready","line");
 135              		.loc 1 989 0
 136 0092 4249     		ldr	r1, .L17+8
 137 0094 4248     		ldr	r0, .L17+12
 138 0096 FFF7FEFF 		bl	print_mqtt
 139              	.LVL18:
 990:main.c        ****             IR_wait();  // wait for IR command
 140              		.loc 1 990 0
 141 009a FFF7FEFF 		bl	IR_wait
 142              	.LVL19:
 991:main.c        ****             CySysTickEnable();
 143              		.loc 1 991 0
 144 009e FFF7FEFF 		bl	CySysTickEnable
 145              	.LVL20:
 992:main.c        ****             CySysTickStart();
 146              		.loc 1 992 0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 21


 147 00a2 FFF7FEFF 		bl	CySysTickStart
 148              	.LVL21:
 993:main.c        ****             int start = CySysTickGetValue();
 149              		.loc 1 993 0
 150 00a6 FFF7FEFF 		bl	CySysTickGetValue
 151              	.LVL22:
 994:main.c        ****             print_mqtt("Zumo006/start","%d", start);
 152              		.loc 1 994 0
 153 00aa 0246     		mov	r2, r0
 154 00ac 3E49     		ldr	r1, .L17+20
 155 00ae 3F48     		ldr	r0, .L17+24
 156              	.LVL23:
 157 00b0 FFF7FEFF 		bl	print_mqtt
 158              	.LVL24:
 995:main.c        ****             led = !led;
 996:main.c        ****             BatteryLed_Write(led);   
 159              		.loc 1 996 0
 160 00b4 0120     		movs	r0, #1
 161 00b6 FFF7FEFF 		bl	BatteryLed_Write
 162              	.LVL25:
 163 00ba 60E0     		b	.L15
 164              	.LVL26:
 165              	.L12:
 166              	.LBB3:
 997:main.c        ****             
 998:main.c        ****             // Toggle led when IR signal is received
 999:main.c        ****             while(loop1)
1000:main.c        ****             {   
1001:main.c        ****                 if(led){
1002:main.c        ****                     while(loop2){
1003:main.c        ****                     // read raw sensor values
1004:main.c        ****                     reflectance_read(&ref);
1005:main.c        ****                     reflectance_digital(&dig); 
1006:main.c        **** 
1007:main.c        ****                     LSM303D_Read_Acc(&data);
1008:main.c        ****                     do{
1009:main.c        ****                         //motor_turn(50,50,0);
1010:main.c        ****                         if(data.accX<-4000){
 167              		.loc 1 1010 0
 168 00bc BDF92030 		ldrsh	r3, [sp, #32]
 169 00c0 13F57A6F 		cmn	r3, #4000
 170 00c4 24DA     		bge	.L8
 171              	.LBB4:
1011:main.c        ****                             print_mqtt("Zumo006/hit","%d", CySysTickGetValue());
 172              		.loc 1 1011 0
 173 00c6 FFF7FEFF 		bl	CySysTickGetValue
 174              	.LVL27:
 175 00ca 0246     		mov	r2, r0
 176 00cc 3649     		ldr	r1, .L17+20
 177 00ce 3848     		ldr	r0, .L17+28
 178 00d0 FFF7FEFF 		bl	print_mqtt
 179              	.LVL28:
1012:main.c        ****                             int r = rand() % 2;      // Returns a pseudo-random integer between 0 a
 180              		.loc 1 1012 0
 181 00d4 FFF7FEFF 		bl	rand
 182              	.LVL29:
 183 00d8 364B     		ldr	r3, .L17+32
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 22


 184 00da 1840     		ands	r0, r0, r3
 185 00dc 03D5     		bpl	.L9
 186 00de 0138     		subs	r0, r0, #1
 187 00e0 60F00100 		orn	r0, r0, #1
 188 00e4 0130     		adds	r0, r0, #1
 189              	.L9:
 190              	.LVL30:
1013:main.c        ****                             if(r == 0){
 191              		.loc 1 1013 0
 192 00e6 48B9     		cbnz	r0, .L10
1014:main.c        ****                                 //motor_backward(80,50);
1015:main.c        ****                                 motor_turn(200,50,500);
 193              		.loc 1 1015 0
 194 00e8 4FF4FA72 		mov	r2, #500
 195 00ec 3221     		movs	r1, #50
 196 00ee C820     		movs	r0, #200
 197              	.LVL31:
 198 00f0 FFF7FEFF 		bl	motor_turn
 199              	.LVL32:
1016:main.c        ****                                 vTaskDelay(0);
 200              		.loc 1 1016 0
 201 00f4 0020     		movs	r0, #0
 202 00f6 FFF7FEFF 		bl	vTaskDelay
 203              	.LVL33:
 204 00fa 0EE0     		b	.L11
 205              	.LVL34:
 206              	.L10:
1017:main.c        ****                                 //motor_forward(0,0);
1018:main.c        ****                             }
1019:main.c        ****                             else{
1020:main.c        ****                                 //motor_backward(80,50);
1021:main.c        ****                                 motor_turn(50,200,500);
 207              		.loc 1 1021 0
 208 00fc 4FF4FA72 		mov	r2, #500
 209 0100 C821     		movs	r1, #200
 210 0102 3220     		movs	r0, #50
 211              	.LVL35:
 212 0104 FFF7FEFF 		bl	motor_turn
 213              	.LVL36:
1022:main.c        ****                                 vTaskDelay(0);
 214              		.loc 1 1022 0
 215 0108 0020     		movs	r0, #0
 216 010a FFF7FEFF 		bl	vTaskDelay
 217              	.LVL37:
 218 010e 04E0     		b	.L11
 219              	.L8:
 220              	.LBE4:
1023:main.c        ****                                 //motor_forward(0,0);
1024:main.c        ****                             }
1025:main.c        ****                             //motor_turn(50,50,0);
1026:main.c        ****                         }
1027:main.c        ****                         else{
1028:main.c        ****                             motor_turn(50,50,0);
 221              		.loc 1 1028 0
 222 0110 0022     		movs	r2, #0
 223 0112 3221     		movs	r1, #50
 224 0114 0846     		mov	r0, r1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 23


 225 0116 FFF7FEFF 		bl	motor_turn
 226              	.LVL38:
 227              	.L11:
1029:main.c        ****                         }
1030:main.c        ****                         
1031:main.c        ****                     }while(dig.l3 != 1 || dig.r3 != 1);
 228              		.loc 1 1031 0
 229 011a BDF81430 		ldrh	r3, [sp, #20]
 230 011e 012B     		cmp	r3, #1
 231 0120 CCD1     		bne	.L12
 232              		.loc 1 1031 0 is_stmt 0 discriminator 1
 233 0122 BDF81E30 		ldrh	r3, [sp, #30]
 234 0126 012B     		cmp	r3, #1
 235 0128 C8D1     		bne	.L12
1032:main.c        ****                     int r1 = rand() % 3;
 236              		.loc 1 1032 0 is_stmt 1
 237 012a FFF7FEFF 		bl	rand
 238              	.LVL39:
 239 012e 224C     		ldr	r4, .L17+36
 240 0130 84FB0034 		smull	r3, r4, r4, r0
 241 0134 A4EBE074 		sub	r4, r4, r0, asr #31
 242 0138 04EB4404 		add	r4, r4, r4, lsl #1
 243              	.LVL40:
1033:main.c        ****                     if(r1==0) {
 244              		.loc 1 1033 0
 245 013c 041B     		subs	r4, r0, r4
 246              	.LVL41:
 247 013e 08D1     		bne	.L13
1034:main.c        ****                         motor_turn(50,200,1000);
 248              		.loc 1 1034 0
 249 0140 4FF47A72 		mov	r2, #1000
 250 0144 C821     		movs	r1, #200
 251 0146 3220     		movs	r0, #50
 252 0148 FFF7FEFF 		bl	motor_turn
 253              	.LVL42:
1035:main.c        ****                         vTaskDelay(0);
 254              		.loc 1 1035 0
 255 014c 0020     		movs	r0, #0
 256 014e FFF7FEFF 		bl	vTaskDelay
 257              	.LVL43:
 258              	.L13:
1036:main.c        ****                     }
1037:main.c        ****                     if(r1==1) {
 259              		.loc 1 1037 0
 260 0152 012C     		cmp	r4, #1
 261 0154 08D1     		bne	.L14
1038:main.c        ****                         motor_turn(50,200,500);
 262              		.loc 1 1038 0
 263 0156 4FF4FA72 		mov	r2, #500
 264 015a C821     		movs	r1, #200
 265 015c 3220     		movs	r0, #50
 266 015e FFF7FEFF 		bl	motor_turn
 267              	.LVL44:
1039:main.c        ****                         vTaskDelay(0);
 268              		.loc 1 1039 0
 269 0162 0020     		movs	r0, #0
 270 0164 FFF7FEFF 		bl	vTaskDelay
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 24


 271              	.LVL45:
 272              	.L14:
1040:main.c        ****                     }
1041:main.c        ****                     if(r1==2) {
 273              		.loc 1 1041 0
 274 0168 022C     		cmp	r4, #2
 275 016a 08D1     		bne	.L15
1042:main.c        ****                         motor_turn(200,50,500);
 276              		.loc 1 1042 0
 277 016c 4FF4FA72 		mov	r2, #500
 278 0170 3221     		movs	r1, #50
 279 0172 C820     		movs	r0, #200
 280 0174 FFF7FEFF 		bl	motor_turn
 281              	.LVL46:
1043:main.c        ****                         vTaskDelay(0);
 282              		.loc 1 1043 0
 283 0178 0020     		movs	r0, #0
 284 017a FFF7FEFF 		bl	vTaskDelay
 285              	.LVL47:
 286              	.L15:
1004:main.c        ****                     reflectance_digital(&dig); 
 287              		.loc 1 1004 0
 288 017e 02A8     		add	r0, sp, #8
 289 0180 FFF7FEFF 		bl	reflectance_read
 290              	.LVL48:
1005:main.c        **** 
 291              		.loc 1 1005 0
 292 0184 05A8     		add	r0, sp, #20
 293 0186 FFF7FEFF 		bl	reflectance_digital
 294              	.LVL49:
1007:main.c        ****                     do{
 295              		.loc 1 1007 0
 296 018a 08A8     		add	r0, sp, #32
 297 018c FFF7FEFF 		bl	LSM303D_Read_Acc
 298              	.LVL50:
 299 0190 94E7     		b	.L12
 300              	.L18:
 301 0192 00BF     		.align	2
 302              	.L17:
 303 0194 00000000 		.word	.LC0
 304 0198 08000000 		.word	.LC1
 305 019c 14000000 		.word	.LC2
 306 01a0 1C000000 		.word	.LC3
 307 01a4 2C000000 		.word	.LC4
 308 01a8 3C000000 		.word	.LC5
 309 01ac 40000000 		.word	.LC6
 310 01b0 50000000 		.word	.LC7
 311 01b4 01000080 		.word	-2147483647
 312 01b8 56555555 		.word	1431655766
 313              	.LBE3:
 314              	.LBE2:
 315              		.cfi_endproc
 316              	.LFE85:
 317              		.size	zmain, .-zmain
 318              		.section	.rodata.str1.4,"aMS",%progbits,1
 319              		.align	2
 320              	.LC0:
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 25


 321 0000 0A537461 		.ascii	"\012Start\000"
 321      727400
 322 0007 00       		.space	1
 323              	.LC1:
 324 0008 0A0A4952 		.ascii	"\012\012IR test\000"
 324      20746573 
 324      7400
 325 0012 0000     		.space	2
 326              	.LC2:
 327 0014 6C696E65 		.ascii	"line\000"
 327      00
 328 0019 000000   		.space	3
 329              	.LC3:
 330 001c 5A756D6F 		.ascii	"Zumo006/ready\000"
 330      3030362F 
 330      72656164 
 330      7900
 331 002a 0000     		.space	2
 332              	.LC4:
 333 002c 42756666 		.ascii	"Buffer cleared\000"
 333      65722063 
 333      6C656172 
 333      656400
 334 003b 00       		.space	1
 335              	.LC5:
 336 003c 256400   		.ascii	"%d\000"
 337 003f 00       		.space	1
 338              	.LC6:
 339 0040 5A756D6F 		.ascii	"Zumo006/start\000"
 339      3030362F 
 339      73746172 
 339      7400
 340 004e 0000     		.space	2
 341              	.LC7:
 342 0050 5A756D6F 		.ascii	"Zumo006/hit\000"
 342      3030362F 
 342      68697400 
 343              		.text
 344              	.Letext0:
 345              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 346              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 347              		.file 4 ".\\ZumoLibrary/Reflectance.h"
 348              		.file 5 ".\\ZumoLibrary/LSM303D.h"
 349              		.file 6 "Generated_Source\\PSoC5/CyLib.h"
 350              		.file 7 ".\\ZumoLibrary/mqtt_sender.h"
 351              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 352              		.file 9 ".\\ZumoLibrary/Motor.h"
 353              		.file 10 "..\\FreeRTOS\\Source\\include/task.h"
 354              		.file 11 ".\\ZumoLibrary/IR.h"
 355              		.file 12 ".\\ZumoLibrary/Beep.h"
 356              		.file 13 "Generated_Source\\PSoC5/BatteryLed.h"
 357              		.file 14 "Generated_Source\\PSoC5/SW1.h"
 358              		.file 15 "Generated_Source\\PSoC5/core_cm3.h"
 359              		.file 16 "<built-in>"
 360              		.section	.debug_info,"",%progbits
 361              	.Ldebug_info0:
 362 0000 C4060000 		.4byte	0x6c4
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 26


 363 0004 0400     		.2byte	0x4
 364 0006 00000000 		.4byte	.Ldebug_abbrev0
 365 000a 04       		.byte	0x4
 366 000b 01       		.uleb128 0x1
 367 000c D3020000 		.4byte	.LASF55
 368 0010 0C       		.byte	0xc
 369 0011 49020000 		.4byte	.LASF56
 370 0015 42000000 		.4byte	.LASF57
 371 0019 00000000 		.4byte	.Ldebug_ranges0+0
 372 001d 00000000 		.4byte	0
 373 0021 00000000 		.4byte	.Ldebug_line0
 374 0025 02       		.uleb128 0x2
 375 0026 01       		.byte	0x1
 376 0027 06       		.byte	0x6
 377 0028 85010000 		.4byte	.LASF0
 378 002c 03       		.uleb128 0x3
 379 002d 25010000 		.4byte	.LASF2
 380 0031 02       		.byte	0x2
 381 0032 1D       		.byte	0x1d
 382 0033 37000000 		.4byte	0x37
 383 0037 02       		.uleb128 0x2
 384 0038 01       		.byte	0x1
 385 0039 08       		.byte	0x8
 386 003a 5D010000 		.4byte	.LASF1
 387 003e 03       		.uleb128 0x3
 388 003f AD020000 		.4byte	.LASF3
 389 0043 02       		.byte	0x2
 390 0044 29       		.byte	0x29
 391 0045 49000000 		.4byte	0x49
 392 0049 02       		.uleb128 0x2
 393 004a 02       		.byte	0x2
 394 004b 05       		.byte	0x5
 395 004c 15000000 		.4byte	.LASF4
 396 0050 03       		.uleb128 0x3
 397 0051 37000000 		.4byte	.LASF5
 398 0055 02       		.byte	0x2
 399 0056 2B       		.byte	0x2b
 400 0057 5B000000 		.4byte	0x5b
 401 005b 02       		.uleb128 0x2
 402 005c 02       		.byte	0x2
 403 005d 07       		.byte	0x7
 404 005e F4010000 		.4byte	.LASF6
 405 0062 03       		.uleb128 0x3
 406 0063 92020000 		.4byte	.LASF7
 407 0067 02       		.byte	0x2
 408 0068 3F       		.byte	0x3f
 409 0069 6D000000 		.4byte	0x6d
 410 006d 02       		.uleb128 0x2
 411 006e 04       		.byte	0x4
 412 006f 05       		.byte	0x5
 413 0070 01010000 		.4byte	.LASF8
 414 0074 02       		.uleb128 0x2
 415 0075 04       		.byte	0x4
 416 0076 07       		.byte	0x7
 417 0077 50020000 		.4byte	.LASF9
 418 007b 02       		.uleb128 0x2
 419 007c 08       		.byte	0x8
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 27


 420 007d 05       		.byte	0x5
 421 007e DF000000 		.4byte	.LASF10
 422 0082 02       		.uleb128 0x2
 423 0083 08       		.byte	0x8
 424 0084 07       		.byte	0x7
 425 0085 A2010000 		.4byte	.LASF11
 426 0089 04       		.uleb128 0x4
 427 008a 04       		.byte	0x4
 428 008b 05       		.byte	0x5
 429 008c 696E7400 		.ascii	"int\000"
 430 0090 02       		.uleb128 0x2
 431 0091 04       		.byte	0x4
 432 0092 07       		.byte	0x7
 433 0093 CD010000 		.4byte	.LASF12
 434 0097 03       		.uleb128 0x3
 435 0098 99000000 		.4byte	.LASF13
 436 009c 03       		.byte	0x3
 437 009d 18       		.byte	0x18
 438 009e 2C000000 		.4byte	0x2c
 439 00a2 03       		.uleb128 0x3
 440 00a3 22020000 		.4byte	.LASF14
 441 00a7 03       		.byte	0x3
 442 00a8 20       		.byte	0x20
 443 00a9 3E000000 		.4byte	0x3e
 444 00ad 03       		.uleb128 0x3
 445 00ae DA010000 		.4byte	.LASF15
 446 00b2 03       		.byte	0x3
 447 00b3 24       		.byte	0x24
 448 00b4 50000000 		.4byte	0x50
 449 00b8 03       		.uleb128 0x3
 450 00b9 1A020000 		.4byte	.LASF16
 451 00bd 03       		.byte	0x3
 452 00be 2C       		.byte	0x2c
 453 00bf 62000000 		.4byte	0x62
 454 00c3 02       		.uleb128 0x2
 455 00c4 04       		.byte	0x4
 456 00c5 04       		.byte	0x4
 457 00c6 D9000000 		.4byte	.LASF17
 458 00ca 02       		.uleb128 0x2
 459 00cb 08       		.byte	0x8
 460 00cc 04       		.byte	0x4
 461 00cd 62020000 		.4byte	.LASF18
 462 00d1 02       		.uleb128 0x2
 463 00d2 01       		.byte	0x1
 464 00d3 08       		.byte	0x8
 465 00d4 15020000 		.4byte	.LASF19
 466 00d8 02       		.uleb128 0x2
 467 00d9 08       		.byte	0x8
 468 00da 04       		.byte	0x4
 469 00db 38010000 		.4byte	.LASF20
 470 00df 02       		.uleb128 0x2
 471 00e0 04       		.byte	0x4
 472 00e1 07       		.byte	0x7
 473 00e2 1F000000 		.4byte	.LASF21
 474 00e6 05       		.uleb128 0x5
 475 00e7 90000000 		.4byte	.LASF22
 476 00eb 0C       		.byte	0xc
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 28


 477 00ec 04       		.byte	0x4
 478 00ed 0E       		.byte	0xe
 479 00ee 35010000 		.4byte	0x135
 480 00f2 06       		.uleb128 0x6
 481 00f3 6C3300   		.ascii	"l3\000"
 482 00f6 04       		.byte	0x4
 483 00f7 0F       		.byte	0xf
 484 00f8 AD000000 		.4byte	0xad
 485 00fc 00       		.byte	0
 486 00fd 06       		.uleb128 0x6
 487 00fe 6C3200   		.ascii	"l2\000"
 488 0101 04       		.byte	0x4
 489 0102 10       		.byte	0x10
 490 0103 AD000000 		.4byte	0xad
 491 0107 02       		.byte	0x2
 492 0108 06       		.uleb128 0x6
 493 0109 6C3100   		.ascii	"l1\000"
 494 010c 04       		.byte	0x4
 495 010d 11       		.byte	0x11
 496 010e AD000000 		.4byte	0xad
 497 0112 04       		.byte	0x4
 498 0113 06       		.uleb128 0x6
 499 0114 723100   		.ascii	"r1\000"
 500 0117 04       		.byte	0x4
 501 0118 12       		.byte	0x12
 502 0119 AD000000 		.4byte	0xad
 503 011d 06       		.byte	0x6
 504 011e 06       		.uleb128 0x6
 505 011f 723200   		.ascii	"r2\000"
 506 0122 04       		.byte	0x4
 507 0123 13       		.byte	0x13
 508 0124 AD000000 		.4byte	0xad
 509 0128 08       		.byte	0x8
 510 0129 06       		.uleb128 0x6
 511 012a 723300   		.ascii	"r3\000"
 512 012d 04       		.byte	0x4
 513 012e 14       		.byte	0x14
 514 012f AD000000 		.4byte	0xad
 515 0133 0A       		.byte	0xa
 516 0134 00       		.byte	0
 517 0135 05       		.uleb128 0x5
 518 0136 1C010000 		.4byte	.LASF23
 519 013a 06       		.byte	0x6
 520 013b 05       		.byte	0x5
 521 013c 47       		.byte	0x47
 522 013d 66010000 		.4byte	0x166
 523 0141 07       		.uleb128 0x7
 524 0142 28000000 		.4byte	.LASF24
 525 0146 05       		.byte	0x5
 526 0147 49       		.byte	0x49
 527 0148 A2000000 		.4byte	0xa2
 528 014c 00       		.byte	0
 529 014d 07       		.uleb128 0x7
 530 014e 2D000000 		.4byte	.LASF25
 531 0152 05       		.byte	0x5
 532 0153 4A       		.byte	0x4a
 533 0154 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 29


 534 0158 02       		.byte	0x2
 535 0159 07       		.uleb128 0x7
 536 015a 32000000 		.4byte	.LASF26
 537 015e 05       		.byte	0x5
 538 015f 4B       		.byte	0x4b
 539 0160 A2000000 		.4byte	0xa2
 540 0164 04       		.byte	0x4
 541 0165 00       		.byte	0
 542 0166 08       		.uleb128 0x8
 543 0167 8C020000 		.4byte	.LASF58
 544 016b 01       		.byte	0x1
 545 016c B803     		.2byte	0x3b8
 546 016e 00000000 		.4byte	.LFB85
 547 0172 BC010000 		.4byte	.LFE85-.LFB85
 548 0176 01       		.uleb128 0x1
 549 0177 9C       		.byte	0x9c
 550 0178 C3050000 		.4byte	0x5c3
 551 017c 09       		.uleb128 0x9
 552 017d 3B020000 		.4byte	.LASF27
 553 0181 01       		.byte	0x1
 554 0182 BA03     		.2byte	0x3ba
 555 0184 35010000 		.4byte	0x135
 556 0188 02       		.uleb128 0x2
 557 0189 91       		.byte	0x91
 558 018a 70       		.sleb128 -16
 559 018b 0A       		.uleb128 0xa
 560 018c 84020000 		.4byte	.LASF28
 561 0190 01       		.byte	0x1
 562 0191 BC03     		.2byte	0x3bc
 563 0193 97000000 		.4byte	0x97
 564 0197 00000000 		.4byte	.LLST0
 565 019b 0B       		.uleb128 0xb
 566 019c 12000000 		.4byte	.LBB2
 567 01a0 AA010000 		.4byte	.LBE2-.LBB2
 568 01a4 A2050000 		.4byte	0x5a2
 569 01a8 0C       		.uleb128 0xc
 570 01a9 72656600 		.ascii	"ref\000"
 571 01ad 01       		.byte	0x1
 572 01ae C403     		.2byte	0x3c4
 573 01b0 E6000000 		.4byte	0xe6
 574 01b4 02       		.uleb128 0x2
 575 01b5 91       		.byte	0x91
 576 01b6 58       		.sleb128 -40
 577 01b7 0C       		.uleb128 0xc
 578 01b8 64696700 		.ascii	"dig\000"
 579 01bc 01       		.byte	0x1
 580 01bd C503     		.2byte	0x3c5
 581 01bf E6000000 		.4byte	0xe6
 582 01c3 02       		.uleb128 0x2
 583 01c4 91       		.byte	0x91
 584 01c5 64       		.sleb128 -28
 585 01c6 0D       		.uleb128 0xd
 586 01c7 6C656400 		.ascii	"led\000"
 587 01cb 01       		.byte	0x1
 588 01cc C603     		.2byte	0x3c6
 589 01ce C3050000 		.4byte	0x5c3
 590 01d2 13000000 		.4byte	.LLST1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 30


 591 01d6 0E       		.uleb128 0xe
 592 01d7 A1000000 		.4byte	.LASF29
 593 01db 01       		.byte	0x1
 594 01dc C603     		.2byte	0x3c6
 595 01de C3050000 		.4byte	0x5c3
 596 01e2 01       		.byte	0x1
 597 01e3 0A       		.uleb128 0xa
 598 01e4 A7000000 		.4byte	.LASF30
 599 01e8 01       		.byte	0x1
 600 01e9 C603     		.2byte	0x3c6
 601 01eb C3050000 		.4byte	0x5c3
 602 01ef 33000000 		.4byte	.LLST2
 603 01f3 0E       		.uleb128 0xe
 604 01f4 E3010000 		.4byte	.LASF31
 605 01f8 01       		.byte	0x1
 606 01f9 C603     		.2byte	0x3c6
 607 01fb C3050000 		.4byte	0x5c3
 608 01ff 01       		.byte	0x1
 609 0200 0E       		.uleb128 0xe
 610 0201 BC000000 		.4byte	.LASF32
 611 0205 01       		.byte	0x1
 612 0206 C703     		.2byte	0x3c7
 613 0208 89000000 		.4byte	0x89
 614 020c 00       		.byte	0
 615 020d 0A       		.uleb128 0xa
 616 020e EE010000 		.4byte	.LASF33
 617 0212 01       		.byte	0x1
 618 0213 E103     		.2byte	0x3e1
 619 0215 89000000 		.4byte	0x89
 620 0219 69000000 		.4byte	.LLST3
 621 021d 0F       		.uleb128 0xf
 622 021e 656E6400 		.ascii	"end\000"
 623 0222 01       		.byte	0x1
 624 0223 1904     		.2byte	0x419
 625 0225 89000000 		.4byte	0x89
 626 0229 0B       		.uleb128 0xb
 627 022a BC000000 		.4byte	.LBB3
 628 022e 00010000 		.4byte	.LBE3-.LBB3
 629 0232 F4030000 		.4byte	0x3f4
 630 0236 0D       		.uleb128 0xd
 631 0237 723100   		.ascii	"r1\000"
 632 023a 01       		.byte	0x1
 633 023b 0804     		.2byte	0x408
 634 023d 89000000 		.4byte	0x89
 635 0241 87000000 		.4byte	.LLST4
 636 0245 0B       		.uleb128 0xb
 637 0246 C6000000 		.4byte	.LBB4
 638 024a 4A000000 		.4byte	.LBE4-.LBB4
 639 024e F7020000 		.4byte	0x2f7
 640 0252 0D       		.uleb128 0xd
 641 0253 7200     		.ascii	"r\000"
 642 0255 01       		.byte	0x1
 643 0256 F403     		.2byte	0x3f4
 644 0258 89000000 		.4byte	0x89
 645 025c AA000000 		.4byte	.LLST5
 646 0260 10       		.uleb128 0x10
 647 0261 CA000000 		.4byte	.LVL27
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 31


 648 0265 DB050000 		.4byte	0x5db
 649 0269 11       		.uleb128 0x11
 650 026a D4000000 		.4byte	.LVL28
 651 026e E6050000 		.4byte	0x5e6
 652 0272 89020000 		.4byte	0x289
 653 0276 12       		.uleb128 0x12
 654 0277 01       		.uleb128 0x1
 655 0278 50       		.byte	0x50
 656 0279 05       		.uleb128 0x5
 657 027a 03       		.byte	0x3
 658 027b 50000000 		.4byte	.LC7
 659 027f 12       		.uleb128 0x12
 660 0280 01       		.uleb128 0x1
 661 0281 51       		.byte	0x51
 662 0282 05       		.uleb128 0x5
 663 0283 03       		.byte	0x3
 664 0284 3C000000 		.4byte	.LC5
 665 0288 00       		.byte	0
 666 0289 10       		.uleb128 0x10
 667 028a D8000000 		.4byte	.LVL29
 668 028e F1050000 		.4byte	0x5f1
 669 0292 11       		.uleb128 0x11
 670 0293 F4000000 		.4byte	.LVL32
 671 0297 FC050000 		.4byte	0x5fc
 672 029b B3020000 		.4byte	0x2b3
 673 029f 12       		.uleb128 0x12
 674 02a0 01       		.uleb128 0x1
 675 02a1 50       		.byte	0x50
 676 02a2 02       		.uleb128 0x2
 677 02a3 09       		.byte	0x9
 678 02a4 C8       		.byte	0xc8
 679 02a5 12       		.uleb128 0x12
 680 02a6 01       		.uleb128 0x1
 681 02a7 51       		.byte	0x51
 682 02a8 02       		.uleb128 0x2
 683 02a9 08       		.byte	0x8
 684 02aa 32       		.byte	0x32
 685 02ab 12       		.uleb128 0x12
 686 02ac 01       		.uleb128 0x1
 687 02ad 52       		.byte	0x52
 688 02ae 03       		.uleb128 0x3
 689 02af 0A       		.byte	0xa
 690 02b0 F401     		.2byte	0x1f4
 691 02b2 00       		.byte	0
 692 02b3 11       		.uleb128 0x11
 693 02b4 FA000000 		.4byte	.LVL33
 694 02b8 07060000 		.4byte	0x607
 695 02bc C6020000 		.4byte	0x2c6
 696 02c0 12       		.uleb128 0x12
 697 02c1 01       		.uleb128 0x1
 698 02c2 50       		.byte	0x50
 699 02c3 01       		.uleb128 0x1
 700 02c4 30       		.byte	0x30
 701 02c5 00       		.byte	0
 702 02c6 11       		.uleb128 0x11
 703 02c7 08010000 		.4byte	.LVL36
 704 02cb FC050000 		.4byte	0x5fc
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 32


 705 02cf E7020000 		.4byte	0x2e7
 706 02d3 12       		.uleb128 0x12
 707 02d4 01       		.uleb128 0x1
 708 02d5 50       		.byte	0x50
 709 02d6 02       		.uleb128 0x2
 710 02d7 08       		.byte	0x8
 711 02d8 32       		.byte	0x32
 712 02d9 12       		.uleb128 0x12
 713 02da 01       		.uleb128 0x1
 714 02db 51       		.byte	0x51
 715 02dc 02       		.uleb128 0x2
 716 02dd 09       		.byte	0x9
 717 02de C8       		.byte	0xc8
 718 02df 12       		.uleb128 0x12
 719 02e0 01       		.uleb128 0x1
 720 02e1 52       		.byte	0x52
 721 02e2 03       		.uleb128 0x3
 722 02e3 0A       		.byte	0xa
 723 02e4 F401     		.2byte	0x1f4
 724 02e6 00       		.byte	0
 725 02e7 13       		.uleb128 0x13
 726 02e8 0E010000 		.4byte	.LVL37
 727 02ec 07060000 		.4byte	0x607
 728 02f0 12       		.uleb128 0x12
 729 02f1 01       		.uleb128 0x1
 730 02f2 50       		.byte	0x50
 731 02f3 01       		.uleb128 0x1
 732 02f4 30       		.byte	0x30
 733 02f5 00       		.byte	0
 734 02f6 00       		.byte	0
 735 02f7 11       		.uleb128 0x11
 736 02f8 1A010000 		.4byte	.LVL38
 737 02fc FC050000 		.4byte	0x5fc
 738 0300 16030000 		.4byte	0x316
 739 0304 12       		.uleb128 0x12
 740 0305 01       		.uleb128 0x1
 741 0306 50       		.byte	0x50
 742 0307 02       		.uleb128 0x2
 743 0308 08       		.byte	0x8
 744 0309 32       		.byte	0x32
 745 030a 12       		.uleb128 0x12
 746 030b 01       		.uleb128 0x1
 747 030c 51       		.byte	0x51
 748 030d 02       		.uleb128 0x2
 749 030e 08       		.byte	0x8
 750 030f 32       		.byte	0x32
 751 0310 12       		.uleb128 0x12
 752 0311 01       		.uleb128 0x1
 753 0312 52       		.byte	0x52
 754 0313 01       		.uleb128 0x1
 755 0314 30       		.byte	0x30
 756 0315 00       		.byte	0
 757 0316 10       		.uleb128 0x10
 758 0317 2E010000 		.4byte	.LVL39
 759 031b F1050000 		.4byte	0x5f1
 760 031f 11       		.uleb128 0x11
 761 0320 4C010000 		.4byte	.LVL42
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 33


 762 0324 FC050000 		.4byte	0x5fc
 763 0328 40030000 		.4byte	0x340
 764 032c 12       		.uleb128 0x12
 765 032d 01       		.uleb128 0x1
 766 032e 50       		.byte	0x50
 767 032f 02       		.uleb128 0x2
 768 0330 08       		.byte	0x8
 769 0331 32       		.byte	0x32
 770 0332 12       		.uleb128 0x12
 771 0333 01       		.uleb128 0x1
 772 0334 51       		.byte	0x51
 773 0335 02       		.uleb128 0x2
 774 0336 09       		.byte	0x9
 775 0337 C8       		.byte	0xc8
 776 0338 12       		.uleb128 0x12
 777 0339 01       		.uleb128 0x1
 778 033a 52       		.byte	0x52
 779 033b 03       		.uleb128 0x3
 780 033c 0A       		.byte	0xa
 781 033d E803     		.2byte	0x3e8
 782 033f 00       		.byte	0
 783 0340 11       		.uleb128 0x11
 784 0341 52010000 		.4byte	.LVL43
 785 0345 07060000 		.4byte	0x607
 786 0349 53030000 		.4byte	0x353
 787 034d 12       		.uleb128 0x12
 788 034e 01       		.uleb128 0x1
 789 034f 50       		.byte	0x50
 790 0350 01       		.uleb128 0x1
 791 0351 30       		.byte	0x30
 792 0352 00       		.byte	0
 793 0353 11       		.uleb128 0x11
 794 0354 62010000 		.4byte	.LVL44
 795 0358 FC050000 		.4byte	0x5fc
 796 035c 74030000 		.4byte	0x374
 797 0360 12       		.uleb128 0x12
 798 0361 01       		.uleb128 0x1
 799 0362 50       		.byte	0x50
 800 0363 02       		.uleb128 0x2
 801 0364 08       		.byte	0x8
 802 0365 32       		.byte	0x32
 803 0366 12       		.uleb128 0x12
 804 0367 01       		.uleb128 0x1
 805 0368 51       		.byte	0x51
 806 0369 02       		.uleb128 0x2
 807 036a 09       		.byte	0x9
 808 036b C8       		.byte	0xc8
 809 036c 12       		.uleb128 0x12
 810 036d 01       		.uleb128 0x1
 811 036e 52       		.byte	0x52
 812 036f 03       		.uleb128 0x3
 813 0370 0A       		.byte	0xa
 814 0371 F401     		.2byte	0x1f4
 815 0373 00       		.byte	0
 816 0374 11       		.uleb128 0x11
 817 0375 68010000 		.4byte	.LVL45
 818 0379 07060000 		.4byte	0x607
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 34


 819 037d 87030000 		.4byte	0x387
 820 0381 12       		.uleb128 0x12
 821 0382 01       		.uleb128 0x1
 822 0383 50       		.byte	0x50
 823 0384 01       		.uleb128 0x1
 824 0385 30       		.byte	0x30
 825 0386 00       		.byte	0
 826 0387 11       		.uleb128 0x11
 827 0388 78010000 		.4byte	.LVL46
 828 038c FC050000 		.4byte	0x5fc
 829 0390 A8030000 		.4byte	0x3a8
 830 0394 12       		.uleb128 0x12
 831 0395 01       		.uleb128 0x1
 832 0396 50       		.byte	0x50
 833 0397 02       		.uleb128 0x2
 834 0398 09       		.byte	0x9
 835 0399 C8       		.byte	0xc8
 836 039a 12       		.uleb128 0x12
 837 039b 01       		.uleb128 0x1
 838 039c 51       		.byte	0x51
 839 039d 02       		.uleb128 0x2
 840 039e 08       		.byte	0x8
 841 039f 32       		.byte	0x32
 842 03a0 12       		.uleb128 0x12
 843 03a1 01       		.uleb128 0x1
 844 03a2 52       		.byte	0x52
 845 03a3 03       		.uleb128 0x3
 846 03a4 0A       		.byte	0xa
 847 03a5 F401     		.2byte	0x1f4
 848 03a7 00       		.byte	0
 849 03a8 11       		.uleb128 0x11
 850 03a9 7E010000 		.4byte	.LVL47
 851 03ad 07060000 		.4byte	0x607
 852 03b1 BB030000 		.4byte	0x3bb
 853 03b5 12       		.uleb128 0x12
 854 03b6 01       		.uleb128 0x1
 855 03b7 50       		.byte	0x50
 856 03b8 01       		.uleb128 0x1
 857 03b9 30       		.byte	0x30
 858 03ba 00       		.byte	0
 859 03bb 11       		.uleb128 0x11
 860 03bc 84010000 		.4byte	.LVL48
 861 03c0 13060000 		.4byte	0x613
 862 03c4 CF030000 		.4byte	0x3cf
 863 03c8 12       		.uleb128 0x12
 864 03c9 01       		.uleb128 0x1
 865 03ca 50       		.byte	0x50
 866 03cb 02       		.uleb128 0x2
 867 03cc 91       		.byte	0x91
 868 03cd 58       		.sleb128 -40
 869 03ce 00       		.byte	0
 870 03cf 11       		.uleb128 0x11
 871 03d0 8A010000 		.4byte	.LVL49
 872 03d4 1E060000 		.4byte	0x61e
 873 03d8 E3030000 		.4byte	0x3e3
 874 03dc 12       		.uleb128 0x12
 875 03dd 01       		.uleb128 0x1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 35


 876 03de 50       		.byte	0x50
 877 03df 02       		.uleb128 0x2
 878 03e0 91       		.byte	0x91
 879 03e1 64       		.sleb128 -28
 880 03e2 00       		.byte	0
 881 03e3 13       		.uleb128 0x13
 882 03e4 90010000 		.4byte	.LVL50
 883 03e8 29060000 		.4byte	0x629
 884 03ec 12       		.uleb128 0x12
 885 03ed 01       		.uleb128 0x1
 886 03ee 50       		.byte	0x50
 887 03ef 02       		.uleb128 0x2
 888 03f0 91       		.byte	0x91
 889 03f1 70       		.sleb128 -16
 890 03f2 00       		.byte	0
 891 03f3 00       		.byte	0
 892 03f4 10       		.uleb128 0x10
 893 03f5 16000000 		.4byte	.LVL2
 894 03f9 34060000 		.4byte	0x634
 895 03fd 11       		.uleb128 0x11
 896 03fe 1C000000 		.4byte	.LVL3
 897 0402 3F060000 		.4byte	0x63f
 898 0406 14040000 		.4byte	0x414
 899 040a 12       		.uleb128 0x12
 900 040b 01       		.uleb128 0x1
 901 040c 50       		.byte	0x50
 902 040d 05       		.uleb128 0x5
 903 040e 03       		.byte	0x3
 904 040f 08000000 		.4byte	.LC1
 905 0413 00       		.byte	0
 906 0414 10       		.uleb128 0x10
 907 0415 20000000 		.4byte	.LVL4
 908 0419 4E060000 		.4byte	0x64e
 909 041d 11       		.uleb128 0x11
 910 041e 28000000 		.4byte	.LVL5
 911 0422 E6050000 		.4byte	0x5e6
 912 0426 3D040000 		.4byte	0x43d
 913 042a 12       		.uleb128 0x12
 914 042b 01       		.uleb128 0x1
 915 042c 50       		.byte	0x50
 916 042d 05       		.uleb128 0x5
 917 042e 03       		.byte	0x3
 918 042f 1C000000 		.4byte	.LC3
 919 0433 12       		.uleb128 0x12
 920 0434 01       		.uleb128 0x1
 921 0435 51       		.byte	0x51
 922 0436 05       		.uleb128 0x5
 923 0437 03       		.byte	0x3
 924 0438 14000000 		.4byte	.LC2
 925 043c 00       		.byte	0
 926 043d 10       		.uleb128 0x10
 927 043e 2C000000 		.4byte	.LVL6
 928 0442 59060000 		.4byte	0x659
 929 0446 11       		.uleb128 0x11
 930 0447 32000000 		.4byte	.LVL7
 931 044b 3F060000 		.4byte	0x63f
 932 044f 5D040000 		.4byte	0x45d
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 36


 933 0453 12       		.uleb128 0x12
 934 0454 01       		.uleb128 0x1
 935 0455 50       		.byte	0x50
 936 0456 05       		.uleb128 0x5
 937 0457 03       		.byte	0x3
 938 0458 2C000000 		.4byte	.LC4
 939 045c 00       		.byte	0
 940 045d 10       		.uleb128 0x10
 941 045e 36000000 		.4byte	.LVL8
 942 0462 64060000 		.4byte	0x664
 943 0466 11       		.uleb128 0x11
 944 0467 4A000000 		.4byte	.LVL9
 945 046b 6F060000 		.4byte	0x66f
 946 046f A0040000 		.4byte	0x4a0
 947 0473 12       		.uleb128 0x12
 948 0474 01       		.uleb128 0x1
 949 0475 50       		.byte	0x50
 950 0476 03       		.uleb128 0x3
 951 0477 0A       		.byte	0xa
 952 0478 2823     		.2byte	0x2328
 953 047a 12       		.uleb128 0x12
 954 047b 01       		.uleb128 0x1
 955 047c 51       		.byte	0x51
 956 047d 03       		.uleb128 0x3
 957 047e 0A       		.byte	0xa
 958 047f 2823     		.2byte	0x2328
 959 0481 12       		.uleb128 0x12
 960 0482 01       		.uleb128 0x1
 961 0483 52       		.byte	0x52
 962 0484 03       		.uleb128 0x3
 963 0485 0A       		.byte	0xa
 964 0486 F82A     		.2byte	0x2af8
 965 0488 12       		.uleb128 0x12
 966 0489 01       		.uleb128 0x1
 967 048a 53       		.byte	0x53
 968 048b 03       		.uleb128 0x3
 969 048c 0A       		.byte	0xa
 970 048d F82A     		.2byte	0x2af8
 971 048f 12       		.uleb128 0x12
 972 0490 02       		.uleb128 0x2
 973 0491 7D       		.byte	0x7d
 974 0492 00       		.sleb128 0
 975 0493 03       		.uleb128 0x3
 976 0494 0A       		.byte	0xa
 977 0495 2823     		.2byte	0x2328
 978 0497 12       		.uleb128 0x12
 979 0498 02       		.uleb128 0x2
 980 0499 7D       		.byte	0x7d
 981 049a 04       		.sleb128 4
 982 049b 03       		.uleb128 0x3
 983 049c 0A       		.byte	0xa
 984 049d 2823     		.2byte	0x2328
 985 049f 00       		.byte	0
 986 04a0 11       		.uleb128 0x11
 987 04a1 50000000 		.4byte	.LVL10
 988 04a5 07060000 		.4byte	0x607
 989 04a9 B4040000 		.4byte	0x4b4
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 37


 990 04ad 12       		.uleb128 0x12
 991 04ae 01       		.uleb128 0x1
 992 04af 50       		.byte	0x50
 993 04b0 02       		.uleb128 0x2
 994 04b1 08       		.byte	0x8
 995 04b2 C8       		.byte	0xc8
 996 04b3 00       		.byte	0
 997 04b4 11       		.uleb128 0x11
 998 04b5 5A000000 		.4byte	.LVL12
 999 04b9 13060000 		.4byte	0x613
 1000 04bd C8040000 		.4byte	0x4c8
 1001 04c1 12       		.uleb128 0x12
 1002 04c2 01       		.uleb128 0x1
 1003 04c3 50       		.byte	0x50
 1004 04c4 02       		.uleb128 0x2
 1005 04c5 91       		.byte	0x91
 1006 04c6 58       		.sleb128 -40
 1007 04c7 00       		.byte	0
 1008 04c8 11       		.uleb128 0x11
 1009 04c9 60000000 		.4byte	.LVL13
 1010 04cd 1E060000 		.4byte	0x61e
 1011 04d1 DC040000 		.4byte	0x4dc
 1012 04d5 12       		.uleb128 0x12
 1013 04d6 01       		.uleb128 0x1
 1014 04d7 50       		.byte	0x50
 1015 04d8 02       		.uleb128 0x2
 1016 04d9 91       		.byte	0x91
 1017 04da 64       		.sleb128 -28
 1018 04db 00       		.byte	0
 1019 04dc 11       		.uleb128 0x11
 1020 04dd 7A000000 		.4byte	.LVL14
 1021 04e1 FC050000 		.4byte	0x5fc
 1022 04e5 FC040000 		.4byte	0x4fc
 1023 04e9 12       		.uleb128 0x12
 1024 04ea 01       		.uleb128 0x1
 1025 04eb 50       		.byte	0x50
 1026 04ec 02       		.uleb128 0x2
 1027 04ed 08       		.byte	0x8
 1028 04ee 32       		.byte	0x32
 1029 04ef 12       		.uleb128 0x12
 1030 04f0 01       		.uleb128 0x1
 1031 04f1 51       		.byte	0x51
 1032 04f2 02       		.uleb128 0x2
 1033 04f3 08       		.byte	0x8
 1034 04f4 32       		.byte	0x32
 1035 04f5 12       		.uleb128 0x12
 1036 04f6 01       		.uleb128 0x1
 1037 04f7 52       		.byte	0x52
 1038 04f8 02       		.uleb128 0x2
 1039 04f9 08       		.byte	0x8
 1040 04fa 32       		.byte	0x32
 1041 04fb 00       		.byte	0
 1042 04fc 11       		.uleb128 0x11
 1043 04fd 82000000 		.4byte	.LVL15
 1044 0501 7A060000 		.4byte	0x67a
 1045 0505 16050000 		.4byte	0x516
 1046 0509 12       		.uleb128 0x12
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 38


 1047 050a 01       		.uleb128 0x1
 1048 050b 50       		.byte	0x50
 1049 050c 02       		.uleb128 0x2
 1050 050d 08       		.byte	0x8
 1051 050e 3C       		.byte	0x3c
 1052 050f 12       		.uleb128 0x12
 1053 0510 01       		.uleb128 0x1
 1054 0511 51       		.byte	0x51
 1055 0512 02       		.uleb128 0x2
 1056 0513 08       		.byte	0x8
 1057 0514 50       		.byte	0x50
 1058 0515 00       		.byte	0
 1059 0516 11       		.uleb128 0x11
 1060 0517 8C000000 		.4byte	.LVL16
 1061 051b 85060000 		.4byte	0x685
 1062 051f 2E050000 		.4byte	0x52e
 1063 0523 12       		.uleb128 0x12
 1064 0524 01       		.uleb128 0x1
 1065 0525 50       		.byte	0x50
 1066 0526 01       		.uleb128 0x1
 1067 0527 30       		.byte	0x30
 1068 0528 12       		.uleb128 0x12
 1069 0529 01       		.uleb128 0x1
 1070 052a 51       		.byte	0x51
 1071 052b 01       		.uleb128 0x1
 1072 052c 30       		.byte	0x30
 1073 052d 00       		.byte	0
 1074 052e 11       		.uleb128 0x11
 1075 052f 9A000000 		.4byte	.LVL18
 1076 0533 E6050000 		.4byte	0x5e6
 1077 0537 4E050000 		.4byte	0x54e
 1078 053b 12       		.uleb128 0x12
 1079 053c 01       		.uleb128 0x1
 1080 053d 50       		.byte	0x50
 1081 053e 05       		.uleb128 0x5
 1082 053f 03       		.byte	0x3
 1083 0540 1C000000 		.4byte	.LC3
 1084 0544 12       		.uleb128 0x12
 1085 0545 01       		.uleb128 0x1
 1086 0546 51       		.byte	0x51
 1087 0547 05       		.uleb128 0x5
 1088 0548 03       		.byte	0x3
 1089 0549 14000000 		.4byte	.LC2
 1090 054d 00       		.byte	0
 1091 054e 10       		.uleb128 0x10
 1092 054f 9E000000 		.4byte	.LVL19
 1093 0553 90060000 		.4byte	0x690
 1094 0557 10       		.uleb128 0x10
 1095 0558 A2000000 		.4byte	.LVL20
 1096 055c 9B060000 		.4byte	0x69b
 1097 0560 10       		.uleb128 0x10
 1098 0561 A6000000 		.4byte	.LVL21
 1099 0565 A6060000 		.4byte	0x6a6
 1100 0569 10       		.uleb128 0x10
 1101 056a AA000000 		.4byte	.LVL22
 1102 056e DB050000 		.4byte	0x5db
 1103 0572 11       		.uleb128 0x11
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 39


 1104 0573 B4000000 		.4byte	.LVL24
 1105 0577 E6050000 		.4byte	0x5e6
 1106 057b 92050000 		.4byte	0x592
 1107 057f 12       		.uleb128 0x12
 1108 0580 01       		.uleb128 0x1
 1109 0581 50       		.byte	0x50
 1110 0582 05       		.uleb128 0x5
 1111 0583 03       		.byte	0x3
 1112 0584 40000000 		.4byte	.LC6
 1113 0588 12       		.uleb128 0x12
 1114 0589 01       		.uleb128 0x1
 1115 058a 51       		.byte	0x51
 1116 058b 05       		.uleb128 0x5
 1117 058c 03       		.byte	0x3
 1118 058d 3C000000 		.4byte	.LC5
 1119 0591 00       		.byte	0
 1120 0592 13       		.uleb128 0x13
 1121 0593 BA000000 		.4byte	.LVL25
 1122 0597 B1060000 		.4byte	0x6b1
 1123 059b 12       		.uleb128 0x12
 1124 059c 01       		.uleb128 0x1
 1125 059d 50       		.byte	0x50
 1126 059e 01       		.uleb128 0x1
 1127 059f 31       		.byte	0x31
 1128 05a0 00       		.byte	0
 1129 05a1 00       		.byte	0
 1130 05a2 11       		.uleb128 0x11
 1131 05a3 0A000000 		.4byte	.LVL0
 1132 05a7 3F060000 		.4byte	0x63f
 1133 05ab B9050000 		.4byte	0x5b9
 1134 05af 12       		.uleb128 0x12
 1135 05b0 01       		.uleb128 0x1
 1136 05b1 50       		.byte	0x50
 1137 05b2 05       		.uleb128 0x5
 1138 05b3 03       		.byte	0x3
 1139 05b4 00000000 		.4byte	.LC0
 1140 05b8 00       		.byte	0
 1141 05b9 10       		.uleb128 0x10
 1142 05ba 0E000000 		.4byte	.LVL1
 1143 05be BC060000 		.4byte	0x6bc
 1144 05c2 00       		.byte	0
 1145 05c3 02       		.uleb128 0x2
 1146 05c4 01       		.byte	0x1
 1147 05c5 02       		.byte	0x2
 1148 05c6 2A020000 		.4byte	.LASF34
 1149 05ca 14       		.uleb128 0x14
 1150 05cb C6020000 		.4byte	.LASF59
 1151 05cf 0F       		.byte	0xf
 1152 05d0 1207     		.2byte	0x712
 1153 05d2 D6050000 		.4byte	0x5d6
 1154 05d6 15       		.uleb128 0x15
 1155 05d7 B8000000 		.4byte	0xb8
 1156 05db 16       		.uleb128 0x16
 1157 05dc 0A010000 		.4byte	.LASF35
 1158 05e0 0A010000 		.4byte	.LASF35
 1159 05e4 06       		.byte	0x6
 1160 05e5 B6       		.byte	0xb6
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 40


 1161 05e6 16       		.uleb128 0x16
 1162 05e7 30020000 		.4byte	.LASF36
 1163 05eb 30020000 		.4byte	.LASF36
 1164 05ef 07       		.byte	0x7
 1165 05f0 07       		.byte	0x7
 1166 05f1 16       		.uleb128 0x16
 1167 05f2 C2000000 		.4byte	.LASF37
 1168 05f6 C2000000 		.4byte	.LASF37
 1169 05fa 08       		.byte	0x8
 1170 05fb 88       		.byte	0x88
 1171 05fc 16       		.uleb128 0x16
 1172 05fd B1000000 		.4byte	.LASF38
 1173 0601 B1000000 		.4byte	.LASF38
 1174 0605 09       		.byte	0x9
 1175 0606 12       		.byte	0x12
 1176 0607 17       		.uleb128 0x17
 1177 0608 B9010000 		.4byte	.LASF39
 1178 060c B9010000 		.4byte	.LASF39
 1179 0610 0A       		.byte	0xa
 1180 0611 ED02     		.2byte	0x2ed
 1181 0613 16       		.uleb128 0x16
 1182 0614 9C020000 		.4byte	.LASF40
 1183 0618 9C020000 		.4byte	.LASF40
 1184 061c 04       		.byte	0x4
 1185 061d 18       		.byte	0x18
 1186 061e 16       		.uleb128 0x16
 1187 061f ED000000 		.4byte	.LASF41
 1188 0623 ED000000 		.4byte	.LASF41
 1189 0627 04       		.byte	0x4
 1190 0628 19       		.byte	0x19
 1191 0629 16       		.uleb128 0x16
 1192 062a 44010000 		.4byte	.LASF42
 1193 062e 44010000 		.4byte	.LASF42
 1194 0632 05       		.byte	0x5
 1195 0633 51       		.byte	0x51
 1196 0634 16       		.uleb128 0x16
 1197 0635 2F010000 		.4byte	.LASF43
 1198 0639 2F010000 		.4byte	.LASF43
 1199 063d 0B       		.byte	0xb
 1200 063e 11       		.byte	0x11
 1201 063f 18       		.uleb128 0x18
 1202 0640 E9010000 		.4byte	.LASF60
 1203 0644 75020000 		.4byte	.LASF61
 1204 0648 10       		.byte	0x10
 1205 0649 00       		.byte	0
 1206 064a E9010000 		.4byte	.LASF60
 1207 064e 16       		.uleb128 0x16
 1208 064f 69020000 		.4byte	.LASF44
 1209 0653 69020000 		.4byte	.LASF44
 1210 0657 09       		.byte	0x9
 1211 0658 0B       		.byte	0xb
 1212 0659 16       		.uleb128 0x16
 1213 065a C4010000 		.4byte	.LASF45
 1214 065e C4010000 		.4byte	.LASF45
 1215 0662 0B       		.byte	0xb
 1216 0663 18       		.byte	0x18
 1217 0664 16       		.uleb128 0x16
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 41


 1218 0665 C7000000 		.4byte	.LASF46
 1219 0669 C7000000 		.4byte	.LASF46
 1220 066d 04       		.byte	0x4
 1221 066e 17       		.byte	0x17
 1222 066f 16       		.uleb128 0x16
 1223 0670 6B010000 		.4byte	.LASF47
 1224 0674 6B010000 		.4byte	.LASF47
 1225 0678 04       		.byte	0x4
 1226 0679 1A       		.byte	0x1a
 1227 067a 16       		.uleb128 0x16
 1228 067b 00000000 		.4byte	.LASF48
 1229 067f 00000000 		.4byte	.LASF48
 1230 0683 0C       		.byte	0xc
 1231 0684 05       		.byte	0x5
 1232 0685 16       		.uleb128 0x16
 1233 0686 07020000 		.4byte	.LASF49
 1234 068a 07020000 		.4byte	.LASF49
 1235 068e 09       		.byte	0x9
 1236 068f 0F       		.byte	0xf
 1237 0690 16       		.uleb128 0x16
 1238 0691 55010000 		.4byte	.LASF50
 1239 0695 55010000 		.4byte	.LASF50
 1240 0699 0B       		.byte	0xb
 1241 069a 1B       		.byte	0x1b
 1242 069b 16       		.uleb128 0x16
 1243 069c 05000000 		.4byte	.LASF51
 1244 06a0 05000000 		.4byte	.LASF51
 1245 06a4 06       		.byte	0x6
 1246 06a5 B0       		.byte	0xb0
 1247 06a6 16       		.uleb128 0x16
 1248 06a7 B7020000 		.4byte	.LASF52
 1249 06ab B7020000 		.4byte	.LASF52
 1250 06af 06       		.byte	0x6
 1251 06b0 AE       		.byte	0xae
 1252 06b1 16       		.uleb128 0x16
 1253 06b2 91010000 		.4byte	.LASF53
 1254 06b6 91010000 		.4byte	.LASF53
 1255 06ba 0D       		.byte	0xd
 1256 06bb 26       		.byte	0x26
 1257 06bc 16       		.uleb128 0x16
 1258 06bd 40020000 		.4byte	.LASF54
 1259 06c1 40020000 		.4byte	.LASF54
 1260 06c5 0E       		.byte	0xe
 1261 06c6 29       		.byte	0x29
 1262 06c7 00       		.byte	0
 1263              		.section	.debug_abbrev,"",%progbits
 1264              	.Ldebug_abbrev0:
 1265 0000 01       		.uleb128 0x1
 1266 0001 11       		.uleb128 0x11
 1267 0002 01       		.byte	0x1
 1268 0003 25       		.uleb128 0x25
 1269 0004 0E       		.uleb128 0xe
 1270 0005 13       		.uleb128 0x13
 1271 0006 0B       		.uleb128 0xb
 1272 0007 03       		.uleb128 0x3
 1273 0008 0E       		.uleb128 0xe
 1274 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 42


 1275 000a 0E       		.uleb128 0xe
 1276 000b 55       		.uleb128 0x55
 1277 000c 17       		.uleb128 0x17
 1278 000d 11       		.uleb128 0x11
 1279 000e 01       		.uleb128 0x1
 1280 000f 10       		.uleb128 0x10
 1281 0010 17       		.uleb128 0x17
 1282 0011 00       		.byte	0
 1283 0012 00       		.byte	0
 1284 0013 02       		.uleb128 0x2
 1285 0014 24       		.uleb128 0x24
 1286 0015 00       		.byte	0
 1287 0016 0B       		.uleb128 0xb
 1288 0017 0B       		.uleb128 0xb
 1289 0018 3E       		.uleb128 0x3e
 1290 0019 0B       		.uleb128 0xb
 1291 001a 03       		.uleb128 0x3
 1292 001b 0E       		.uleb128 0xe
 1293 001c 00       		.byte	0
 1294 001d 00       		.byte	0
 1295 001e 03       		.uleb128 0x3
 1296 001f 16       		.uleb128 0x16
 1297 0020 00       		.byte	0
 1298 0021 03       		.uleb128 0x3
 1299 0022 0E       		.uleb128 0xe
 1300 0023 3A       		.uleb128 0x3a
 1301 0024 0B       		.uleb128 0xb
 1302 0025 3B       		.uleb128 0x3b
 1303 0026 0B       		.uleb128 0xb
 1304 0027 49       		.uleb128 0x49
 1305 0028 13       		.uleb128 0x13
 1306 0029 00       		.byte	0
 1307 002a 00       		.byte	0
 1308 002b 04       		.uleb128 0x4
 1309 002c 24       		.uleb128 0x24
 1310 002d 00       		.byte	0
 1311 002e 0B       		.uleb128 0xb
 1312 002f 0B       		.uleb128 0xb
 1313 0030 3E       		.uleb128 0x3e
 1314 0031 0B       		.uleb128 0xb
 1315 0032 03       		.uleb128 0x3
 1316 0033 08       		.uleb128 0x8
 1317 0034 00       		.byte	0
 1318 0035 00       		.byte	0
 1319 0036 05       		.uleb128 0x5
 1320 0037 13       		.uleb128 0x13
 1321 0038 01       		.byte	0x1
 1322 0039 03       		.uleb128 0x3
 1323 003a 0E       		.uleb128 0xe
 1324 003b 0B       		.uleb128 0xb
 1325 003c 0B       		.uleb128 0xb
 1326 003d 3A       		.uleb128 0x3a
 1327 003e 0B       		.uleb128 0xb
 1328 003f 3B       		.uleb128 0x3b
 1329 0040 0B       		.uleb128 0xb
 1330 0041 01       		.uleb128 0x1
 1331 0042 13       		.uleb128 0x13
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 43


 1332 0043 00       		.byte	0
 1333 0044 00       		.byte	0
 1334 0045 06       		.uleb128 0x6
 1335 0046 0D       		.uleb128 0xd
 1336 0047 00       		.byte	0
 1337 0048 03       		.uleb128 0x3
 1338 0049 08       		.uleb128 0x8
 1339 004a 3A       		.uleb128 0x3a
 1340 004b 0B       		.uleb128 0xb
 1341 004c 3B       		.uleb128 0x3b
 1342 004d 0B       		.uleb128 0xb
 1343 004e 49       		.uleb128 0x49
 1344 004f 13       		.uleb128 0x13
 1345 0050 38       		.uleb128 0x38
 1346 0051 0B       		.uleb128 0xb
 1347 0052 00       		.byte	0
 1348 0053 00       		.byte	0
 1349 0054 07       		.uleb128 0x7
 1350 0055 0D       		.uleb128 0xd
 1351 0056 00       		.byte	0
 1352 0057 03       		.uleb128 0x3
 1353 0058 0E       		.uleb128 0xe
 1354 0059 3A       		.uleb128 0x3a
 1355 005a 0B       		.uleb128 0xb
 1356 005b 3B       		.uleb128 0x3b
 1357 005c 0B       		.uleb128 0xb
 1358 005d 49       		.uleb128 0x49
 1359 005e 13       		.uleb128 0x13
 1360 005f 38       		.uleb128 0x38
 1361 0060 0B       		.uleb128 0xb
 1362 0061 00       		.byte	0
 1363 0062 00       		.byte	0
 1364 0063 08       		.uleb128 0x8
 1365 0064 2E       		.uleb128 0x2e
 1366 0065 01       		.byte	0x1
 1367 0066 3F       		.uleb128 0x3f
 1368 0067 19       		.uleb128 0x19
 1369 0068 03       		.uleb128 0x3
 1370 0069 0E       		.uleb128 0xe
 1371 006a 3A       		.uleb128 0x3a
 1372 006b 0B       		.uleb128 0xb
 1373 006c 3B       		.uleb128 0x3b
 1374 006d 05       		.uleb128 0x5
 1375 006e 27       		.uleb128 0x27
 1376 006f 19       		.uleb128 0x19
 1377 0070 8701     		.uleb128 0x87
 1378 0072 19       		.uleb128 0x19
 1379 0073 11       		.uleb128 0x11
 1380 0074 01       		.uleb128 0x1
 1381 0075 12       		.uleb128 0x12
 1382 0076 06       		.uleb128 0x6
 1383 0077 40       		.uleb128 0x40
 1384 0078 18       		.uleb128 0x18
 1385 0079 9742     		.uleb128 0x2117
 1386 007b 19       		.uleb128 0x19
 1387 007c 01       		.uleb128 0x1
 1388 007d 13       		.uleb128 0x13
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 44


 1389 007e 00       		.byte	0
 1390 007f 00       		.byte	0
 1391 0080 09       		.uleb128 0x9
 1392 0081 34       		.uleb128 0x34
 1393 0082 00       		.byte	0
 1394 0083 03       		.uleb128 0x3
 1395 0084 0E       		.uleb128 0xe
 1396 0085 3A       		.uleb128 0x3a
 1397 0086 0B       		.uleb128 0xb
 1398 0087 3B       		.uleb128 0x3b
 1399 0088 05       		.uleb128 0x5
 1400 0089 49       		.uleb128 0x49
 1401 008a 13       		.uleb128 0x13
 1402 008b 02       		.uleb128 0x2
 1403 008c 18       		.uleb128 0x18
 1404 008d 00       		.byte	0
 1405 008e 00       		.byte	0
 1406 008f 0A       		.uleb128 0xa
 1407 0090 34       		.uleb128 0x34
 1408 0091 00       		.byte	0
 1409 0092 03       		.uleb128 0x3
 1410 0093 0E       		.uleb128 0xe
 1411 0094 3A       		.uleb128 0x3a
 1412 0095 0B       		.uleb128 0xb
 1413 0096 3B       		.uleb128 0x3b
 1414 0097 05       		.uleb128 0x5
 1415 0098 49       		.uleb128 0x49
 1416 0099 13       		.uleb128 0x13
 1417 009a 02       		.uleb128 0x2
 1418 009b 17       		.uleb128 0x17
 1419 009c 00       		.byte	0
 1420 009d 00       		.byte	0
 1421 009e 0B       		.uleb128 0xb
 1422 009f 0B       		.uleb128 0xb
 1423 00a0 01       		.byte	0x1
 1424 00a1 11       		.uleb128 0x11
 1425 00a2 01       		.uleb128 0x1
 1426 00a3 12       		.uleb128 0x12
 1427 00a4 06       		.uleb128 0x6
 1428 00a5 01       		.uleb128 0x1
 1429 00a6 13       		.uleb128 0x13
 1430 00a7 00       		.byte	0
 1431 00a8 00       		.byte	0
 1432 00a9 0C       		.uleb128 0xc
 1433 00aa 34       		.uleb128 0x34
 1434 00ab 00       		.byte	0
 1435 00ac 03       		.uleb128 0x3
 1436 00ad 08       		.uleb128 0x8
 1437 00ae 3A       		.uleb128 0x3a
 1438 00af 0B       		.uleb128 0xb
 1439 00b0 3B       		.uleb128 0x3b
 1440 00b1 05       		.uleb128 0x5
 1441 00b2 49       		.uleb128 0x49
 1442 00b3 13       		.uleb128 0x13
 1443 00b4 02       		.uleb128 0x2
 1444 00b5 18       		.uleb128 0x18
 1445 00b6 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 45


 1446 00b7 00       		.byte	0
 1447 00b8 0D       		.uleb128 0xd
 1448 00b9 34       		.uleb128 0x34
 1449 00ba 00       		.byte	0
 1450 00bb 03       		.uleb128 0x3
 1451 00bc 08       		.uleb128 0x8
 1452 00bd 3A       		.uleb128 0x3a
 1453 00be 0B       		.uleb128 0xb
 1454 00bf 3B       		.uleb128 0x3b
 1455 00c0 05       		.uleb128 0x5
 1456 00c1 49       		.uleb128 0x49
 1457 00c2 13       		.uleb128 0x13
 1458 00c3 02       		.uleb128 0x2
 1459 00c4 17       		.uleb128 0x17
 1460 00c5 00       		.byte	0
 1461 00c6 00       		.byte	0
 1462 00c7 0E       		.uleb128 0xe
 1463 00c8 34       		.uleb128 0x34
 1464 00c9 00       		.byte	0
 1465 00ca 03       		.uleb128 0x3
 1466 00cb 0E       		.uleb128 0xe
 1467 00cc 3A       		.uleb128 0x3a
 1468 00cd 0B       		.uleb128 0xb
 1469 00ce 3B       		.uleb128 0x3b
 1470 00cf 05       		.uleb128 0x5
 1471 00d0 49       		.uleb128 0x49
 1472 00d1 13       		.uleb128 0x13
 1473 00d2 1C       		.uleb128 0x1c
 1474 00d3 0B       		.uleb128 0xb
 1475 00d4 00       		.byte	0
 1476 00d5 00       		.byte	0
 1477 00d6 0F       		.uleb128 0xf
 1478 00d7 34       		.uleb128 0x34
 1479 00d8 00       		.byte	0
 1480 00d9 03       		.uleb128 0x3
 1481 00da 08       		.uleb128 0x8
 1482 00db 3A       		.uleb128 0x3a
 1483 00dc 0B       		.uleb128 0xb
 1484 00dd 3B       		.uleb128 0x3b
 1485 00de 05       		.uleb128 0x5
 1486 00df 49       		.uleb128 0x49
 1487 00e0 13       		.uleb128 0x13
 1488 00e1 00       		.byte	0
 1489 00e2 00       		.byte	0
 1490 00e3 10       		.uleb128 0x10
 1491 00e4 898201   		.uleb128 0x4109
 1492 00e7 00       		.byte	0
 1493 00e8 11       		.uleb128 0x11
 1494 00e9 01       		.uleb128 0x1
 1495 00ea 31       		.uleb128 0x31
 1496 00eb 13       		.uleb128 0x13
 1497 00ec 00       		.byte	0
 1498 00ed 00       		.byte	0
 1499 00ee 11       		.uleb128 0x11
 1500 00ef 898201   		.uleb128 0x4109
 1501 00f2 01       		.byte	0x1
 1502 00f3 11       		.uleb128 0x11
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 46


 1503 00f4 01       		.uleb128 0x1
 1504 00f5 31       		.uleb128 0x31
 1505 00f6 13       		.uleb128 0x13
 1506 00f7 01       		.uleb128 0x1
 1507 00f8 13       		.uleb128 0x13
 1508 00f9 00       		.byte	0
 1509 00fa 00       		.byte	0
 1510 00fb 12       		.uleb128 0x12
 1511 00fc 8A8201   		.uleb128 0x410a
 1512 00ff 00       		.byte	0
 1513 0100 02       		.uleb128 0x2
 1514 0101 18       		.uleb128 0x18
 1515 0102 9142     		.uleb128 0x2111
 1516 0104 18       		.uleb128 0x18
 1517 0105 00       		.byte	0
 1518 0106 00       		.byte	0
 1519 0107 13       		.uleb128 0x13
 1520 0108 898201   		.uleb128 0x4109
 1521 010b 01       		.byte	0x1
 1522 010c 11       		.uleb128 0x11
 1523 010d 01       		.uleb128 0x1
 1524 010e 31       		.uleb128 0x31
 1525 010f 13       		.uleb128 0x13
 1526 0110 00       		.byte	0
 1527 0111 00       		.byte	0
 1528 0112 14       		.uleb128 0x14
 1529 0113 34       		.uleb128 0x34
 1530 0114 00       		.byte	0
 1531 0115 03       		.uleb128 0x3
 1532 0116 0E       		.uleb128 0xe
 1533 0117 3A       		.uleb128 0x3a
 1534 0118 0B       		.uleb128 0xb
 1535 0119 3B       		.uleb128 0x3b
 1536 011a 05       		.uleb128 0x5
 1537 011b 49       		.uleb128 0x49
 1538 011c 13       		.uleb128 0x13
 1539 011d 3F       		.uleb128 0x3f
 1540 011e 19       		.uleb128 0x19
 1541 011f 3C       		.uleb128 0x3c
 1542 0120 19       		.uleb128 0x19
 1543 0121 00       		.byte	0
 1544 0122 00       		.byte	0
 1545 0123 15       		.uleb128 0x15
 1546 0124 35       		.uleb128 0x35
 1547 0125 00       		.byte	0
 1548 0126 49       		.uleb128 0x49
 1549 0127 13       		.uleb128 0x13
 1550 0128 00       		.byte	0
 1551 0129 00       		.byte	0
 1552 012a 16       		.uleb128 0x16
 1553 012b 2E       		.uleb128 0x2e
 1554 012c 00       		.byte	0
 1555 012d 3F       		.uleb128 0x3f
 1556 012e 19       		.uleb128 0x19
 1557 012f 3C       		.uleb128 0x3c
 1558 0130 19       		.uleb128 0x19
 1559 0131 6E       		.uleb128 0x6e
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 47


 1560 0132 0E       		.uleb128 0xe
 1561 0133 03       		.uleb128 0x3
 1562 0134 0E       		.uleb128 0xe
 1563 0135 3A       		.uleb128 0x3a
 1564 0136 0B       		.uleb128 0xb
 1565 0137 3B       		.uleb128 0x3b
 1566 0138 0B       		.uleb128 0xb
 1567 0139 00       		.byte	0
 1568 013a 00       		.byte	0
 1569 013b 17       		.uleb128 0x17
 1570 013c 2E       		.uleb128 0x2e
 1571 013d 00       		.byte	0
 1572 013e 3F       		.uleb128 0x3f
 1573 013f 19       		.uleb128 0x19
 1574 0140 3C       		.uleb128 0x3c
 1575 0141 19       		.uleb128 0x19
 1576 0142 6E       		.uleb128 0x6e
 1577 0143 0E       		.uleb128 0xe
 1578 0144 03       		.uleb128 0x3
 1579 0145 0E       		.uleb128 0xe
 1580 0146 3A       		.uleb128 0x3a
 1581 0147 0B       		.uleb128 0xb
 1582 0148 3B       		.uleb128 0x3b
 1583 0149 05       		.uleb128 0x5
 1584 014a 00       		.byte	0
 1585 014b 00       		.byte	0
 1586 014c 18       		.uleb128 0x18
 1587 014d 2E       		.uleb128 0x2e
 1588 014e 00       		.byte	0
 1589 014f 3F       		.uleb128 0x3f
 1590 0150 19       		.uleb128 0x19
 1591 0151 3C       		.uleb128 0x3c
 1592 0152 19       		.uleb128 0x19
 1593 0153 6E       		.uleb128 0x6e
 1594 0154 0E       		.uleb128 0xe
 1595 0155 03       		.uleb128 0x3
 1596 0156 0E       		.uleb128 0xe
 1597 0157 3A       		.uleb128 0x3a
 1598 0158 0B       		.uleb128 0xb
 1599 0159 3B       		.uleb128 0x3b
 1600 015a 0B       		.uleb128 0xb
 1601 015b 6E       		.uleb128 0x6e
 1602 015c 0E       		.uleb128 0xe
 1603 015d 00       		.byte	0
 1604 015e 00       		.byte	0
 1605 015f 00       		.byte	0
 1606              		.section	.debug_loc,"",%progbits
 1607              	.Ldebug_loc0:
 1608              	.LLST0:
 1609 0000 0E000000 		.4byte	.LVL1
 1610 0004 15000000 		.4byte	.LVL2-1
 1611 0008 0100     		.2byte	0x1
 1612 000a 50       		.byte	0x50
 1613 000b 00000000 		.4byte	0
 1614 000f 00000000 		.4byte	0
 1615              	.LLST1:
 1616 0013 1C000000 		.4byte	.LVL3
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 48


 1617 0017 B4000000 		.4byte	.LVL24
 1618 001b 0200     		.2byte	0x2
 1619 001d 30       		.byte	0x30
 1620 001e 9F       		.byte	0x9f
 1621 001f B4000000 		.4byte	.LVL24
 1622 0023 BC010000 		.4byte	.LFE85
 1623 0027 0200     		.2byte	0x2
 1624 0029 31       		.byte	0x31
 1625 002a 9F       		.byte	0x9f
 1626 002b 00000000 		.4byte	0
 1627 002f 00000000 		.4byte	0
 1628              	.LLST2:
 1629 0033 1C000000 		.4byte	.LVL3
 1630 0037 54000000 		.4byte	.LVL11
 1631 003b 0200     		.2byte	0x2
 1632 003d 31       		.byte	0x31
 1633 003e 9F       		.byte	0x9f
 1634 003f 54000000 		.4byte	.LVL11
 1635 0043 8C000000 		.4byte	.LVL16
 1636 0047 0100     		.2byte	0x1
 1637 0049 54       		.byte	0x54
 1638 004a 8C000000 		.4byte	.LVL16
 1639 004e 8E000000 		.4byte	.LVL17
 1640 0052 0200     		.2byte	0x2
 1641 0054 30       		.byte	0x30
 1642 0055 9F       		.byte	0x9f
 1643 0056 8E000000 		.4byte	.LVL17
 1644 005a BC000000 		.4byte	.LVL26
 1645 005e 0100     		.2byte	0x1
 1646 0060 54       		.byte	0x54
 1647 0061 00000000 		.4byte	0
 1648 0065 00000000 		.4byte	0
 1649              	.LLST3:
 1650 0069 AA000000 		.4byte	.LVL22
 1651 006d B0000000 		.4byte	.LVL23
 1652 0071 0100     		.2byte	0x1
 1653 0073 50       		.byte	0x50
 1654 0074 B0000000 		.4byte	.LVL23
 1655 0078 B3000000 		.4byte	.LVL24-1
 1656 007c 0100     		.2byte	0x1
 1657 007e 52       		.byte	0x52
 1658 007f 00000000 		.4byte	0
 1659 0083 00000000 		.4byte	0
 1660              	.LLST4:
 1661 0087 3C010000 		.4byte	.LVL40
 1662 008b 3E010000 		.4byte	.LVL41
 1663 008f 0600     		.2byte	0x6
 1664 0091 70       		.byte	0x70
 1665 0092 00       		.sleb128 0
 1666 0093 74       		.byte	0x74
 1667 0094 00       		.sleb128 0
 1668 0095 1C       		.byte	0x1c
 1669 0096 9F       		.byte	0x9f
 1670 0097 3E010000 		.4byte	.LVL41
 1671 009b 7E010000 		.4byte	.LVL47
 1672 009f 0100     		.2byte	0x1
 1673 00a1 54       		.byte	0x54
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 49


 1674 00a2 00000000 		.4byte	0
 1675 00a6 00000000 		.4byte	0
 1676              	.LLST5:
 1677 00aa E6000000 		.4byte	.LVL30
 1678 00ae F0000000 		.4byte	.LVL31
 1679 00b2 0100     		.2byte	0x1
 1680 00b4 50       		.byte	0x50
 1681 00b5 FC000000 		.4byte	.LVL34
 1682 00b9 04010000 		.4byte	.LVL35
 1683 00bd 0100     		.2byte	0x1
 1684 00bf 50       		.byte	0x50
 1685 00c0 00000000 		.4byte	0
 1686 00c4 00000000 		.4byte	0
 1687              		.section	.debug_aranges,"",%progbits
 1688 0000 1C000000 		.4byte	0x1c
 1689 0004 0200     		.2byte	0x2
 1690 0006 00000000 		.4byte	.Ldebug_info0
 1691 000a 04       		.byte	0x4
 1692 000b 00       		.byte	0
 1693 000c 0000     		.2byte	0
 1694 000e 0000     		.2byte	0
 1695 0010 00000000 		.4byte	.LFB85
 1696 0014 BC010000 		.4byte	.LFE85-.LFB85
 1697 0018 00000000 		.4byte	0
 1698 001c 00000000 		.4byte	0
 1699              		.section	.debug_ranges,"",%progbits
 1700              	.Ldebug_ranges0:
 1701 0000 00000000 		.4byte	.LFB85
 1702 0004 BC010000 		.4byte	.LFE85
 1703 0008 00000000 		.4byte	0
 1704 000c 00000000 		.4byte	0
 1705              		.section	.debug_line,"",%progbits
 1706              	.Ldebug_line0:
 1707 0000 C8020000 		.section	.debug_str,"MS",%progbits,1
 1707      02006402 
 1707      00000201 
 1707      FB0E0D00 
 1707      01010101 
 1708              	.LASF48:
 1709 0000 42656570 		.ascii	"Beep\000"
 1709      00
 1710              	.LASF51:
 1711 0005 43795379 		.ascii	"CySysTickEnable\000"
 1711      73546963 
 1711      6B456E61 
 1711      626C6500 
 1712              	.LASF4:
 1713 0015 73686F72 		.ascii	"short int\000"
 1713      7420696E 
 1713      7400
 1714              	.LASF21:
 1715 001f 73697A65 		.ascii	"sizetype\000"
 1715      74797065 
 1715      00
 1716              	.LASF24:
 1717 0028 61636358 		.ascii	"accX\000"
 1717      00
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 50


 1718              	.LASF25:
 1719 002d 61636359 		.ascii	"accY\000"
 1719      00
 1720              	.LASF26:
 1721 0032 6163635A 		.ascii	"accZ\000"
 1721      00
 1722              	.LASF5:
 1723 0037 5F5F7569 		.ascii	"__uint16_t\000"
 1723      6E743136 
 1723      5F7400
 1724              	.LASF57:
 1725 0042 433A5C55 		.ascii	"C:\\Users\\ilyap\\Documents\\PSoC Creator\\Zumo_tan"
 1725      73657273 
 1725      5C696C79 
 1725      61705C44 
 1725      6F63756D 
 1726 0070 6B5C5A75 		.ascii	"k\\Zumo_robot\\ZumoBot_Tank.cydsn\000"
 1726      6D6F5F72 
 1726      6F626F74 
 1726      5C5A756D 
 1726      6F426F74 
 1727              	.LASF22:
 1728 0090 73656E73 		.ascii	"sensors_\000"
 1728      6F72735F 
 1728      00
 1729              	.LASF13:
 1730 0099 75696E74 		.ascii	"uint8_t\000"
 1730      385F7400 
 1731              	.LASF29:
 1732 00a1 6C6F6F70 		.ascii	"loop1\000"
 1732      3100
 1733              	.LASF30:
 1734 00a7 73746172 		.ascii	"startline\000"
 1734      746C696E 
 1734      6500
 1735              	.LASF38:
 1736 00b1 6D6F746F 		.ascii	"motor_turn\000"
 1736      725F7475 
 1736      726E00
 1737              	.LASF32:
 1738 00bc 636F756E 		.ascii	"count\000"
 1738      7400
 1739              	.LASF37:
 1740 00c2 72616E64 		.ascii	"rand\000"
 1740      00
 1741              	.LASF46:
 1742 00c7 7265666C 		.ascii	"reflectance_start\000"
 1742      65637461 
 1742      6E63655F 
 1742      73746172 
 1742      7400
 1743              	.LASF17:
 1744 00d9 666C6F61 		.ascii	"float\000"
 1744      7400
 1745              	.LASF10:
 1746 00df 6C6F6E67 		.ascii	"long long int\000"
 1746      206C6F6E 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 51


 1746      6720696E 
 1746      7400
 1747              	.LASF41:
 1748 00ed 7265666C 		.ascii	"reflectance_digital\000"
 1748      65637461 
 1748      6E63655F 
 1748      64696769 
 1748      74616C00 
 1749              	.LASF8:
 1750 0101 6C6F6E67 		.ascii	"long int\000"
 1750      20696E74 
 1750      00
 1751              	.LASF35:
 1752 010a 43795379 		.ascii	"CySysTickGetValue\000"
 1752      73546963 
 1752      6B476574 
 1752      56616C75 
 1752      6500
 1753              	.LASF23:
 1754 011c 61636344 		.ascii	"accData_\000"
 1754      6174615F 
 1754      00
 1755              	.LASF2:
 1756 0125 5F5F7569 		.ascii	"__uint8_t\000"
 1756      6E74385F 
 1756      7400
 1757              	.LASF43:
 1758 012f 49525F53 		.ascii	"IR_Start\000"
 1758      74617274 
 1758      00
 1759              	.LASF20:
 1760 0138 6C6F6E67 		.ascii	"long double\000"
 1760      20646F75 
 1760      626C6500 
 1761              	.LASF42:
 1762 0144 4C534D33 		.ascii	"LSM303D_Read_Acc\000"
 1762      3033445F 
 1762      52656164 
 1762      5F416363 
 1762      00
 1763              	.LASF50:
 1764 0155 49525F77 		.ascii	"IR_wait\000"
 1764      61697400 
 1765              	.LASF1:
 1766 015d 756E7369 		.ascii	"unsigned char\000"
 1766      676E6564 
 1766      20636861 
 1766      7200
 1767              	.LASF47:
 1768 016b 7265666C 		.ascii	"reflectance_set_threshold\000"
 1768      65637461 
 1768      6E63655F 
 1768      7365745F 
 1768      74687265 
 1769              	.LASF0:
 1770 0185 7369676E 		.ascii	"signed char\000"
 1770      65642063 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 52


 1770      68617200 
 1771              	.LASF53:
 1772 0191 42617474 		.ascii	"BatteryLed_Write\000"
 1772      6572794C 
 1772      65645F57 
 1772      72697465 
 1772      00
 1773              	.LASF11:
 1774 01a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1774      206C6F6E 
 1774      6720756E 
 1774      7369676E 
 1774      65642069 
 1775              	.LASF39:
 1776 01b9 76546173 		.ascii	"vTaskDelay\000"
 1776      6B44656C 
 1776      617900
 1777              	.LASF45:
 1778 01c4 49525F66 		.ascii	"IR_flush\000"
 1778      6C757368 
 1778      00
 1779              	.LASF12:
 1780 01cd 756E7369 		.ascii	"unsigned int\000"
 1780      676E6564 
 1780      20696E74 
 1780      00
 1781              	.LASF15:
 1782 01da 75696E74 		.ascii	"uint16_t\000"
 1782      31365F74 
 1782      00
 1783              	.LASF31:
 1784 01e3 6C6F6F70 		.ascii	"loop2\000"
 1784      3200
 1785              	.LASF60:
 1786 01e9 70757473 		.ascii	"puts\000"
 1786      00
 1787              	.LASF33:
 1788 01ee 73746172 		.ascii	"start\000"
 1788      7400
 1789              	.LASF6:
 1790 01f4 73686F72 		.ascii	"short unsigned int\000"
 1790      7420756E 
 1790      7369676E 
 1790      65642069 
 1790      6E7400
 1791              	.LASF49:
 1792 0207 6D6F746F 		.ascii	"motor_forward\000"
 1792      725F666F 
 1792      72776172 
 1792      6400
 1793              	.LASF19:
 1794 0215 63686172 		.ascii	"char\000"
 1794      00
 1795              	.LASF16:
 1796 021a 696E7433 		.ascii	"int32_t\000"
 1796      325F7400 
 1797              	.LASF14:
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 53


 1798 0222 696E7431 		.ascii	"int16_t\000"
 1798      365F7400 
 1799              	.LASF34:
 1800 022a 5F426F6F 		.ascii	"_Bool\000"
 1800      6C00
 1801              	.LASF36:
 1802 0230 7072696E 		.ascii	"print_mqtt\000"
 1802      745F6D71 
 1802      747400
 1803              	.LASF27:
 1804 023b 64617461 		.ascii	"data\000"
 1804      00
 1805              	.LASF54:
 1806 0240 5357315F 		.ascii	"SW1_Read\000"
 1806      52656164 
 1806      00
 1807              	.LASF56:
 1808 0249 6D61696E 		.ascii	"main.c\000"
 1808      2E6300
 1809              	.LASF9:
 1810 0250 6C6F6E67 		.ascii	"long unsigned int\000"
 1810      20756E73 
 1810      69676E65 
 1810      6420696E 
 1810      7400
 1811              	.LASF18:
 1812 0262 646F7562 		.ascii	"double\000"
 1812      6C6500
 1813              	.LASF44:
 1814 0269 6D6F746F 		.ascii	"motor_start\000"
 1814      725F7374 
 1814      61727400 
 1815              	.LASF61:
 1816 0275 5F5F6275 		.ascii	"__builtin_puts\000"
 1816      696C7469 
 1816      6E5F7075 
 1816      747300
 1817              	.LASF28:
 1818 0284 62757474 		.ascii	"button_\000"
 1818      6F6E5F00 
 1819              	.LASF58:
 1820 028c 7A6D6169 		.ascii	"zmain\000"
 1820      6E00
 1821              	.LASF7:
 1822 0292 5F5F696E 		.ascii	"__int32_t\000"
 1822      7433325F 
 1822      7400
 1823              	.LASF40:
 1824 029c 7265666C 		.ascii	"reflectance_read\000"
 1824      65637461 
 1824      6E63655F 
 1824      72656164 
 1824      00
 1825              	.LASF3:
 1826 02ad 5F5F696E 		.ascii	"__int16_t\000"
 1826      7431365F 
 1826      7400
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cceiLUPo.s 			page 54


 1827              	.LASF52:
 1828 02b7 43795379 		.ascii	"CySysTickStart\000"
 1828      73546963 
 1828      6B537461 
 1828      727400
 1829              	.LASF59:
 1830 02c6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1830      52784275 
 1830      66666572 
 1830      00
 1831              	.LASF55:
 1832 02d3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1832      43313120 
 1832      352E342E 
 1832      31203230 
 1832      31363036 
 1833 0306 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1833      20726576 
 1833      6973696F 
 1833      6E203233 
 1833      37373135 
 1834 0339 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1834      66756E63 
 1834      74696F6E 
 1834      2D736563 
 1834      74696F6E 
 1835              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
