ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.zmain,"ax",%progbits
  20              		.align	2
  21              		.global	zmain
  22              		.thumb
  23              		.thumb_func
  24              		.type	zmain, %function
  25              	zmain:
  26              	.LFB85:
  27              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        ****     
  12:main.c        ****     <p>
  13:main.c        ****     <B>Sensors</B><br>
  14:main.c        ****     &nbsp;Included: <br>
  15:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
  16:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
  17:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
  18:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
  19:main.c        ****     &nbsp;Wii nunchuck<br>
  20:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
  21:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
  22:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
  23:main.c        ****     &nbsp;IR LED <br><br><br>
  24:main.c        ****     </p>
  25:main.c        ****     
  26:main.c        ****     <p>
  27:main.c        ****     <B>Communication</B><br>
  28:main.c        ****     I2C, UART, Serial<br>
  29:main.c        ****     </p>
  30:main.c        **** */
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 2


  31:main.c        **** 
  32:main.c        **** #include <project.h>
  33:main.c        **** #include <stdio.h>
  34:main.c        **** #include <stdlib.h>
  35:main.c        **** #include "FreeRTOS.h"
  36:main.c        **** #include "task.h"
  37:main.c        **** #include "Motor.h"
  38:main.c        **** #include "Ultra.h"
  39:main.c        **** #include "Nunchuk.h"
  40:main.c        **** #include "Reflectance.h"
  41:main.c        **** #include "Gyro.h"
  42:main.c        **** #include "Accel_magnet.h"
  43:main.c        **** #include "LSM303D.h"
  44:main.c        **** #include "IR.h"
  45:main.c        **** #include "Beep.h"
  46:main.c        **** #include "mqtt_sender.h"
  47:main.c        **** #include <time.h>
  48:main.c        **** #include <sys/time.h>
  49:main.c        **** #include "serial1.h"
  50:main.c        **** #include <unistd.h>
  51:main.c        **** /**
  52:main.c        ****  * @file    main.c
  53:main.c        ****  * @brief   
  54:main.c        ****  * @details  ** Enable global interrupt since Zumo library uses interrupts. **<br>&nbsp;&nbsp;&nbsp
  55:main.c        **** */
  56:main.c        **** 
  57:main.c        **** #if 0
  58:main.c        **** //template
  59:main.c        **** void zmain(void){
  60:main.c        ****     
  61:main.c        ****     while(true)
  62:main.c        ****     {
  63:main.c        ****         BatteryLed_Write(!SW1_Read());
  64:main.c        ****         vTaskDelay(100);
  65:main.c        ****     }
  66:main.c        **** }
  67:main.c        **** #endif
  68:main.c        **** 
  69:main.c        **** #if 0
  70:main.c        **** // Beep light test
  71:main.c        **** void zmain(void)
  72:main.c        **** {
  73:main.c        ****     while(true)
  74:main.c        ****     {
  75:main.c        ****         if ((SW1_Read() == 0)){
  76:main.c        ****             for(int i = 0; i < 3; i++){
  77:main.c        ****                 BatteryLed_Write(1);
  78:main.c        ****                 Beep(750, 30);
  79:main.c        ****                 vTaskDelay(500);
  80:main.c        ****                 BatteryLed_Write(0);
  81:main.c        ****                 vTaskDelay(500);
  82:main.c        ****             }
  83:main.c        ****             for(int i = 0; i<3; i++){
  84:main.c        ****                 BatteryLed_Write(1);
  85:main.c        ****                 Beep(750, 30);
  86:main.c        ****                 vTaskDelay(1000);
  87:main.c        ****                 BatteryLed_Write(0);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 3


  88:main.c        ****                 vTaskDelay(500);
  89:main.c        ****             }
  90:main.c        ****             for(int i = 0; i < 3; i++){
  91:main.c        ****                 BatteryLed_Write(1);
  92:main.c        ****                 Beep(750, 30);
  93:main.c        ****                 vTaskDelay(500);
  94:main.c        ****                 BatteryLed_Write(0);
  95:main.c        ****                 vTaskDelay(500);
  96:main.c        ****             }
  97:main.c        ****         }
  98:main.c        ****     }
  99:main.c        ****     
 100:main.c        ****     
 101:main.c        ****  }   
 102:main.c        **** #endif
 103:main.c        **** 
 104:main.c        **** #if 0
 105:main.c        **** // Name and age
 106:main.c        **** void zmain(void)
 107:main.c        **** {
 108:main.c        ****     TickType_t start;
 109:main.c        ****     TickType_t end;
 110:main.c        ****     char name[32];
 111:main.c        ****     int age;
 112:main.c        ****     
 113:main.c        ****     
 114:main.c        ****     printf("\n\n");
 115:main.c        ****     
 116:main.c        ****     printf("Enter your name: ");
 117:main.c        ****     //fflush(stdout);
 118:main.c        ****     start = xTaskGetTickCount();
 119:main.c        ****     scanf("%s", name);
 120:main.c        ****     printf("Enter your age: ");
 121:main.c        ****     //fflush(stdout);
 122:main.c        ****     scanf("%d", &age);
 123:main.c        ****     end = xTaskGetTickCount();
 124:main.c        ****     printf("You are [%s], age = %d\n", name, age);
 125:main.c        ****     if (age <= 21){
 126:main.c        ****         if(end-start < 300){
 127:main.c        ****             printf("Super fast dude!");
 128:main.c        ****         }
 129:main.c        ****         else if((end-start >= 300)&&(end-start <=500)){
 130:main.c        ****             printf("So mediocre.");
 131:main.c        ****         }
 132:main.c        ****         else{
 133:main.c        ****             printf("My granny is faster than you!");
 134:main.c        ****         }
 135:main.c        ****     }
 136:main.c        ****     else if((age >= 22)&&(age<=50)){
 137:main.c        ****         if(end-start < 3){
 138:main.c        ****             printf("Be quick or be dead");
 139:main.c        ****         }
 140:main.c        ****         else if((end-start >= 300)&&(end-start <=500)){
 141:main.c        ****             printf("You're so average.");
 142:main.c        ****         }
 143:main.c        ****         else{
 144:main.c        ****             printf("Have you been smoking something illegal?");
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 4


 145:main.c        ****         }
 146:main.c        ****     }
 147:main.c        ****     else{
 148:main.c        ****         if(end-start <= 300){
 149:main.c        ****             printf("Still going strong");
 150:main.c        ****         }
 151:main.c        ****         else if((end-start >= 4)&&(end-start <=5)){
 152:main.c        ****             printf("You are doing ok for your age.");
 153:main.c        ****         }
 154:main.c        ****         else{
 155:main.c        ****             printf("Do they still allow you to drive?");
 156:main.c        ****         }
 157:main.c        ****     }
 158:main.c        ****     while(true)
 159:main.c        ****     {
 160:main.c        ****         BatteryLed_Write(!SW1_Read());
 161:main.c        ****         vTaskDelay(100);
 162:main.c        ****     }
 163:main.c        ****  }   
 164:main.c        **** #endif
 165:main.c        **** 
 166:main.c        **** 
 167:main.c        **** #if 0
 168:main.c        **** //battery level//
 169:main.c        **** void zmain(void)
 170:main.c        **** {
 171:main.c        **** 	ADC_Battery_Start();   	 
 172:main.c        **** 
 173:main.c        **** 	int16 adcresult =0;
 174:main.c        **** 	float volts = 0.0;
 175:main.c        **** 
 176:main.c        **** 	printf("\nBoot\n");
 177:main.c        **** 
 178:main.c        **** 	//BatteryLed_Write(1); // Switch led on
 179:main.c        **** 	//BatteryLed_Write(0); // Switch led off
 180:main.c        **** 	//uint8 button;
 181:main.c        **** 	//button = SW1_Read(); // read SW1 on pSoC board
 182:main.c        **** 	// SW1_Read() returns zero when button is pressed
 183:main.c        **** 	// SW1_Read() returns one when button is not pressed
 184:main.c        **** 
 185:main.c        **** 	while(true)
 186:main.c        **** 	{
 187:main.c        ****     	char msg[80];
 188:main.c        ****     	ADC_Battery_StartConvert(); // start sampling
 189:main.c        ****     	if(ADC_Battery_IsEndConversion(ADC_Battery_WAIT_FOR_RESULT)) {   // wait for ADC converted val
 190:main.c        ****         	adcresult = ADC_Battery_GetResult16(); // get the ADC value (0 - 4095)
 191:main.c        ****         	volts=(adcresult*5/4095)*(30/20);
 192:main.c        ****         	// convert value to Volts
 193:main.c        ****         	// you need to implement the conversion
 194:main.c        ****        	 
 195:main.c        ****         	// Print both ADC results and converted value
 196:main.c        ****         	printf("%d %f\r\n",adcresult, volts);
 197:main.c        ****        	 
 198:main.c        ****     	if (volts<4){
 199:main.c        ****         	while(SW1_Read()){
 200:main.c        ****             	BatteryLed_Write(1);
 201:main.c        ****             	vTaskDelay(500);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 5


 202:main.c        ****             	BatteryLed_Write(0);
 203:main.c        ****             	vTaskDelay(500);
 204:main.c        ****         	}
 205:main.c        ****     	}
 206:main.c        ****     	}
 207:main.c        ****     	vTaskDelay(500);
 208:main.c        **** 	}
 209:main.c        ****  }  
 210:main.c        **** 
 211:main.c        ****    
 212:main.c        **** #endif
 213:main.c        **** 
 214:main.c        **** #if 0
 215:main.c        **** // button
 216:main.c        **** void zmain(void)
 217:main.c        **** {
 218:main.c        ****     while(true) {
 219:main.c        ****         printf("Press button within 5 seconds!\n");
 220:main.c        ****         int i = 50;
 221:main.c        ****         while(i > 0) {
 222:main.c        ****             if(SW1_Read() == 0) {
 223:main.c        ****                 break;
 224:main.c        ****             }
 225:main.c        ****             vTaskDelay(100);
 226:main.c        ****             --i;
 227:main.c        ****         }
 228:main.c        ****         if(i > 0) {
 229:main.c        ****             printf("Good work\n");
 230:main.c        ****             while(SW1_Read() == 0) vTaskDelay(10); // wait until button is released
 231:main.c        ****         }
 232:main.c        ****         else {
 233:main.c        ****             printf("You didn't press the button\n");
 234:main.c        ****         }
 235:main.c        ****     }
 236:main.c        **** }
 237:main.c        **** #endif
 238:main.c        **** 
 239:main.c        **** #if 0
 240:main.c        **** // button
 241:main.c        **** void zmain(void)
 242:main.c        **** {
 243:main.c        ****     printf("\nBoot\n");
 244:main.c        **** 
 245:main.c        ****     //BatteryLed_Write(1); // Switch led on 
 246:main.c        ****     BatteryLed_Write(0); // Switch led off 
 247:main.c        ****     
 248:main.c        ****     //uint8 button;
 249:main.c        ****     //button = SW1_Read(); // read SW1 on pSoC board
 250:main.c        ****     // SW1_Read() returns zero when button is pressed
 251:main.c        ****     // SW1_Read() returns one when button is not pressed
 252:main.c        ****     
 253:main.c        ****     bool led = false;
 254:main.c        ****     
 255:main.c        ****     while(true)
 256:main.c        ****     {
 257:main.c        ****         // toggle led state when button is pressed
 258:main.c        ****         if(SW1_Read() == 0) {
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 6


 259:main.c        ****             led = !led;
 260:main.c        ****             BatteryLed_Write(led);
 261:main.c        ****             if(led) printf("Led is ON\n");
 262:main.c        ****             else printf("Led is OFF\n");
 263:main.c        ****             Beep(1000, 150);
 264:main.c        ****             while(SW1_Read() == 0) vTaskDelay(10); // wait while button is being pressed
 265:main.c        ****         }        
 266:main.c        ****     }
 267:main.c        ****  }   
 268:main.c        **** #endif
 269:main.c        **** 
 270:main.c        **** 
 271:main.c        **** #if 0
 272:main.c        **** //ultrasonic sensor//
 273:main.c        **** void zmain(void)
 274:main.c        **** {
 275:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 276:main.c        ****     
 277:main.c        ****     while(true) {
 278:main.c        ****         int d = Ultra_GetDistance();
 279:main.c        ****         // Print the detected distance (centimeters)
 280:main.c        ****         printf("distance = %d\r\n", d);
 281:main.c        ****         vTaskDelay(200);
 282:main.c        ****     }
 283:main.c        **** }   
 284:main.c        **** #endif
 285:main.c        **** 
 286:main.c        **** #if 0
 287:main.c        **** //IR receiverm - how to wait for IR remote commands
 288:main.c        **** void zmain(void)
 289:main.c        **** {
 290:main.c        ****     IR_Start();
 291:main.c        ****     
 292:main.c        ****     printf("\n\nIR test\n");
 293:main.c        ****     
 294:main.c        ****     IR_flush(); // clear IR receive buffer
 295:main.c        ****     printf("Buffer cleared\n");
 296:main.c        ****     
 297:main.c        ****     bool led = false;
 298:main.c        ****     // Toggle led when IR signal is received
 299:main.c        ****     while(true)
 300:main.c        ****     {
 301:main.c        ****         IR_wait();  // wait for IR command
 302:main.c        ****         led = !led;
 303:main.c        ****         BatteryLed_Write(led);
 304:main.c        ****         if(led) printf("Led is ON\n");
 305:main.c        ****         else printf("Led is OFF\n");
 306:main.c        ****     }    
 307:main.c        ****  }   
 308:main.c        **** #endif
 309:main.c        **** 
 310:main.c        **** 
 311:main.c        **** 
 312:main.c        **** #if 0
 313:main.c        **** //IR receiver - read raw data
 314:main.c        **** void zmain(void)
 315:main.c        **** {
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 7


 316:main.c        ****     IR_Start();
 317:main.c        ****     
 318:main.c        ****     uint32_t IR_val; 
 319:main.c        ****     
 320:main.c        ****     printf("\n\nIR test\n");
 321:main.c        ****     
 322:main.c        ****     IR_flush(); // clear IR receive buffer
 323:main.c        ****     printf("Buffer cleared\n");
 324:main.c        ****     
 325:main.c        ****     // print received IR pulses and their lengths
 326:main.c        ****     while(true)
 327:main.c        ****     {
 328:main.c        ****         if(IR_get(&IR_val, portMAX_DELAY)) {
 329:main.c        ****             int l = IR_val & IR_SIGNAL_MASK; // get pulse length
 330:main.c        ****             int b = 0;
 331:main.c        ****             if((IR_val & IR_SIGNAL_HIGH) != 0) b = 1; // get pulse state (0/1)
 332:main.c        ****             printf("%d %d\r\n",b, l);
 333:main.c        ****         }
 334:main.c        ****     }    
 335:main.c        ****  }   
 336:main.c        **** #endif
 337:main.c        **** 
 338:main.c        **** 
 339:main.c        **** #if 0
 340:main.c        **** //reflectance
 341:main.c        **** void zmain(void)
 342:main.c        **** {
 343:main.c        ****     struct sensors_ ref;
 344:main.c        ****     struct sensors_ dig;
 345:main.c        **** 
 346:main.c        ****     reflectance_start();
 347:main.c        ****     reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor threshold
 348:main.c        ****     
 349:main.c        **** 
 350:main.c        ****     while(true)
 351:main.c        ****     {
 352:main.c        ****         // read raw sensor values
 353:main.c        ****         reflectance_read(&ref);
 354:main.c        ****         // print out each period of reflectance sensors
 355:main.c        ****         printf("%5d %5d %5d %5d %5d %5d\r\n", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2, ref.r3);     
 356:main.c        ****         
 357:main.c        ****         // read digital values that are based on threshold. 0 = white, 1 = black
 358:main.c        ****         // when blackness value is over threshold the sensors reads 1, otherwise 0
 359:main.c        ****         reflectance_digital(&dig); 
 360:main.c        ****         //print out 0 or 1 according to results of reflectance period
 361:main.c        ****         printf("%5d %5d %5d %5d %5d %5d \r\n", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2, dig.r3);    
 362:main.c        ****         
 363:main.c        ****         vTaskDelay(200);
 364:main.c        ****     }
 365:main.c        **** }   
 366:main.c        **** #endif
 367:main.c        **** 
 368:main.c        **** 
 369:main.c        **** #if 0
 370:main.c        **** //motor
 371:main.c        **** void zmain(void)
 372:main.c        **** {
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 8


 373:main.c        ****     struct sensors_ ref;
 374:main.c        ****     struct sensors_ dig;
 375:main.c        **** 
 376:main.c        ****     reflectance_start();
 377:main.c        ****     reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor threshold
 378:main.c        ****     
 379:main.c        ****     reflectance_digital(&dig);
 380:main.c        ****     
 381:main.c        ****     motor_start();              // enable motor controller
 382:main.c        ****     motor_forward(0,0);         // set speed to zero to stop motors
 383:main.c        **** 
 384:main.c        ****     vTaskDelay(3000);
 385:main.c        ****     
 386:main.c        ****     if(dig.l3, dig.l2, dig.l1){
 387:main.c        ****         
 388:main.c        ****     }
 389:main.c        ****     motor_forward(100,2000);     // moving forward
 390:main.c        ****     motor_turn(200,50,2000);     // turn
 391:main.c        ****     motor_turn(50,200,2000);     // turn
 392:main.c        ****     motor_backward(100,2000);    // moving backward
 393:main.c        ****      
 394:main.c        ****     motor_forward(0,0);         // stop motors
 395:main.c        **** 
 396:main.c        ****     motor_stop();               // disable motor controller
 397:main.c        ****     
 398:main.c        ****     while(true)
 399:main.c        ****     {
 400:main.c        ****         vTaskDelay(100);
 401:main.c        ****     }
 402:main.c        **** }
 403:main.c        **** #endif
 404:main.c        **** 
 405:main.c        **** #if 1
 406:main.c        **** /* Example of how to use te Accelerometer!!!*/
 407:main.c        **** void zmain(void)
 408:main.c        **** {
  28              		.loc 1 408 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
 409:main.c        ****     struct accData_ data;
 410:main.c        ****     
 411:main.c        ****     printf("Accelerometer test...\n");
  37              		.loc 1 411 0
  38 0004 1348     		ldr	r0, .L6
  39 0006 FFF7FEFF 		bl	puts
  40              	.LVL0:
 412:main.c        **** 
 413:main.c        ****     if(!LSM303D_Start()){
  41              		.loc 1 413 0
  42 000a FFF7FEFF 		bl	LSM303D_Start
  43              	.LVL1:
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 9


  44 000e 30B9     		cbnz	r0, .L2
 414:main.c        ****         printf("LSM303D failed to initialize!!! Program is Ending!!!\n");
  45              		.loc 1 414 0
  46 0010 1148     		ldr	r0, .L6+4
  47 0012 FFF7FEFF 		bl	puts
  48              	.LVL2:
 415:main.c        ****         vTaskSuspend(NULL);
  49              		.loc 1 415 0
  50 0016 0020     		movs	r0, #0
  51 0018 FFF7FEFF 		bl	vTaskSuspend
  52              	.LVL3:
  53 001c 02E0     		b	.L3
  54              	.L2:
 416:main.c        ****     }
 417:main.c        ****     else {
 418:main.c        ****         printf("Device Ok...\n");
  55              		.loc 1 418 0
  56 001e 0F48     		ldr	r0, .L6+8
  57 0020 FFF7FEFF 		bl	puts
  58              	.LVL4:
  59              	.L3:
 419:main.c        ****     }
 420:main.c        ****     motor_start();              // enable motor controller
  60              		.loc 1 420 0
  61 0024 FFF7FEFF 		bl	motor_start
  62              	.LVL5:
  63              	.L4:
 421:main.c        ****     while(true)
 422:main.c        ****     {
 423:main.c        ****         LSM303D_Read_Acc(&data);
  64              		.loc 1 423 0 discriminator 1
  65 0028 6846     		mov	r0, sp
  66 002a FFF7FEFF 		bl	LSM303D_Read_Acc
  67              	.LVL6:
 424:main.c        ****        
 425:main.c        ****         motor_forward(100,2000);
  68              		.loc 1 425 0 discriminator 1
  69 002e 4FF4FA61 		mov	r1, #2000
  70 0032 6420     		movs	r0, #100
  71 0034 FFF7FEFF 		bl	motor_forward
  72              	.LVL7:
 426:main.c        ****         
 427:main.c        ****         /*if(((data.accX>=1000)&&(data.accY>=500))||((data.accX<=-1)&&(data.accY<=-1))){
 428:main.c        ****             srand(time(NULL));   // Initialization, should only be called once.
 429:main.c        ****             int r = rand() % 1;      // Returns a pseudo-random integer between 0 and RAND_MAX.
 430:main.c        ****             if(r == 0){
 431:main.c        ****                 motor_backward(80,1000);
 432:main.c        ****                 motor_turn(200,50,2000);
 433:main.c        ****             }
 434:main.c        ****             else{
 435:main.c        ****                 motor_backward(80,1000);
 436:main.c        ****                 motor_turn(50,200,2000);
 437:main.c        ****             }
 438:main.c        ****         }*/
 439:main.c        ****         
 440:main.c        ****         printf("%8d %8d %8d\n",data.accX, data.accY, data.accZ);
  73              		.loc 1 440 0 discriminator 1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 10


  74 0038 BDF90430 		ldrsh	r3, [sp, #4]
  75 003c BDF90220 		ldrsh	r2, [sp, #2]
  76 0040 BDF90010 		ldrsh	r1, [sp]
  77 0044 0648     		ldr	r0, .L6+12
  78 0046 FFF7FEFF 		bl	printf
  79              	.LVL8:
 441:main.c        ****         vTaskDelay(50);
  80              		.loc 1 441 0 discriminator 1
  81 004a 3220     		movs	r0, #50
  82 004c FFF7FEFF 		bl	vTaskDelay
  83              	.LVL9:
  84 0050 EAE7     		b	.L4
  85              	.L7:
  86 0052 00BF     		.align	2
  87              	.L6:
  88 0054 00000000 		.word	.LC0
  89 0058 18000000 		.word	.LC1
  90 005c 50000000 		.word	.LC2
  91 0060 60000000 		.word	.LC3
  92              		.cfi_endproc
  93              	.LFE85:
  94              		.size	zmain, .-zmain
  95              		.section	.rodata.str1.4,"aMS",%progbits,1
  96              		.align	2
  97              	.LC0:
  98 0000 41636365 		.ascii	"Accelerometer test...\000"
  98      6C65726F 
  98      6D657465 
  98      72207465 
  98      73742E2E 
  99 0016 0000     		.space	2
 100              	.LC1:
 101 0018 4C534D33 		.ascii	"LSM303D failed to initialize!!! Program is Ending!!"
 101      30334420 
 101      6661696C 
 101      65642074 
 101      6F20696E 
 102 004b 2100     		.ascii	"!\000"
 103 004d 000000   		.space	3
 104              	.LC2:
 105 0050 44657669 		.ascii	"Device Ok...\000"
 105      6365204F 
 105      6B2E2E2E 
 105      00
 106 005d 000000   		.space	3
 107              	.LC3:
 108 0060 25386420 		.ascii	"%8d %8d %8d\012\000"
 108      25386420 
 108      2538640A 
 108      00
 109              		.text
 110              	.Letext0:
 111              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 112              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 113              		.file 4 ".\\ZumoLibrary/LSM303D.h"
 114              		.file 5 "..\\FreeRTOS\\Source\\include/task.h"
 115              		.file 6 ".\\ZumoLibrary/Motor.h"
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 11


 116              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 117              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 118              		.file 9 "<built-in>"
 119              		.section	.debug_info,"",%progbits
 120              	.Ldebug_info0:
 121 0000 3D020000 		.4byte	0x23d
 122 0004 0400     		.2byte	0x4
 123 0006 00000000 		.4byte	.Ldebug_abbrev0
 124 000a 04       		.byte	0x4
 125 000b 01       		.uleb128 0x1
 126 000c 4E000000 		.4byte	.LASF28
 127 0010 0C       		.byte	0xc
 128 0011 ED010000 		.4byte	.LASF29
 129 0015 88010000 		.4byte	.LASF30
 130 0019 00000000 		.4byte	.Ldebug_ranges0+0
 131 001d 00000000 		.4byte	0
 132 0021 00000000 		.4byte	.Ldebug_line0
 133 0025 02       		.uleb128 0x2
 134 0026 01       		.byte	0x1
 135 0027 06       		.byte	0x6
 136 0028 23020000 		.4byte	.LASF0
 137 002c 02       		.uleb128 0x2
 138 002d 01       		.byte	0x1
 139 002e 08       		.byte	0x8
 140 002f 29010000 		.4byte	.LASF1
 141 0033 03       		.uleb128 0x3
 142 0034 00000000 		.4byte	.LASF4
 143 0038 02       		.byte	0x2
 144 0039 29       		.byte	0x29
 145 003a 3E000000 		.4byte	0x3e
 146 003e 02       		.uleb128 0x2
 147 003f 02       		.byte	0x2
 148 0040 05       		.byte	0x5
 149 0041 00020000 		.4byte	.LASF2
 150 0045 02       		.uleb128 0x2
 151 0046 02       		.byte	0x2
 152 0047 07       		.byte	0x7
 153 0048 FB000000 		.4byte	.LASF3
 154 004c 03       		.uleb128 0x3
 155 004d 0A000000 		.4byte	.LASF5
 156 0051 02       		.byte	0x2
 157 0052 3F       		.byte	0x3f
 158 0053 57000000 		.4byte	0x57
 159 0057 02       		.uleb128 0x2
 160 0058 04       		.byte	0x4
 161 0059 05       		.byte	0x5
 162 005a 0A020000 		.4byte	.LASF6
 163 005e 02       		.uleb128 0x2
 164 005f 04       		.byte	0x4
 165 0060 07       		.byte	0x7
 166 0061 E9000000 		.4byte	.LASF7
 167 0065 02       		.uleb128 0x2
 168 0066 08       		.byte	0x8
 169 0067 05       		.byte	0x5
 170 0068 DF010000 		.4byte	.LASF8
 171 006c 02       		.uleb128 0x2
 172 006d 08       		.byte	0x8
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 12


 173 006e 07       		.byte	0x7
 174 006f 51010000 		.4byte	.LASF9
 175 0073 04       		.uleb128 0x4
 176 0074 04       		.byte	0x4
 177 0075 05       		.byte	0x5
 178 0076 696E7400 		.ascii	"int\000"
 179 007a 02       		.uleb128 0x2
 180 007b 04       		.byte	0x4
 181 007c 07       		.byte	0x7
 182 007d 44010000 		.4byte	.LASF10
 183 0081 03       		.uleb128 0x3
 184 0082 74010000 		.4byte	.LASF11
 185 0086 03       		.byte	0x3
 186 0087 20       		.byte	0x20
 187 0088 33000000 		.4byte	0x33
 188 008c 03       		.uleb128 0x3
 189 008d 1D000000 		.4byte	.LASF12
 190 0091 03       		.byte	0x3
 191 0092 2C       		.byte	0x2c
 192 0093 4C000000 		.4byte	0x4c
 193 0097 02       		.uleb128 0x2
 194 0098 04       		.byte	0x4
 195 0099 04       		.byte	0x4
 196 009a 25000000 		.4byte	.LASF13
 197 009e 02       		.uleb128 0x2
 198 009f 08       		.byte	0x8
 199 00a0 04       		.byte	0x4
 200 00a1 37010000 		.4byte	.LASF14
 201 00a5 02       		.uleb128 0x2
 202 00a6 01       		.byte	0x1
 203 00a7 08       		.byte	0x8
 204 00a8 F4010000 		.4byte	.LASF15
 205 00ac 02       		.uleb128 0x2
 206 00ad 08       		.byte	0x8
 207 00ae 04       		.byte	0x4
 208 00af 7C010000 		.4byte	.LASF16
 209 00b3 02       		.uleb128 0x2
 210 00b4 04       		.byte	0x4
 211 00b5 07       		.byte	0x7
 212 00b6 D6010000 		.4byte	.LASF17
 213 00ba 05       		.uleb128 0x5
 214 00bb 14000000 		.4byte	.LASF31
 215 00bf 06       		.byte	0x6
 216 00c0 04       		.byte	0x4
 217 00c1 47       		.byte	0x47
 218 00c2 EB000000 		.4byte	0xeb
 219 00c6 06       		.uleb128 0x6
 220 00c7 3F000000 		.4byte	.LASF18
 221 00cb 04       		.byte	0x4
 222 00cc 49       		.byte	0x49
 223 00cd 81000000 		.4byte	0x81
 224 00d1 00       		.byte	0
 225 00d2 06       		.uleb128 0x6
 226 00d3 44000000 		.4byte	.LASF19
 227 00d7 04       		.byte	0x4
 228 00d8 4A       		.byte	0x4a
 229 00d9 81000000 		.4byte	0x81
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 13


 230 00dd 02       		.byte	0x2
 231 00de 06       		.uleb128 0x6
 232 00df 49000000 		.4byte	.LASF20
 233 00e3 04       		.byte	0x4
 234 00e4 4B       		.byte	0x4b
 235 00e5 81000000 		.4byte	0x81
 236 00e9 04       		.byte	0x4
 237 00ea 00       		.byte	0
 238 00eb 07       		.uleb128 0x7
 239 00ec 3E010000 		.4byte	.LASF32
 240 00f0 01       		.byte	0x1
 241 00f1 9701     		.2byte	0x197
 242 00f3 00000000 		.4byte	.LFB85
 243 00f7 64000000 		.4byte	.LFE85-.LFB85
 244 00fb 01       		.uleb128 0x1
 245 00fc 9C       		.byte	0x9c
 246 00fd D1010000 		.4byte	0x1d1
 247 0101 08       		.uleb128 0x8
 248 0102 2B000000 		.4byte	.LASF33
 249 0106 01       		.byte	0x1
 250 0107 9901     		.2byte	0x199
 251 0109 BA000000 		.4byte	0xba
 252 010d 02       		.uleb128 0x2
 253 010e 91       		.byte	0x91
 254 010f 70       		.sleb128 -16
 255 0110 09       		.uleb128 0x9
 256 0111 0A000000 		.4byte	.LVL0
 257 0115 E2010000 		.4byte	0x1e2
 258 0119 27010000 		.4byte	0x127
 259 011d 0A       		.uleb128 0xa
 260 011e 01       		.uleb128 0x1
 261 011f 50       		.byte	0x50
 262 0120 05       		.uleb128 0x5
 263 0121 03       		.byte	0x3
 264 0122 00000000 		.4byte	.LC0
 265 0126 00       		.byte	0
 266 0127 0B       		.uleb128 0xb
 267 0128 0E000000 		.4byte	.LVL1
 268 012c F1010000 		.4byte	0x1f1
 269 0130 09       		.uleb128 0x9
 270 0131 16000000 		.4byte	.LVL2
 271 0135 E2010000 		.4byte	0x1e2
 272 0139 47010000 		.4byte	0x147
 273 013d 0A       		.uleb128 0xa
 274 013e 01       		.uleb128 0x1
 275 013f 50       		.byte	0x50
 276 0140 05       		.uleb128 0x5
 277 0141 03       		.byte	0x3
 278 0142 18000000 		.4byte	.LC1
 279 0146 00       		.byte	0
 280 0147 09       		.uleb128 0x9
 281 0148 1C000000 		.4byte	.LVL3
 282 014c FC010000 		.4byte	0x1fc
 283 0150 5A010000 		.4byte	0x15a
 284 0154 0A       		.uleb128 0xa
 285 0155 01       		.uleb128 0x1
 286 0156 50       		.byte	0x50
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 14


 287 0157 01       		.uleb128 0x1
 288 0158 30       		.byte	0x30
 289 0159 00       		.byte	0
 290 015a 09       		.uleb128 0x9
 291 015b 24000000 		.4byte	.LVL4
 292 015f E2010000 		.4byte	0x1e2
 293 0163 71010000 		.4byte	0x171
 294 0167 0A       		.uleb128 0xa
 295 0168 01       		.uleb128 0x1
 296 0169 50       		.byte	0x50
 297 016a 05       		.uleb128 0x5
 298 016b 03       		.byte	0x3
 299 016c 50000000 		.4byte	.LC2
 300 0170 00       		.byte	0
 301 0171 0B       		.uleb128 0xb
 302 0172 28000000 		.4byte	.LVL5
 303 0176 08020000 		.4byte	0x208
 304 017a 09       		.uleb128 0x9
 305 017b 2E000000 		.4byte	.LVL6
 306 017f 13020000 		.4byte	0x213
 307 0183 8E010000 		.4byte	0x18e
 308 0187 0A       		.uleb128 0xa
 309 0188 01       		.uleb128 0x1
 310 0189 50       		.byte	0x50
 311 018a 02       		.uleb128 0x2
 312 018b 7D       		.byte	0x7d
 313 018c 00       		.sleb128 0
 314 018d 00       		.byte	0
 315 018e 09       		.uleb128 0x9
 316 018f 38000000 		.4byte	.LVL7
 317 0193 1E020000 		.4byte	0x21e
 318 0197 A9010000 		.4byte	0x1a9
 319 019b 0A       		.uleb128 0xa
 320 019c 01       		.uleb128 0x1
 321 019d 50       		.byte	0x50
 322 019e 02       		.uleb128 0x2
 323 019f 08       		.byte	0x8
 324 01a0 64       		.byte	0x64
 325 01a1 0A       		.uleb128 0xa
 326 01a2 01       		.uleb128 0x1
 327 01a3 51       		.byte	0x51
 328 01a4 03       		.uleb128 0x3
 329 01a5 0A       		.byte	0xa
 330 01a6 D007     		.2byte	0x7d0
 331 01a8 00       		.byte	0
 332 01a9 09       		.uleb128 0x9
 333 01aa 4A000000 		.4byte	.LVL8
 334 01ae 29020000 		.4byte	0x229
 335 01b2 C0010000 		.4byte	0x1c0
 336 01b6 0A       		.uleb128 0xa
 337 01b7 01       		.uleb128 0x1
 338 01b8 50       		.byte	0x50
 339 01b9 05       		.uleb128 0x5
 340 01ba 03       		.byte	0x3
 341 01bb 60000000 		.4byte	.LC3
 342 01bf 00       		.byte	0
 343 01c0 0C       		.uleb128 0xc
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 15


 344 01c1 50000000 		.4byte	.LVL9
 345 01c5 34020000 		.4byte	0x234
 346 01c9 0A       		.uleb128 0xa
 347 01ca 01       		.uleb128 0x1
 348 01cb 50       		.byte	0x50
 349 01cc 02       		.uleb128 0x2
 350 01cd 08       		.byte	0x8
 351 01ce 32       		.byte	0x32
 352 01cf 00       		.byte	0
 353 01d0 00       		.byte	0
 354 01d1 0D       		.uleb128 0xd
 355 01d2 0E010000 		.4byte	.LASF34
 356 01d6 08       		.byte	0x8
 357 01d7 1207     		.2byte	0x712
 358 01d9 DD010000 		.4byte	0x1dd
 359 01dd 0E       		.uleb128 0xe
 360 01de 8C000000 		.4byte	0x8c
 361 01e2 0F       		.uleb128 0xf
 362 01e3 1E020000 		.4byte	.LASF35
 363 01e7 30000000 		.4byte	.LASF36
 364 01eb 09       		.byte	0x9
 365 01ec 00       		.byte	0
 366 01ed 1E020000 		.4byte	.LASF35
 367 01f1 10       		.uleb128 0x10
 368 01f2 2F020000 		.4byte	.LASF21
 369 01f6 2F020000 		.4byte	.LASF21
 370 01fa 04       		.byte	0x4
 371 01fb 50       		.byte	0x50
 372 01fc 11       		.uleb128 0x11
 373 01fd DC000000 		.4byte	.LASF22
 374 0201 DC000000 		.4byte	.LASF22
 375 0205 05       		.byte	0x5
 376 0206 1F04     		.2byte	0x41f
 377 0208 10       		.uleb128 0x10
 378 0209 68010000 		.4byte	.LASF23
 379 020d 68010000 		.4byte	.LASF23
 380 0211 06       		.byte	0x6
 381 0212 0B       		.byte	0xb
 382 0213 10       		.uleb128 0x10
 383 0214 3D020000 		.4byte	.LASF24
 384 0218 3D020000 		.4byte	.LASF24
 385 021c 04       		.byte	0x4
 386 021d 51       		.byte	0x51
 387 021e 10       		.uleb128 0x10
 388 021f 1B010000 		.4byte	.LASF25
 389 0223 1B010000 		.4byte	.LASF25
 390 0227 06       		.byte	0x6
 391 0228 0F       		.byte	0xf
 392 0229 10       		.uleb128 0x10
 393 022a F9010000 		.4byte	.LASF26
 394 022e F9010000 		.4byte	.LASF26
 395 0232 07       		.byte	0x7
 396 0233 BB       		.byte	0xbb
 397 0234 11       		.uleb128 0x11
 398 0235 13020000 		.4byte	.LASF27
 399 0239 13020000 		.4byte	.LASF27
 400 023d 05       		.byte	0x5
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 16


 401 023e ED02     		.2byte	0x2ed
 402 0240 00       		.byte	0
 403              		.section	.debug_abbrev,"",%progbits
 404              	.Ldebug_abbrev0:
 405 0000 01       		.uleb128 0x1
 406 0001 11       		.uleb128 0x11
 407 0002 01       		.byte	0x1
 408 0003 25       		.uleb128 0x25
 409 0004 0E       		.uleb128 0xe
 410 0005 13       		.uleb128 0x13
 411 0006 0B       		.uleb128 0xb
 412 0007 03       		.uleb128 0x3
 413 0008 0E       		.uleb128 0xe
 414 0009 1B       		.uleb128 0x1b
 415 000a 0E       		.uleb128 0xe
 416 000b 55       		.uleb128 0x55
 417 000c 17       		.uleb128 0x17
 418 000d 11       		.uleb128 0x11
 419 000e 01       		.uleb128 0x1
 420 000f 10       		.uleb128 0x10
 421 0010 17       		.uleb128 0x17
 422 0011 00       		.byte	0
 423 0012 00       		.byte	0
 424 0013 02       		.uleb128 0x2
 425 0014 24       		.uleb128 0x24
 426 0015 00       		.byte	0
 427 0016 0B       		.uleb128 0xb
 428 0017 0B       		.uleb128 0xb
 429 0018 3E       		.uleb128 0x3e
 430 0019 0B       		.uleb128 0xb
 431 001a 03       		.uleb128 0x3
 432 001b 0E       		.uleb128 0xe
 433 001c 00       		.byte	0
 434 001d 00       		.byte	0
 435 001e 03       		.uleb128 0x3
 436 001f 16       		.uleb128 0x16
 437 0020 00       		.byte	0
 438 0021 03       		.uleb128 0x3
 439 0022 0E       		.uleb128 0xe
 440 0023 3A       		.uleb128 0x3a
 441 0024 0B       		.uleb128 0xb
 442 0025 3B       		.uleb128 0x3b
 443 0026 0B       		.uleb128 0xb
 444 0027 49       		.uleb128 0x49
 445 0028 13       		.uleb128 0x13
 446 0029 00       		.byte	0
 447 002a 00       		.byte	0
 448 002b 04       		.uleb128 0x4
 449 002c 24       		.uleb128 0x24
 450 002d 00       		.byte	0
 451 002e 0B       		.uleb128 0xb
 452 002f 0B       		.uleb128 0xb
 453 0030 3E       		.uleb128 0x3e
 454 0031 0B       		.uleb128 0xb
 455 0032 03       		.uleb128 0x3
 456 0033 08       		.uleb128 0x8
 457 0034 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 17


 458 0035 00       		.byte	0
 459 0036 05       		.uleb128 0x5
 460 0037 13       		.uleb128 0x13
 461 0038 01       		.byte	0x1
 462 0039 03       		.uleb128 0x3
 463 003a 0E       		.uleb128 0xe
 464 003b 0B       		.uleb128 0xb
 465 003c 0B       		.uleb128 0xb
 466 003d 3A       		.uleb128 0x3a
 467 003e 0B       		.uleb128 0xb
 468 003f 3B       		.uleb128 0x3b
 469 0040 0B       		.uleb128 0xb
 470 0041 01       		.uleb128 0x1
 471 0042 13       		.uleb128 0x13
 472 0043 00       		.byte	0
 473 0044 00       		.byte	0
 474 0045 06       		.uleb128 0x6
 475 0046 0D       		.uleb128 0xd
 476 0047 00       		.byte	0
 477 0048 03       		.uleb128 0x3
 478 0049 0E       		.uleb128 0xe
 479 004a 3A       		.uleb128 0x3a
 480 004b 0B       		.uleb128 0xb
 481 004c 3B       		.uleb128 0x3b
 482 004d 0B       		.uleb128 0xb
 483 004e 49       		.uleb128 0x49
 484 004f 13       		.uleb128 0x13
 485 0050 38       		.uleb128 0x38
 486 0051 0B       		.uleb128 0xb
 487 0052 00       		.byte	0
 488 0053 00       		.byte	0
 489 0054 07       		.uleb128 0x7
 490 0055 2E       		.uleb128 0x2e
 491 0056 01       		.byte	0x1
 492 0057 3F       		.uleb128 0x3f
 493 0058 19       		.uleb128 0x19
 494 0059 03       		.uleb128 0x3
 495 005a 0E       		.uleb128 0xe
 496 005b 3A       		.uleb128 0x3a
 497 005c 0B       		.uleb128 0xb
 498 005d 3B       		.uleb128 0x3b
 499 005e 05       		.uleb128 0x5
 500 005f 27       		.uleb128 0x27
 501 0060 19       		.uleb128 0x19
 502 0061 8701     		.uleb128 0x87
 503 0063 19       		.uleb128 0x19
 504 0064 11       		.uleb128 0x11
 505 0065 01       		.uleb128 0x1
 506 0066 12       		.uleb128 0x12
 507 0067 06       		.uleb128 0x6
 508 0068 40       		.uleb128 0x40
 509 0069 18       		.uleb128 0x18
 510 006a 9742     		.uleb128 0x2117
 511 006c 19       		.uleb128 0x19
 512 006d 01       		.uleb128 0x1
 513 006e 13       		.uleb128 0x13
 514 006f 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 18


 515 0070 00       		.byte	0
 516 0071 08       		.uleb128 0x8
 517 0072 34       		.uleb128 0x34
 518 0073 00       		.byte	0
 519 0074 03       		.uleb128 0x3
 520 0075 0E       		.uleb128 0xe
 521 0076 3A       		.uleb128 0x3a
 522 0077 0B       		.uleb128 0xb
 523 0078 3B       		.uleb128 0x3b
 524 0079 05       		.uleb128 0x5
 525 007a 49       		.uleb128 0x49
 526 007b 13       		.uleb128 0x13
 527 007c 02       		.uleb128 0x2
 528 007d 18       		.uleb128 0x18
 529 007e 00       		.byte	0
 530 007f 00       		.byte	0
 531 0080 09       		.uleb128 0x9
 532 0081 898201   		.uleb128 0x4109
 533 0084 01       		.byte	0x1
 534 0085 11       		.uleb128 0x11
 535 0086 01       		.uleb128 0x1
 536 0087 31       		.uleb128 0x31
 537 0088 13       		.uleb128 0x13
 538 0089 01       		.uleb128 0x1
 539 008a 13       		.uleb128 0x13
 540 008b 00       		.byte	0
 541 008c 00       		.byte	0
 542 008d 0A       		.uleb128 0xa
 543 008e 8A8201   		.uleb128 0x410a
 544 0091 00       		.byte	0
 545 0092 02       		.uleb128 0x2
 546 0093 18       		.uleb128 0x18
 547 0094 9142     		.uleb128 0x2111
 548 0096 18       		.uleb128 0x18
 549 0097 00       		.byte	0
 550 0098 00       		.byte	0
 551 0099 0B       		.uleb128 0xb
 552 009a 898201   		.uleb128 0x4109
 553 009d 00       		.byte	0
 554 009e 11       		.uleb128 0x11
 555 009f 01       		.uleb128 0x1
 556 00a0 31       		.uleb128 0x31
 557 00a1 13       		.uleb128 0x13
 558 00a2 00       		.byte	0
 559 00a3 00       		.byte	0
 560 00a4 0C       		.uleb128 0xc
 561 00a5 898201   		.uleb128 0x4109
 562 00a8 01       		.byte	0x1
 563 00a9 11       		.uleb128 0x11
 564 00aa 01       		.uleb128 0x1
 565 00ab 31       		.uleb128 0x31
 566 00ac 13       		.uleb128 0x13
 567 00ad 00       		.byte	0
 568 00ae 00       		.byte	0
 569 00af 0D       		.uleb128 0xd
 570 00b0 34       		.uleb128 0x34
 571 00b1 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 19


 572 00b2 03       		.uleb128 0x3
 573 00b3 0E       		.uleb128 0xe
 574 00b4 3A       		.uleb128 0x3a
 575 00b5 0B       		.uleb128 0xb
 576 00b6 3B       		.uleb128 0x3b
 577 00b7 05       		.uleb128 0x5
 578 00b8 49       		.uleb128 0x49
 579 00b9 13       		.uleb128 0x13
 580 00ba 3F       		.uleb128 0x3f
 581 00bb 19       		.uleb128 0x19
 582 00bc 3C       		.uleb128 0x3c
 583 00bd 19       		.uleb128 0x19
 584 00be 00       		.byte	0
 585 00bf 00       		.byte	0
 586 00c0 0E       		.uleb128 0xe
 587 00c1 35       		.uleb128 0x35
 588 00c2 00       		.byte	0
 589 00c3 49       		.uleb128 0x49
 590 00c4 13       		.uleb128 0x13
 591 00c5 00       		.byte	0
 592 00c6 00       		.byte	0
 593 00c7 0F       		.uleb128 0xf
 594 00c8 2E       		.uleb128 0x2e
 595 00c9 00       		.byte	0
 596 00ca 3F       		.uleb128 0x3f
 597 00cb 19       		.uleb128 0x19
 598 00cc 3C       		.uleb128 0x3c
 599 00cd 19       		.uleb128 0x19
 600 00ce 6E       		.uleb128 0x6e
 601 00cf 0E       		.uleb128 0xe
 602 00d0 03       		.uleb128 0x3
 603 00d1 0E       		.uleb128 0xe
 604 00d2 3A       		.uleb128 0x3a
 605 00d3 0B       		.uleb128 0xb
 606 00d4 3B       		.uleb128 0x3b
 607 00d5 0B       		.uleb128 0xb
 608 00d6 6E       		.uleb128 0x6e
 609 00d7 0E       		.uleb128 0xe
 610 00d8 00       		.byte	0
 611 00d9 00       		.byte	0
 612 00da 10       		.uleb128 0x10
 613 00db 2E       		.uleb128 0x2e
 614 00dc 00       		.byte	0
 615 00dd 3F       		.uleb128 0x3f
 616 00de 19       		.uleb128 0x19
 617 00df 3C       		.uleb128 0x3c
 618 00e0 19       		.uleb128 0x19
 619 00e1 6E       		.uleb128 0x6e
 620 00e2 0E       		.uleb128 0xe
 621 00e3 03       		.uleb128 0x3
 622 00e4 0E       		.uleb128 0xe
 623 00e5 3A       		.uleb128 0x3a
 624 00e6 0B       		.uleb128 0xb
 625 00e7 3B       		.uleb128 0x3b
 626 00e8 0B       		.uleb128 0xb
 627 00e9 00       		.byte	0
 628 00ea 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 20


 629 00eb 11       		.uleb128 0x11
 630 00ec 2E       		.uleb128 0x2e
 631 00ed 00       		.byte	0
 632 00ee 3F       		.uleb128 0x3f
 633 00ef 19       		.uleb128 0x19
 634 00f0 3C       		.uleb128 0x3c
 635 00f1 19       		.uleb128 0x19
 636 00f2 6E       		.uleb128 0x6e
 637 00f3 0E       		.uleb128 0xe
 638 00f4 03       		.uleb128 0x3
 639 00f5 0E       		.uleb128 0xe
 640 00f6 3A       		.uleb128 0x3a
 641 00f7 0B       		.uleb128 0xb
 642 00f8 3B       		.uleb128 0x3b
 643 00f9 05       		.uleb128 0x5
 644 00fa 00       		.byte	0
 645 00fb 00       		.byte	0
 646 00fc 00       		.byte	0
 647              		.section	.debug_aranges,"",%progbits
 648 0000 1C000000 		.4byte	0x1c
 649 0004 0200     		.2byte	0x2
 650 0006 00000000 		.4byte	.Ldebug_info0
 651 000a 04       		.byte	0x4
 652 000b 00       		.byte	0
 653 000c 0000     		.2byte	0
 654 000e 0000     		.2byte	0
 655 0010 00000000 		.4byte	.LFB85
 656 0014 64000000 		.4byte	.LFE85-.LFB85
 657 0018 00000000 		.4byte	0
 658 001c 00000000 		.4byte	0
 659              		.section	.debug_ranges,"",%progbits
 660              	.Ldebug_ranges0:
 661 0000 00000000 		.4byte	.LFB85
 662 0004 64000000 		.4byte	.LFE85
 663 0008 00000000 		.4byte	0
 664 000c 00000000 		.4byte	0
 665              		.section	.debug_line,"",%progbits
 666              	.Ldebug_line0:
 667 0000 3D020000 		.section	.debug_str,"MS",%progbits,1
 667      02000B02 
 667      00000201 
 667      FB0E0D00 
 667      01010101 
 668              	.LASF4:
 669 0000 5F5F696E 		.ascii	"__int16_t\000"
 669      7431365F 
 669      7400
 670              	.LASF5:
 671 000a 5F5F696E 		.ascii	"__int32_t\000"
 671      7433325F 
 671      7400
 672              	.LASF31:
 673 0014 61636344 		.ascii	"accData_\000"
 673      6174615F 
 673      00
 674              	.LASF12:
 675 001d 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 21


 675      325F7400 
 676              	.LASF13:
 677 0025 666C6F61 		.ascii	"float\000"
 677      7400
 678              	.LASF33:
 679 002b 64617461 		.ascii	"data\000"
 679      00
 680              	.LASF36:
 681 0030 5F5F6275 		.ascii	"__builtin_puts\000"
 681      696C7469 
 681      6E5F7075 
 681      747300
 682              	.LASF18:
 683 003f 61636358 		.ascii	"accX\000"
 683      00
 684              	.LASF19:
 685 0044 61636359 		.ascii	"accY\000"
 685      00
 686              	.LASF20:
 687 0049 6163635A 		.ascii	"accZ\000"
 687      00
 688              	.LASF28:
 689 004e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 689      43313120 
 689      352E342E 
 689      31203230 
 689      31363036 
 690 0081 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 690      20726576 
 690      6973696F 
 690      6E203233 
 690      37373135 
 691 00b4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 691      66756E63 
 691      74696F6E 
 691      2D736563 
 691      74696F6E 
 692              	.LASF22:
 693 00dc 76546173 		.ascii	"vTaskSuspend\000"
 693      6B537573 
 693      70656E64 
 693      00
 694              	.LASF7:
 695 00e9 6C6F6E67 		.ascii	"long unsigned int\000"
 695      20756E73 
 695      69676E65 
 695      6420696E 
 695      7400
 696              	.LASF3:
 697 00fb 73686F72 		.ascii	"short unsigned int\000"
 697      7420756E 
 697      7369676E 
 697      65642069 
 697      6E7400
 698              	.LASF34:
 699 010e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 699      52784275 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 22


 699      66666572 
 699      00
 700              	.LASF25:
 701 011b 6D6F746F 		.ascii	"motor_forward\000"
 701      725F666F 
 701      72776172 
 701      6400
 702              	.LASF1:
 703 0129 756E7369 		.ascii	"unsigned char\000"
 703      676E6564 
 703      20636861 
 703      7200
 704              	.LASF14:
 705 0137 646F7562 		.ascii	"double\000"
 705      6C6500
 706              	.LASF32:
 707 013e 7A6D6169 		.ascii	"zmain\000"
 707      6E00
 708              	.LASF10:
 709 0144 756E7369 		.ascii	"unsigned int\000"
 709      676E6564 
 709      20696E74 
 709      00
 710              	.LASF9:
 711 0151 6C6F6E67 		.ascii	"long long unsigned int\000"
 711      206C6F6E 
 711      6720756E 
 711      7369676E 
 711      65642069 
 712              	.LASF23:
 713 0168 6D6F746F 		.ascii	"motor_start\000"
 713      725F7374 
 713      61727400 
 714              	.LASF11:
 715 0174 696E7431 		.ascii	"int16_t\000"
 715      365F7400 
 716              	.LASF16:
 717 017c 6C6F6E67 		.ascii	"long double\000"
 717      20646F75 
 717      626C6500 
 718              	.LASF30:
 719 0188 433A5C55 		.ascii	"C:\\Users\\ilyap\\Documents\\PSoC Creator\\Zumo_tan"
 719      73657273 
 719      5C696C79 
 719      61705C44 
 719      6F63756D 
 720 01b6 6B5C5A75 		.ascii	"k\\Zumo_robot\\ZumoBot_Tank.cydsn\000"
 720      6D6F5F72 
 720      6F626F74 
 720      5C5A756D 
 720      6F426F74 
 721              	.LASF17:
 722 01d6 73697A65 		.ascii	"sizetype\000"
 722      74797065 
 722      00
 723              	.LASF8:
 724 01df 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\ccT7Oeje.s 			page 23


 724      206C6F6E 
 724      6720696E 
 724      7400
 725              	.LASF29:
 726 01ed 6D61696E 		.ascii	"main.c\000"
 726      2E6300
 727              	.LASF15:
 728 01f4 63686172 		.ascii	"char\000"
 728      00
 729              	.LASF26:
 730 01f9 7072696E 		.ascii	"printf\000"
 730      746600
 731              	.LASF2:
 732 0200 73686F72 		.ascii	"short int\000"
 732      7420696E 
 732      7400
 733              	.LASF6:
 734 020a 6C6F6E67 		.ascii	"long int\000"
 734      20696E74 
 734      00
 735              	.LASF27:
 736 0213 76546173 		.ascii	"vTaskDelay\000"
 736      6B44656C 
 736      617900
 737              	.LASF35:
 738 021e 70757473 		.ascii	"puts\000"
 738      00
 739              	.LASF0:
 740 0223 7369676E 		.ascii	"signed char\000"
 740      65642063 
 740      68617200 
 741              	.LASF21:
 742 022f 4C534D33 		.ascii	"LSM303D_Start\000"
 742      3033445F 
 742      53746172 
 742      7400
 743              	.LASF24:
 744 023d 4C534D33 		.ascii	"LSM303D_Read_Acc\000"
 744      3033445F 
 744      52656164 
 744      5F416363 
 744      00
 745              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
