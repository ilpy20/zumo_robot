ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.zmain,"ax",%progbits
  20              		.align	2
  21              		.global	zmain
  22              		.thumb
  23              		.thumb_func
  24              		.type	zmain, %function
  25              	zmain:
  26              	.LFB85:
  27              		.file 1 "main.c"
   1:main.c        **** /**
   2:main.c        **** * @mainpage ZumoBot Project
   3:main.c        **** * @brief    You can make your own ZumoBot with various sensors.
   4:main.c        **** * @details  <br><br>
   5:main.c        ****     <p>
   6:main.c        ****     <B>General</B><br>
   7:main.c        ****     You will use Pololu Zumo Shields for your robot project with CY8CKIT-059(PSoC 5LP) from Cypress
   8:main.c        ****     library has basic methods of various sensors and communications so that you can make what you w
   9:main.c        ****     <br><br>
  10:main.c        ****     </p>
  11:main.c        ****     
  12:main.c        ****     <p>
  13:main.c        ****     <B>Sensors</B><br>
  14:main.c        ****     &nbsp;Included: <br>
  15:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;LSM303D: Accelerometer & Magnetometer<br>
  16:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;L3GD20H: Gyroscope<br>
  17:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Reflectance sensor<br>
  18:main.c        ****         &nbsp;&nbsp;&nbsp;&nbsp;Motors
  19:main.c        ****     &nbsp;Wii nunchuck<br>
  20:main.c        ****     &nbsp;TSOP-2236: IR Receiver<br>
  21:main.c        ****     &nbsp;HC-SR04: Ultrasonic sensor<br>
  22:main.c        ****     &nbsp;APDS-9301: Ambient light sensor<br>
  23:main.c        ****     &nbsp;IR LED <br><br><br>
  24:main.c        ****     </p>
  25:main.c        ****     
  26:main.c        ****     <p>
  27:main.c        ****     <B>Communication</B><br>
  28:main.c        ****     I2C, UART, Serial<br>
  29:main.c        ****     </p>
  30:main.c        **** */
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 2


  31:main.c        **** 
  32:main.c        **** #include <project.h>
  33:main.c        **** #include <stdio.h>
  34:main.c        **** #include <stdlib.h>
  35:main.c        **** #include "FreeRTOS.h"
  36:main.c        **** #include "task.h"
  37:main.c        **** #include "Motor.h"
  38:main.c        **** #include "Ultra.h"
  39:main.c        **** #include "Nunchuk.h"
  40:main.c        **** #include "Reflectance.h"
  41:main.c        **** #include "Gyro.h"
  42:main.c        **** #include "Accel_magnet.h"
  43:main.c        **** #include "LSM303D.h"
  44:main.c        **** #include "IR.h"
  45:main.c        **** #include "Beep.h"
  46:main.c        **** #include "mqtt_sender.h"
  47:main.c        **** #include <time.h>
  48:main.c        **** #include <sys/time.h>
  49:main.c        **** #include "serial1.h"
  50:main.c        **** #include <unistd.h>
  51:main.c        **** /**
  52:main.c        ****  * @file    main.c
  53:main.c        ****  * @brief   
  54:main.c        ****  * @details  ** Enable global interrupt since Zumo library uses interrupts. **<br>&nbsp;&nbsp;&nbsp
  55:main.c        **** */
  56:main.c        **** 
  57:main.c        **** #if 0
  58:main.c        **** //template
  59:main.c        **** void zmain(void){
  60:main.c        ****     
  61:main.c        ****     while(true)
  62:main.c        ****     {
  63:main.c        ****         BatteryLed_Write(!SW1_Read());
  64:main.c        ****         vTaskDelay(100);
  65:main.c        ****     }
  66:main.c        **** }
  67:main.c        **** #endif
  68:main.c        **** 
  69:main.c        **** #if 0
  70:main.c        **** // Beep light test
  71:main.c        **** void zmain(void)
  72:main.c        **** {
  73:main.c        ****     while(true)
  74:main.c        ****     {
  75:main.c        ****         if ((SW1_Read() == 0)){
  76:main.c        ****             for(int i = 0; i < 3; i++){
  77:main.c        ****                 BatteryLed_Write(1);
  78:main.c        ****                 Beep(750, 30);
  79:main.c        ****                 vTaskDelay(500);
  80:main.c        ****                 BatteryLed_Write(0);
  81:main.c        ****                 vTaskDelay(500);
  82:main.c        ****             }
  83:main.c        ****             for(int i = 0; i<3; i++){
  84:main.c        ****                 BatteryLed_Write(1);
  85:main.c        ****                 Beep(750, 30);
  86:main.c        ****                 vTaskDelay(1000);
  87:main.c        ****                 BatteryLed_Write(0);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 3


  88:main.c        ****                 vTaskDelay(500);
  89:main.c        ****             }
  90:main.c        ****             for(int i = 0; i < 3; i++){
  91:main.c        ****                 BatteryLed_Write(1);
  92:main.c        ****                 Beep(750, 30);
  93:main.c        ****                 vTaskDelay(500);
  94:main.c        ****                 BatteryLed_Write(0);
  95:main.c        ****                 vTaskDelay(500);
  96:main.c        ****             }
  97:main.c        ****         }
  98:main.c        ****     }
  99:main.c        ****     
 100:main.c        ****     
 101:main.c        ****  }   
 102:main.c        **** #endif
 103:main.c        **** 
 104:main.c        **** #if 0
 105:main.c        **** // Name and age
 106:main.c        **** void zmain(void)
 107:main.c        **** {
 108:main.c        ****     TickType_t start;
 109:main.c        ****     TickType_t end;
 110:main.c        ****     char name[32];
 111:main.c        ****     int age;
 112:main.c        ****     
 113:main.c        ****     
 114:main.c        ****     printf("\n\n");
 115:main.c        ****     
 116:main.c        ****     printf("Enter your name: ");
 117:main.c        ****     //fflush(stdout);
 118:main.c        ****     start = xTaskGetTickCount();
 119:main.c        ****     scanf("%s", name);
 120:main.c        ****     printf("Enter your age: ");
 121:main.c        ****     //fflush(stdout);
 122:main.c        ****     scanf("%d", &age);
 123:main.c        ****     end = xTaskGetTickCount();
 124:main.c        ****     int time_long = end - start;
 125:main.c        ****     //printf("You are [%s], age = %d\n", name, age);
 126:main.c        ****     if (age <= 21){
 127:main.c        ****         if(time_long < 3000){
 128:main.c        ****             printf("\nSuper fast dude!");
 129:main.c        ****         }
 130:main.c        ****         else if((time_long >= 3000)&&(time_long <=5000)){
 131:main.c        ****             printf("\nSo mediocre.");
 132:main.c        ****         }
 133:main.c        ****         else{
 134:main.c        ****             printf("\nMy granny is faster than you!");
 135:main.c        ****         }
 136:main.c        ****     }
 137:main.c        ****     else if((age >= 22)&&(age<=50)){
 138:main.c        ****         if(time_long < 3000){
 139:main.c        ****             printf("\nBe quick or be dead");
 140:main.c        ****         }
 141:main.c        ****         else if((time_long >= 3000)&&(time_long <=5000)){
 142:main.c        ****             printf("\nYou're so average.");
 143:main.c        ****         }
 144:main.c        ****         else{
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 4


 145:main.c        ****             printf("\nHave you been smoking something illegal?");
 146:main.c        ****         }
 147:main.c        ****     }
 148:main.c        ****     else{
 149:main.c        ****         if(time_long <= 3000){
 150:main.c        ****             printf("\nStill going strong");
 151:main.c        ****         }
 152:main.c        ****         else if((time_long >= 4000)&&(time_long <=5000)){
 153:main.c        ****             printf("\nYou are doing ok for your age.");
 154:main.c        ****         }
 155:main.c        ****         else{
 156:main.c        ****             printf("\nDo they still allow you to drive?");
 157:main.c        ****         }
 158:main.c        ****     }
 159:main.c        ****     while(true)
 160:main.c        ****     {
 161:main.c        ****         BatteryLed_Write(!SW1_Read());
 162:main.c        ****         vTaskDelay(100);
 163:main.c        ****     }
 164:main.c        ****  }   
 165:main.c        **** #endif
 166:main.c        **** 
 167:main.c        **** 
 168:main.c        **** #if 0
 169:main.c        **** //battery level//
 170:main.c        **** void zmain(void)
 171:main.c        **** {
 172:main.c        **** 	ADC_Battery_Start();   	 
 173:main.c        **** 
 174:main.c        **** 	int16 adcresult =0;
 175:main.c        **** 	float volts = 0.0;
 176:main.c        **** 
 177:main.c        **** 	printf("\nBoot\n");
 178:main.c        **** 
 179:main.c        **** 	//BatteryLed_Write(1); // Switch led on
 180:main.c        **** 	//BatteryLed_Write(0); // Switch led off
 181:main.c        **** 	//uint8 button;
 182:main.c        **** 	//button = SW1_Read(); // read SW1 on pSoC board
 183:main.c        **** 	// SW1_Read() returns zero when button is pressed
 184:main.c        **** 	// SW1_Read() returns one when button is not pressed
 185:main.c        **** 
 186:main.c        **** 	while(true)
 187:main.c        **** 	{
 188:main.c        ****     	char msg[80];
 189:main.c        ****     	ADC_Battery_StartConvert(); // start sampling
 190:main.c        ****     	if(ADC_Battery_IsEndConversion(ADC_Battery_WAIT_FOR_RESULT)) {   // wait for ADC converted val
 191:main.c        ****         	adcresult = ADC_Battery_GetResult16(); // get the ADC value (0 - 4095)
 192:main.c        ****         	volts=(adcresult*5/4095)*(30/20);
 193:main.c        ****         	// convert value to Volts
 194:main.c        ****         	// you need to implement the conversion
 195:main.c        ****        	 
 196:main.c        ****         	// Print both ADC results and converted value
 197:main.c        ****         	printf("%d %f\r\n",adcresult, volts);
 198:main.c        ****        	 
 199:main.c        ****     	if (volts<4){
 200:main.c        ****         	while(SW1_Read()){
 201:main.c        ****             	BatteryLed_Write(1);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 5


 202:main.c        ****             	vTaskDelay(500);
 203:main.c        ****             	BatteryLed_Write(0);
 204:main.c        ****             	vTaskDelay(500);
 205:main.c        ****         	}
 206:main.c        ****     	}
 207:main.c        ****     	}
 208:main.c        ****     	vTaskDelay(500);
 209:main.c        **** 	}
 210:main.c        ****  }  
 211:main.c        **** 
 212:main.c        ****    
 213:main.c        **** #endif
 214:main.c        **** 
 215:main.c        **** #if 0
 216:main.c        **** // button
 217:main.c        **** void zmain(void)
 218:main.c        **** {
 219:main.c        ****     while(true) {
 220:main.c        ****         printf("Press button within 5 seconds!\n");
 221:main.c        ****         int i = 50;
 222:main.c        ****         while(i > 0) {
 223:main.c        ****             if(SW1_Read() == 0) {
 224:main.c        ****                 break;
 225:main.c        ****             }
 226:main.c        ****             vTaskDelay(100);
 227:main.c        ****             --i;
 228:main.c        ****         }
 229:main.c        ****         if(i > 0) {
 230:main.c        ****             printf("Good work\n");
 231:main.c        ****             while(SW1_Read() == 0) vTaskDelay(10); // wait until button is released
 232:main.c        ****         }
 233:main.c        ****         else {
 234:main.c        ****             printf("You didn't press the button\n");
 235:main.c        ****         }
 236:main.c        ****     }
 237:main.c        **** }
 238:main.c        **** #endif
 239:main.c        **** 
 240:main.c        **** #if 0
 241:main.c        **** // button
 242:main.c        **** void zmain(void)
 243:main.c        **** {
 244:main.c        ****     printf("\nBoot\n");
 245:main.c        **** 
 246:main.c        ****     //BatteryLed_Write(1); // Switch led on 
 247:main.c        ****     BatteryLed_Write(0); // Switch led off 
 248:main.c        ****     
 249:main.c        ****     //uint8 button;
 250:main.c        ****     //button = SW1_Read(); // read SW1 on pSoC board
 251:main.c        ****     // SW1_Read() returns zero when button is pressed
 252:main.c        ****     // SW1_Read() returns one when button is not pressed
 253:main.c        ****     
 254:main.c        ****     bool led = false;
 255:main.c        ****     
 256:main.c        ****     while(true)
 257:main.c        ****     {
 258:main.c        ****         // toggle led state when button is pressed
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 6


 259:main.c        ****         if(SW1_Read() == 0) {
 260:main.c        ****             led = !led;
 261:main.c        ****             BatteryLed_Write(led);
 262:main.c        ****             if(led) printf("Led is ON\n");
 263:main.c        ****             else printf("Led is OFF\n");
 264:main.c        ****             Beep(1000, 150);
 265:main.c        ****             while(SW1_Read() == 0) vTaskDelay(10); // wait while button is being pressed
 266:main.c        ****         }        
 267:main.c        ****     }
 268:main.c        ****  }   
 269:main.c        **** #endif
 270:main.c        **** 
 271:main.c        **** #if 0
 272:main.c        ****     void tankturn_left(uint8 speed_left, uint8 speed_right, int delay);
 273:main.c        ****     
 274:main.c        **** void zmain(void)
 275:main.c        **** {
 276:main.c        ****     Ultra_Start();
 277:main.c        ****     motor_start(0,0);
 278:main.c        ****     motor_forward(0,0);
 279:main.c        ****     
 280:main.c        ****     vTaskDelay(3000);
 281:main.c        ****     
 282:main.c        ****     while(true){
 283:main.c        ****     int distance = Ultra_GetDistance();
 284:main.c        ****     
 285:main.c        ****     if(distance <= 10 && distance !=0){
 286:main.c        ****         motor_backward(50,500);
 287:main.c        ****         Beep(150, 200);
 288:main.c        ****         motor_turn(150,150, 500);
 289:main.c        ****         motor_forward(0,0);
 290:main.c        ****      }
 291:main.c        ****     motor_turn(200,100,50);
 292:main.c        ****     }   
 293:main.c        **** }
 294:main.c        **** #endif
 295:main.c        **** 
 296:main.c        **** #if 0
 297:main.c        **** //ultrasonic sensor//
 298:main.c        **** void zmain(void)
 299:main.c        **** {
 300:main.c        ****     Ultra_Start();                          // Ultra Sonic Start function
 301:main.c        ****     
 302:main.c        ****     while(true) {
 303:main.c        ****         int d = Ultra_GetDistance();
 304:main.c        ****         // Print the detected distance (centimeters)
 305:main.c        ****         printf("distance = %d\r\n", d);
 306:main.c        ****         vTaskDelay(200);
 307:main.c        ****     }
 308:main.c        **** }   
 309:main.c        **** #endif
 310:main.c        **** 
 311:main.c        **** #if 0
 312:main.c        **** //IR receiverm - how to wait for IR remote commands
 313:main.c        **** void zmain(void)
 314:main.c        **** {
 315:main.c        ****     uint8_t button_;
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 7


 316:main.c        ****     printf("\nStart\n");
 317:main.c        ****     
 318:main.c        ****     while(true){
 319:main.c        ****         button_ = SW1_Read();
 320:main.c        ****         if(button_==0){
 321:main.c        ****             IR_Start();
 322:main.c        ****             printf("\n\nIR test\n");
 323:main.c        ****             struct sensors_ ref;
 324:main.c        ****             struct sensors_ dig;
 325:main.c        ****             bool led = false,loop = true, startline= true;
 326:main.c        ****             int count =0;
 327:main.c        ****             motor_start();              // enable motor controller 
 328:main.c        ****             IR_flush(); // clear IR receive buffer
 329:main.c        ****             printf("Buffer cleared\n");
 330:main.c        ****             
 331:main.c        ****             reflectance_start();
 332:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 333:main.c        ****             vTaskDelay(200);
 334:main.c        ****                 while(startline){
 335:main.c        ****                     // read raw sensor values
 336:main.c        ****                     reflectance_read(&ref);
 337:main.c        ****                     reflectance_digital(&dig); 
 338:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 339:main.c        ****                         motor_turn(50,50,50);       // motor forward
 340:main.c        ****                         Beep(60,80);
 341:main.c        ****                     }
 342:main.c        ****                     else{
 343:main.c        ****                         motor_forward(0,0);       // Stop motors
 344:main.c        ****                         startline = false;
 345:main.c        ****                     }
 346:main.c        ****                 }
 347:main.c        ****             IR_wait();  // wait for IR command
 348:main.c        ****             led = !led;
 349:main.c        ****             BatteryLed_Write(led);   
 350:main.c        ****             
 351:main.c        ****             // Toggle led when IR signal is received
 352:main.c        ****             while(loop)
 353:main.c        ****             {   
 354:main.c        ****                 if(led){
 355:main.c        ****                     // read raw sensor values
 356:main.c        ****                     reflectance_read(&ref);
 357:main.c        ****                     reflectance_digital(&dig); 
 358:main.c        ****                     
 359:main.c        ****                     if(dig.l3 == 1 && dig.r3 == 1 ){
 360:main.c        ****                         motor_turn(50,50,50);       // motor forward
 361:main.c        ****                         vTaskDelay(50);
 362:main.c        ****                         count++;
 363:main.c        ****                         printf("count %d \n",count);
 364:main.c        ****                         if(count >= 7){
 365:main.c        ****                             motor_forward(0,0);       // Stop motors
 366:main.c        ****                             loop = false;
 367:main.c        ****                         }
 368:main.c        ****                     }
 369:main.c        ****                     else{
 370:main.c        ****                          motor_turn(50,50,50);       // motor forward
 371:main.c        ****                         Beep(100,100);
 372:main.c        ****                     }
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 8


 373:main.c        ****                 }
 374:main.c        ****                 else {
 375:main.c        ****                     printf("Led is OFF\n");
 376:main.c        ****                     loop = false;
 377:main.c        ****                 }
 378:main.c        ****                
 379:main.c        ****             }    
 380:main.c        ****         }
 381:main.c        ****     }
 382:main.c        ****  }   
 383:main.c        **** #endif
 384:main.c        **** 
 385:main.c        **** 
 386:main.c        **** #if 0
 387:main.c        **** //IR receiverm - how to wait for IR remote commands
 388:main.c        **** void zmain(void)
 389:main.c        **** {
 390:main.c        ****     uint8_t button_;
 391:main.c        ****     printf("\nStart\n");
 392:main.c        ****     
 393:main.c        ****     while(true){
 394:main.c        ****         button_ = SW1_Read();
 395:main.c        ****         if(button_==0){
 396:main.c        ****             IR_Start();
 397:main.c        ****             printf("\n\nIR test\n");
 398:main.c        ****             struct sensors_ ref;
 399:main.c        ****             struct sensors_ dig;
 400:main.c        ****             bool led = false,loop = true, startline= true/*, crossline= true*/;
 401:main.c        ****             int count =0;
 402:main.c        ****             motor_start();              // enable motor controller 
 403:main.c        ****             IR_flush(); // clear IR receive buffer
 404:main.c        ****             printf("Buffer cleared\n");
 405:main.c        ****             
 406:main.c        ****             reflectance_start();
 407:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 408:main.c        ****             vTaskDelay(200);
 409:main.c        ****                 while(startline){
 410:main.c        ****                     // read raw sensor values
 411:main.c        ****                     reflectance_read(&ref);
 412:main.c        ****                     reflectance_digital(&dig); 
 413:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 414:main.c        ****                         motor_turn(50,50,0);       // motor forward
 415:main.c        ****                         //Beep(60,80);
 416:main.c        ****                     }
 417:main.c        ****                     else{
 418:main.c        ****                         motor_forward(0,0);       // Stop motors
 419:main.c        ****                         startline = false;
 420:main.c        ****                     }
 421:main.c        ****                 }
 422:main.c        ****             IR_wait();  // wait for IR command
 423:main.c        ****             led = !led;
 424:main.c        ****             BatteryLed_Write(led);   
 425:main.c        ****             
 426:main.c        ****             // Toggle led when IR signal is received
 427:main.c        ****             while(loop)
 428:main.c        ****             {   
 429:main.c        ****                 if(led){
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 9


 430:main.c        ****                     //do {
 431:main.c        ****                         // read raw sensor values
 432:main.c        ****                     //reflectance_read(&ref);
 433:main.c        ****                     reflectance_digital(&dig); 
 434:main.c        ****                     
 435:main.c        ****                    
 436:main.c        ****                         /*if(dig.l3 == 1 && dig.l2 == 1 && dig.l1 == 1 && dig.r3 == 1 && dig.r2 == 
 437:main.c        ****                             motor_forward(0,0);
 438:main.c        ****                             count++;
 439:main.c        ****                             if(count==1){
 440:main.c        ****                                 motor_turn(50,50,50);       // motor forward
 441:main.c        ****                             }
 442:main.c        ****                             if (count==2){
 443:main.c        ****                                 motor_turn_left(10,100,500);
 444:main.c        ****                             }
 445:main.c        ****                             if (count<=4){
 446:main.c        ****                                 motor_turn_right(100,10,500);
 447:main.c        ****                             }
 448:main.c        ****                             if (count==5){
 449:main.c        ****                                 motor_forward(0,0);       // Stop motors
 450:main.c        ****                                 led = false;
 451:main.c        ****                                 BatteryLed_Write(led);
 452:main.c        ****                             }
 453:main.c        ****                         } */
 454:main.c        ****                         if(dig.r2 == 1 && dig.r1 == 1){
 455:main.c        ****                             //count++;
 456:main.c        ****                             motor_turn(100,10,0);       // motor turn left
 457:main.c        ****                             //Beep(20,20);
 458:main.c        ****                             vTaskDelay(0);
 459:main.c        ****                             
 460:main.c        ****                             printf("count %d \n",count);
 461:main.c        ****                         }
 462:main.c        ****                         if(dig.l2 == 1 && dig.l1 == 1){
 463:main.c        ****                             //count++;
 464:main.c        ****                             motor_turn(10,100,0);       // motor turn right
 465:main.c        ****                            // Beep(20,20);
 466:main.c        ****                             vTaskDelay(0);
 467:main.c        ****                             
 468:main.c        ****                             printf("count %d \n",count);
 469:main.c        ****                         }
 470:main.c        ****                        // printf("count %d \n",count);
 471:main.c        ****                         if (dig.l1 == 1 && dig.r1 == 1){
 472:main.c        ****                             
 473:main.c        ****                             motor_turn(50,50,0);       // motor forward
 474:main.c        ****                             vTaskDelay(0);
 475:main.c        ****                             //Beep(50,50);
 476:main.c        ****                             //count++;
 477:main.c        ****                             printf("count %d \n",count);
 478:main.c        ****                         }
 479:main.c        ****                    
 480:main.c        ****                 }
 481:main.c        ****                 else {
 482:main.c        ****                     printf("Led is OFF\n");
 483:main.c        ****                     loop = false;
 484:main.c        ****                 }
 485:main.c        ****                
 486:main.c        ****             }    
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 10


 487:main.c        ****         }
 488:main.c        ****     }
 489:main.c        ****  }  
 490:main.c        **** #endif
 491:main.c        **** 
 492:main.c        **** #if 0
 493:main.c        **** //IR receiverm - how to wait for IR remote commands
 494:main.c        **** void zmain(void)
 495:main.c        **** {
 496:main.c        ****     //IR receiverm - how to wait for IR remote commands
 497:main.c        **** void zmain(void);
 498:main.c        **** 
 499:main.c        ****     uint8_t button_;
 500:main.c        ****     printf("\nStart\n");
 501:main.c        **** 
 502:main.c        ****     while(true){
 503:main.c        ****         button_ = SW1_Read();
 504:main.c        ****         if(button_==0){
 505:main.c        ****             IR_Start();
 506:main.c        ****             printf("\n\nIR test\n");
 507:main.c        ****             struct sensors_ ref;
 508:main.c        ****             struct sensors_ dig;
 509:main.c        ****             bool led = false,loop = true, startline= true;
 510:main.c        ****             int count =0;
 511:main.c        ****             motor_start();              // enable motor controller 
 512:main.c        ****             IR_flush(); // clear IR receive buffer
 513:main.c        ****             printf("Buffer cleared\n");
 514:main.c        **** 
 515:main.c        ****             reflectance_start();
 516:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 517:main.c        ****             vTaskDelay(200);
 518:main.c        ****                 while(startline){
 519:main.c        ****                     // read raw sensor values
 520:main.c        ****                     reflectance_read(&ref);
 521:main.c        ****                     reflectance_digital(&dig); 
 522:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 523:main.c        ****                         motor_turn(50,50,50);       // motor forward
 524:main.c        ****                         Beep(60,80);
 525:main.c        ****                     }
 526:main.c        **** 
 527:main.c        ****                     else{
 528:main.c        ****                         motor_forward(0,0);       // Stop motors
 529:main.c        ****                         startline = false;
 530:main.c        ****                     }
 531:main.c        ****                 }
 532:main.c        ****             IR_wait();  // wait for IR command
 533:main.c        ****             led = !led;
 534:main.c        ****             BatteryLed_Write(led);   
 535:main.c        **** 
 536:main.c        ****             // Toggle led when IR signal is received
 537:main.c        ****             while(loop)
 538:main.c        ****             {   
 539:main.c        ****                 if(led){
 540:main.c        ****                     // read raw sensor values
 541:main.c        ****                     reflectance_read(&ref);
 542:main.c        ****                     reflectance_digital(&dig); 
 543:main.c        **** 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 11


 544:main.c        ****                     if(dig.l3 == 1 && dig.r3 == 1 && dig.l1 == 1 && dig.r1 == 1){
 545:main.c        ****                         count++;
 546:main.c        ****                         printf("\nStart\n");
 547:main.c        ****                         printf("count %d \n",count);
 548:main.c        **** 
 549:main.c        **** 
 550:main.c        ****                         while (dig.r3 == 1 && dig.l3 == 1){
 551:main.c        ****                          motor_turn(50,49,0);
 552:main.c        ****                         reflectance_digital(&dig);
 553:main.c        ****                         }
 554:main.c        ****                         if(count >= 2){
 555:main.c        ****                             motor_forward(210,0);       // Stop motors
 556:main.c        ****                         }
 557:main.c        ****                     }
 558:main.c        **** 
 559:main.c        ****                     else if (dig.l1 == 1 && dig.r1 == 1){
 560:main.c        ****                         motor_turn(210,210,0);   //goes forward lul
 561:main.c        ****                         printf("%5d %5d", ref.l1, ref.r1);
 562:main.c        ****                     }
 563:main.c        ****                     else if (dig.l1 == 0 && dig.r1 == 1){
 564:main.c        ****                         motor_turn(210,0,0);  //turns right lul
 565:main.c        ****                         printf("%5d %5d", ref.l1, ref.r1);
 566:main.c        ****                     }
 567:main.c        ****                     else if (dig.l1 == 1 && dig.r1 == 0){
 568:main.c        ****                         motor_turn(0,210,0);   ///should turn left, right lul??   
 569:main.c        ****                         printf("%5d %5d", ref.l1, ref.r1);
 570:main.c        ****                     }
 571:main.c        ****                     else if (dig.l3 == 1 && dig.r3 == 1 && dig.l1 == 1 && dig.r1 == 1 && dig.l2 == 
 572:main.c        ****                         motor_turn(0,0,100000);   ///should stop, right lul??   
 573:main.c        **** 
 574:main.c        **** 
 575:main.c        ****                         }
 576:main.c        ****                     }
 577:main.c        ****                 }
 578:main.c        **** 
 579:main.c        **** 
 580:main.c        ****             }    
 581:main.c        ****         }
 582:main.c        **** 
 583:main.c        **** }   
 584:main.c        **** #endif
 585:main.c        **** 
 586:main.c        **** 
 587:main.c        **** #if 0
 588:main.c        **** //reflectance
 589:main.c        **** void zmain(void)
 590:main.c        **** {
 591:main.c        ****     struct sensors_ ref;
 592:main.c        ****     struct sensors_ dig;
 593:main.c        **** 
 594:main.c        ****     reflectance_start();
 595:main.c        ****     reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor threshold
 596:main.c        ****     
 597:main.c        **** 
 598:main.c        ****     while(true)
 599:main.c        ****     {
 600:main.c        ****         // read raw sensor values
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 12


 601:main.c        ****         reflectance_read(&ref);
 602:main.c        ****         // print out each period of reflectance sensors
 603:main.c        ****         printf("%5d %5d %5d %5d %5d %5d\r\n", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2, ref.r3);     
 604:main.c        ****         
 605:main.c        ****         // read digital values that are based on threshold. 0 = white, 1 = black
 606:main.c        ****         // when blackness value is over threshold the sensors reads 1, otherwise 0
 607:main.c        ****         reflectance_digital(&dig); 
 608:main.c        ****         //print out 0 or 1 according to results of reflectance period
 609:main.c        ****         printf("%5d %5d %5d %5d %5d %5d \r\n", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2, dig.r3);    
 610:main.c        ****         
 611:main.c        ****         vTaskDelay(200);
 612:main.c        ****     }
 613:main.c        **** }   
 614:main.c        **** #endif
 615:main.c        **** 
 616:main.c        **** 
 617:main.c        **** #if 0
 618:main.c        **** //motor
 619:main.c        **** void zmain(void)
 620:main.c        **** {
 621:main.c        ****     struct sensors_ ref;
 622:main.c        ****     struct sensors_ dig;
 623:main.c        **** 
 624:main.c        ****     reflectance_start();
 625:main.c        ****     reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor threshold
 626:main.c        ****     
 627:main.c        ****     reflectance_digital(&dig);
 628:main.c        ****     
 629:main.c        ****     motor_start();              // enable motor controller
 630:main.c        ****     motor_forward(0,0);         // set speed to zero to stop motors
 631:main.c        **** 
 632:main.c        ****     vTaskDelay(3000);
 633:main.c        ****     
 634:main.c        ****     if(dig.l3, dig.l2, dig.l1){
 635:main.c        ****         
 636:main.c        ****     }
 637:main.c        ****     motor_forward(100,2000);     // moving forward
 638:main.c        ****     motor_turn(200,50,2000);     // turn
 639:main.c        ****     motor_turn(50,200,2000);     // turn
 640:main.c        ****     motor_backward(100,2000);    // moving backward
 641:main.c        ****      
 642:main.c        ****     motor_forward(0,0);         // stop motors
 643:main.c        **** 
 644:main.c        ****     motor_stop();               // disable motor controller
 645:main.c        ****     
 646:main.c        ****     while(true)
 647:main.c        ****     {
 648:main.c        ****         vTaskDelay(100);
 649:main.c        ****     }
 650:main.c        **** }
 651:main.c        **** #endif
 652:main.c        **** 
 653:main.c        **** #if 0
 654:main.c        **** /* Example of how to use te Accelerometer!!!*/
 655:main.c        **** void zmain(void)
 656:main.c        **** {
 657:main.c        ****     struct accData_ data;
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 13


 658:main.c        ****     
 659:main.c        ****     printf("Accelerometer test...\n");
 660:main.c        **** 
 661:main.c        ****     if(!LSM303D_Start()){
 662:main.c        ****         printf("LSM303D failed to initialize!!! Program is Ending!!!\n");
 663:main.c        ****         vTaskSuspend(NULL);
 664:main.c        ****     }
 665:main.c        ****     else {
 666:main.c        ****         printf("Device Ok...\n");
 667:main.c        ****     }
 668:main.c        ****     motor_start();              // enable motor controller
 669:main.c        ****     motor_forward(0,0);
 670:main.c        ****     srand(time(NULL));   // Initialization, should only be called once.
 671:main.c        ****     int r=0, counter=0;
 672:main.c        ****     while(true)
 673:main.c        ****     {
 674:main.c        ****         LSM303D_Read_Acc(&data);
 675:main.c        ****        
 676:main.c        ****         motor_forward(200,20);
 677:main.c        ****         //vTaskDelay(200);
 678:main.c        ****         if (counter == 0) r = rand() % 2;
 679:main.c        ****         if (counter > 19){
 680:main.c        ****             counter = 0;
 681:main.c        ****             r = rand() % 2;
 682:main.c        ****         }// Returns a pseudo-random integer between 0 and RAND_MAX.
 683:main.c        ****             if(r == 0){
 684:main.c        ****                 motor_turn(200,50,5);
 685:main.c        ****                 vTaskDelay(0);
 686:main.c        ****                 //motor_forward(0,0);
 687:main.c        ****             }
 688:main.c        ****             else if(r == 1){
 689:main.c        ****                 motor_turn(50,200,5);
 690:main.c        ****                 vTaskDelay(0);
 691:main.c        ****                 //motor_forward(0,0);
 692:main.c        ****             }
 693:main.c        ****             else {
 694:main.c        ****                 motor_forward(200,20);
 695:main.c        ****                 vTaskDelay(0);
 696:main.c        ****             }
 697:main.c        ****         LSM303D_Read_Acc(&data);
 698:main.c        ****         if((data.accX<-4000)){
 699:main.c        ****             int r = rand() % 2;      // Returns a pseudo-random integer between 0 and RAND_MAX.
 700:main.c        ****             if(r == 0){
 701:main.c        ****                 motor_backward(80,50);
 702:main.c        ****                 motor_turn(200,50,500);
 703:main.c        ****                 vTaskDelay(0);
 704:main.c        ****                 //motor_forward(0,0);
 705:main.c        ****             }
 706:main.c        ****             else{
 707:main.c        ****                 motor_backward(80,50);
 708:main.c        ****                 motor_turn(50,200,500);
 709:main.c        ****                 vTaskDelay(0);
 710:main.c        ****                 //motor_forward(0,0);
 711:main.c        ****             }
 712:main.c        ****             motor_forward(100,100);
 713:main.c        ****         }
 714:main.c        ****         counter++;
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 14


 715:main.c        ****         printf("%8d %8d %8d\n",data.accX, data.accY, data.accZ);
 716:main.c        ****         vTaskDelay(0);
 717:main.c        ****     }
 718:main.c        ****  }   
 719:main.c        **** #endif    
 720:main.c        **** 
 721:main.c        **** #if 0
 722:main.c        **** // MQTT test
 723:main.c        **** void zmain(void)
 724:main.c        **** {
 725:main.c        ****     int ctr = 0;
 726:main.c        **** 
 727:main.c        ****     printf("\nBoot\n");
 728:main.c        ****     send_mqtt("Zumo01/debug", "Boot");
 729:main.c        **** 
 730:main.c        ****     //BatteryLed_Write(1); // Switch led on 
 731:main.c        ****     BatteryLed_Write(0); // Switch led off 
 732:main.c        **** 
 733:main.c        ****     while(true)
 734:main.c        ****     {
 735:main.c        ****         printf("Ctr: %d, Button: %d\n", ctr, SW1_Read());
 736:main.c        ****         print_mqtt("Zumo01/debug", "Ctr: %d, Button: %d", ctr, SW1_Read());
 737:main.c        **** 
 738:main.c        ****         vTaskDelay(1000);
 739:main.c        ****         ctr++;
 740:main.c        ****     }
 741:main.c        ****  }   
 742:main.c        **** #endif
 743:main.c        **** 
 744:main.c        **** #if 0
 745:main.c        **** 
 746:main.c        ****     
 747:main.c        **** void zmain(void)
 748:main.c        **** {
 749:main.c        ****     Ultra_Start();
 750:main.c        ****     motor_start(0,0);
 751:main.c        ****     motor_forward(0,0);
 752:main.c        ****     
 753:main.c        ****     vTaskDelay(3000);
 754:main.c        ****     
 755:main.c        ****     while(true){
 756:main.c        ****         int distance = Ultra_GetDistance();
 757:main.c        ****     
 758:main.c        ****         if(distance <= 10 && distance !=0){
 759:main.c        ****             int r = rand() % 2;      // Returns a pseudo-random integer between 0 and RAND_MAX.
 760:main.c        ****             if(r == 0){
 761:main.c        ****                 motor_turn(50,200,500);
 762:main.c        ****                 vTaskDelay(0);
 763:main.c        ****                 print_mqtt("Zumo006/turn", "left");
 764:main.c        ****                 //motor_forward(0,0);
 765:main.c        ****             }
 766:main.c        ****             else{
 767:main.c        ****                 motor_turn(200,50,500);
 768:main.c        ****                 vTaskDelay(0);
 769:main.c        ****                 print_mqtt("Zumo006/turn", "right");
 770:main.c        ****                 //motor_forward(0,0);
 771:main.c        ****             }
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 15


 772:main.c        ****             motor_forward(100,100);
 773:main.c        ****         }
 774:main.c        ****         
 775:main.c        ****     }   
 776:main.c        **** }
 777:main.c        **** #endif
 778:main.c        **** 
 779:main.c        **** #if 0
 780:main.c        **** //IR receiverm - how to wait for IR remote commands
 781:main.c        **** void zmain(void)
 782:main.c        **** {
 783:main.c        ****     RTC_Start(); // start real time clock
 784:main.c        ****     
 785:main.c        ****     RTC_TIME_DATE now;
 786:main.c        **** 
 787:main.c        ****     time_t myTime;
 788:main.c        ****     struct tm * timeinfo;
 789:main.c        ****     time( &myTime );
 790:main.c        ****     timeinfo = localtime( &myTime );
 791:main.c        ****     
 792:main.c        ****     // set current time
 793:main.c        ****     now.Hour = timeinfo->tm_hour;
 794:main.c        ****     now.Min = timeinfo->tm_min;
 795:main.c        ****     now.Sec = timeinfo->tm_sec6;
 796:main.c        ****     now.DayOfMonth = timeinfo->tm_mday;
 797:main.c        ****     now.Month = timeinfo->tm_mon+1;
 798:main.c        ****     now.Year = timeinfo->tm_year+1900;
 799:main.c        ****     RTC_WriteTime(&now); // write the time to real time clock
 800:main.c        ****     
 801:main.c        ****     uint8_t button_;
 802:main.c        ****     printf("\nStart\n");
 803:main.c        ****     
 804:main.c        ****     while(true){
 805:main.c        ****         button_ = SW1_Read();
 806:main.c        ****         if(button_==0){
 807:main.c        ****             IR_Start();
 808:main.c        ****             printf("\n\nIR test\n");
 809:main.c        ****             struct sensors_ ref;
 810:main.c        ****             struct sensors_ dig;
 811:main.c        ****             bool led = false,loop = true, startline= true;
 812:main.c        ****             int count =0;
 813:main.c        ****             motor_start();              // enable motor controller 
 814:main.c        ****             IR_flush(); // clear IR receive buffer
 815:main.c        ****             printf("Buffer cleared\n");
 816:main.c        ****             
 817:main.c        ****             reflectance_start();
 818:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
 819:main.c        ****             vTaskDelay(200);
 820:main.c        ****                 while(startline){
 821:main.c        ****                     // read raw sensor values
 822:main.c        ****                     reflectance_read(&ref);
 823:main.c        ****                     reflectance_digital(&dig); 
 824:main.c        ****                     if(dig.l3 != 1 && dig.r3 != 1){
 825:main.c        ****                         motor_turn(50,50,50);       // motor forward
 826:main.c        ****                         Beep(60,80);
 827:main.c        ****                     }
 828:main.c        ****                     else{
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 16


 829:main.c        ****                         motor_forward(0,0);       // Stop motors
 830:main.c        ****                         startline = false;
 831:main.c        ****                     }
 832:main.c        ****                 }
 833:main.c        ****             IR_wait();  // wait for IR command
 834:main.c        ****             led = !led;
 835:main.c        ****             BatteryLed_Write(led);   
 836:main.c        ****             
 837:main.c        ****             // Toggle led when IR signal is received
 838:main.c        ****             while(loop)
 839:main.c        ****             {   
 840:main.c        ****                 if(led){
 841:main.c        ****                     // read raw sensor values
 842:main.c        ****                     reflectance_read(&ref);
 843:main.c        ****                     reflectance_digital(&dig); 
 844:main.c        ****                     
 845:main.c        ****                     if(dig.l3 == 1 && dig.r3 == 1 ){
 846:main.c        ****                         motor_turn(50,50,50);       // motor forward
 847:main.c        ****                         motor_forward(0,0);       // Stop motors
 848:main.c        ****                         vTaskDelay(50);
 849:main.c        ****                         count++;
 850:main.c        ****                         printf("count %d \n",count);
 851:main.c        ****                         printf("%2d:%02d.%02d\n", now.Hour, now.Min, now.Sec);
 852:main.c        ****                         print_mqtt("Zumo006/lap", "%2d:%02d.%02d", now.Hour, now.Min, now.Sec);
 853:main.c        ****                         /*if(count >= 7){
 854:main.c        ****                             motor_forward(0,0);       // Stop motors
 855:main.c        ****                             loop = false;
 856:main.c        ****                         }*/
 857:main.c        ****                     }
 858:main.c        ****                     else{
 859:main.c        ****                          motor_turn(50,50,50);       // motor forward
 860:main.c        ****                         Beep(100,100);
 861:main.c        ****                     }
 862:main.c        ****                 }
 863:main.c        ****                 else {
 864:main.c        ****                     printf("Led is OFF\n");
 865:main.c        ****                     loop = false;
 866:main.c        ****                 }
 867:main.c        ****                
 868:main.c        ****             }    
 869:main.c        ****         }
 870:main.c        ****     }
 871:main.c        ****  }
 872:main.c        **** #endif
 873:main.c        **** 
 874:main.c        **** #if 0
 875:main.c        **** void zmain(void)
 876:main.c        **** {    
 877:main.c        ****     struct accData_ data;
 878:main.c        ****     struct sensors_ ref;
 879:main.c        ****     struct sensors_ dig;
 880:main.c        ****     
 881:main.c        ****     printf("MQTT and sensor test...\n");
 882:main.c        **** 
 883:main.c        ****     if(!LSM303D_Start()){
 884:main.c        ****         printf("LSM303D failed to initialize!!! Program is Ending!!!\n");
 885:main.c        ****         vTaskSuspend(NULL);
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 17


 886:main.c        ****     }
 887:main.c        ****     else {
 888:main.c        ****         printf("Accelerometer Ok...\n");
 889:main.c        ****     }
 890:main.c        ****     
 891:main.c        ****     int ctr = 0;
 892:main.c        ****     reflectance_start();
 893:main.c        ****     while(true)
 894:main.c        ****     {
 895:main.c        ****         LSM303D_Read_Acc(&data);
 896:main.c        ****         // send data when we detect a hit and at 10 second intervals
 897:main.c        ****         if(data.accX > 1500 || ++ctr > 1000) {
 898:main.c        ****             printf("Acc: %8d %8d %8d\n",data.accX, data.accY, data.accZ);
 899:main.c        ****             //print_mqtt("Zumo01/acc", "%d,%d,%d", data.accX, data.accY, data.accZ);
 900:main.c        ****             reflectance_read(&ref);
 901:main.c        ****             printf("Ref: %8d %8d %8d %8d %8d %8d\n", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2, ref.r3
 902:main.c        ****             //print_mqtt("Zumo01/ref", "%d,%d,%d,%d,%d,%d", ref.l3, ref.l2, ref.l1, ref.r1, ref.r2,
 903:main.c        ****             reflectance_digital(&dig);
 904:main.c        ****             printf("Dig: %8d %8d %8d %8d %8d %8d\n", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2, dig.r3
 905:main.c        ****             //print_mqtt("Zumo01/dig", "%d,%d,%d,%d,%d,%d", dig.l3, dig.l2, dig.l1, dig.r1, dig.r2,
 906:main.c        ****             ctr = 0;
 907:main.c        ****         }
 908:main.c        ****         vTaskDelay(10);
 909:main.c        ****     }
 910:main.c        ****  }   
 911:main.c        **** 
 912:main.c        **** #endif
 913:main.c        **** 
 914:main.c        **** #if 0
 915:main.c        **** void zmain(void)
 916:main.c        **** {    
 917:main.c        ****     RTC_Start(); // start real time clock
 918:main.c        ****     
 919:main.c        ****     RTC_TIME_DATE now;
 920:main.c        **** 
 921:main.c        ****     // set current time
 922:main.c        ****     now.Hour = 12;
 923:main.c        ****     now.Min = 34;
 924:main.c        ****     now.Sec = 56;
 925:main.c        ****     now.DayOfMonth = 25;
 926:main.c        ****     now.Month = 9;
 927:main.c        ****     now.Year = 2018;
 928:main.c        ****     RTC_WriteTime(&now); // write the time to real time clock
 929:main.c        **** 
 930:main.c        ****     while(true)
 931:main.c        ****     {
 932:main.c        ****         if(SW1_Read() == 0) {
 933:main.c        ****             // read the current time
 934:main.c        ****             RTC_DisableInt(); // Disable Interrupt of RTC Component
 935:main.c        ****             now = *RTC_ReadTime(); // copy the current time to a local variable
 936:main.c        ****             RTC_EnableInt(); // Enable Interrupt of RTC Component
 937:main.c        **** 
 938:main.c        ****             // print the current time
 939:main.c        ****             printf("%2d:%02d.%02d\n", now.Hour, now.Min, now.Sec);
 940:main.c        ****             print_mqtt("Zumo006/time", "%2d:%02d.%02d", now.Hour, now.Min, now.Sec);
 941:main.c        ****             
 942:main.c        ****             // wait until button is released
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 18


 943:main.c        ****             while(SW1_Read() == 0) vTaskDelay(50);
 944:main.c        ****         }
 945:main.c        ****         vTaskDelay(50);
 946:main.c        ****     }
 947:main.c        ****  }   
 948:main.c        **** #endif
 949:main.c        **** 
 950:main.c        **** #if 1
 951:main.c        **** //main project
 952:main.c        **** void zmain(void)
 953:main.c        **** {
  28              		.loc 1 953 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 8AB0     		sub	sp, sp, #40
  37              		.cfi_def_cfa_offset 48
 954:main.c        ****     struct accData_ data;
 955:main.c        ****     
 956:main.c        ****     uint8_t button_;
 957:main.c        ****     printf("\nStart\n");
  38              		.loc 1 957 0
  39 0004 6A48     		ldr	r0, .L18
  40 0006 FFF7FEFF 		bl	puts
  41              	.LVL0:
  42              	.L2:
 958:main.c        ****     
 959:main.c        ****     while(true){
 960:main.c        ****         button_ = SW1_Read();
  43              		.loc 1 960 0
  44 000a FFF7FEFF 		bl	SW1_Read
  45              	.LVL1:
 961:main.c        ****         if(button_==0){
  46              		.loc 1 961 0
  47 000e 0028     		cmp	r0, #0
  48 0010 FBD1     		bne	.L2
  49              	.LBB2:
 962:main.c        ****             IR_Start();
  50              		.loc 1 962 0
  51 0012 FFF7FEFF 		bl	IR_Start
  52              	.LVL2:
 963:main.c        ****             printf("\n\nIR test\n");
  53              		.loc 1 963 0
  54 0016 6748     		ldr	r0, .L18+4
  55 0018 FFF7FEFF 		bl	puts
  56              	.LVL3:
 964:main.c        ****             struct sensors_ ref;
 965:main.c        ****             struct sensors_ dig;
 966:main.c        ****             bool led = false,loop1 = true, startline= true, loop2 = true;
 967:main.c        ****             //int count =0;
 968:main.c        ****             motor_start();              // enable motor controller
  57              		.loc 1 968 0
  58 001c FFF7FEFF 		bl	motor_start
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 19


  59              	.LVL4:
 969:main.c        ****             print_mqtt("Zumo006/ready","line");
  60              		.loc 1 969 0
  61 0020 6549     		ldr	r1, .L18+8
  62 0022 6648     		ldr	r0, .L18+12
  63 0024 FFF7FEFF 		bl	print_mqtt
  64              	.LVL5:
 970:main.c        ****             IR_flush(); // clear IR receive buffer
  65              		.loc 1 970 0
  66 0028 FFF7FEFF 		bl	IR_flush
  67              	.LVL6:
 971:main.c        ****             printf("Buffer cleared\n");
  68              		.loc 1 971 0
  69 002c 6448     		ldr	r0, .L18+16
  70 002e FFF7FEFF 		bl	puts
  71              	.LVL7:
 972:main.c        ****             
 973:main.c        ****             reflectance_start();
  72              		.loc 1 973 0
  73 0032 FFF7FEFF 		bl	reflectance_start
  74              	.LVL8:
 974:main.c        ****             reflectance_set_threshold(9000, 9000, 11000, 11000, 9000, 9000); // set center sensor t
  75              		.loc 1 974 0
  76 0036 42F22830 		movw	r0, #9000
  77 003a 0190     		str	r0, [sp, #4]
  78 003c 0090     		str	r0, [sp]
  79 003e 42F6F823 		movw	r3, #11000
  80 0042 1A46     		mov	r2, r3
  81 0044 0146     		mov	r1, r0
  82 0046 FFF7FEFF 		bl	reflectance_set_threshold
  83              	.LVL9:
 975:main.c        ****             vTaskDelay(200);
  84              		.loc 1 975 0
  85 004a C820     		movs	r0, #200
  86 004c FFF7FEFF 		bl	vTaskDelay
  87              	.LVL10:
 966:main.c        ****             //int count =0;
  88              		.loc 1 966 0
  89 0050 0124     		movs	r4, #1
 976:main.c        ****                 while(startline){
  90              		.loc 1 976 0
  91 0052 26E0     		b	.L3
  92              	.LVL11:
  93              	.L6:
 977:main.c        ****                     // read raw sensor values
 978:main.c        ****                     reflectance_read(&ref);
  94              		.loc 1 978 0
  95 0054 02A8     		add	r0, sp, #8
  96 0056 FFF7FEFF 		bl	reflectance_read
  97              	.LVL12:
 979:main.c        ****                     reflectance_digital(&dig); 
  98              		.loc 1 979 0
  99 005a 05A8     		add	r0, sp, #20
 100 005c FFF7FEFF 		bl	reflectance_digital
 101              	.LVL13:
 980:main.c        ****                     
 981:main.c        ****                     if(dig.l3 == 0 && dig.r3 == 0 && dig.l1 == 0 && dig.r1 == 0 && dig.l2==0 && dig
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 20


 102              		.loc 1 981 0
 103 0060 BDF81430 		ldrh	r3, [sp, #20]
 104 0064 A3B9     		cbnz	r3, .L4
 105              		.loc 1 981 0 is_stmt 0 discriminator 1
 106 0066 BDF81E30 		ldrh	r3, [sp, #30]
 107 006a 8BB9     		cbnz	r3, .L4
 108              		.loc 1 981 0 discriminator 2
 109 006c BDF81830 		ldrh	r3, [sp, #24]
 110 0070 73B9     		cbnz	r3, .L4
 111              		.loc 1 981 0 discriminator 3
 112 0072 BDF81A30 		ldrh	r3, [sp, #26]
 113 0076 5BB9     		cbnz	r3, .L4
 114              		.loc 1 981 0 discriminator 4
 115 0078 BDF81630 		ldrh	r3, [sp, #22]
 116 007c 43B9     		cbnz	r3, .L4
 117              		.loc 1 981 0 discriminator 5
 118 007e BDF81C30 		ldrh	r3, [sp, #28]
 119 0082 2BB9     		cbnz	r3, .L4
 982:main.c        ****                         motor_forward(0,0);       // Stop motors
 120              		.loc 1 982 0 is_stmt 1
 121 0084 0021     		movs	r1, #0
 122 0086 0846     		mov	r0, r1
 123 0088 FFF7FEFF 		bl	motor_forward
 124              	.LVL14:
 983:main.c        ****                         startline = false;
 125              		.loc 1 983 0
 126 008c 0024     		movs	r4, #0
 127 008e 08E0     		b	.L3
 128              	.LVL15:
 129              	.L4:
 984:main.c        ****                     }
 985:main.c        ****                     else{
 986:main.c        ****                         motor_turn(50,50,50);       // motor forward
 130              		.loc 1 986 0
 131 0090 3222     		movs	r2, #50
 132 0092 1146     		mov	r1, r2
 133 0094 1046     		mov	r0, r2
 134 0096 FFF7FEFF 		bl	motor_turn
 135              	.LVL16:
 987:main.c        ****                         Beep(60,80);
 136              		.loc 1 987 0
 137 009a 5021     		movs	r1, #80
 138 009c 3C20     		movs	r0, #60
 139 009e FFF7FEFF 		bl	Beep
 140              	.LVL17:
 141              	.L3:
 976:main.c        ****                     // read raw sensor values
 142              		.loc 1 976 0
 143 00a2 002C     		cmp	r4, #0
 144 00a4 D6D1     		bne	.L6
 988:main.c        ****                     }
 989:main.c        ****                 }
 990:main.c        ****             print_mqtt("Zumo006/ready","line");
 145              		.loc 1 990 0
 146 00a6 4449     		ldr	r1, .L18+8
 147 00a8 4448     		ldr	r0, .L18+12
 148 00aa FFF7FEFF 		bl	print_mqtt
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 21


 149              	.LVL18:
 991:main.c        ****             IR_wait();  // wait for IR command
 150              		.loc 1 991 0
 151 00ae FFF7FEFF 		bl	IR_wait
 152              	.LVL19:
 992:main.c        ****             CySysTickEnable();
 153              		.loc 1 992 0
 154 00b2 FFF7FEFF 		bl	CySysTickEnable
 155              	.LVL20:
 993:main.c        ****             CySysTickStart();
 156              		.loc 1 993 0
 157 00b6 FFF7FEFF 		bl	CySysTickStart
 158              	.LVL21:
 994:main.c        ****             int start = CySysTickGetValue();
 159              		.loc 1 994 0
 160 00ba FFF7FEFF 		bl	CySysTickGetValue
 161              	.LVL22:
 995:main.c        ****             print_mqtt("Zumo006/start","%d", start);
 162              		.loc 1 995 0
 163 00be 0246     		mov	r2, r0
 164 00c0 4049     		ldr	r1, .L18+20
 165 00c2 4148     		ldr	r0, .L18+24
 166              	.LVL23:
 167 00c4 FFF7FEFF 		bl	print_mqtt
 168              	.LVL24:
 996:main.c        ****             led = !led;
 997:main.c        ****             BatteryLed_Write(led);   
 169              		.loc 1 997 0
 170 00c8 0120     		movs	r0, #1
 171 00ca FFF7FEFF 		bl	BatteryLed_Write
 172              	.LVL25:
 173 00ce 65E0     		b	.L7
 174              	.LVL26:
 175              	.L12:
 176              	.LBB3:
 998:main.c        ****             
 999:main.c        ****             // Toggle led when IR signal is received
1000:main.c        ****             while(loop1)
1001:main.c        ****             {   
1002:main.c        ****                 if(led){
1003:main.c        ****                     while(loop2){
1004:main.c        ****                     // read raw sensor values
1005:main.c        ****                     reflectance_read(&ref);
1006:main.c        ****                     reflectance_digital(&dig); 
1007:main.c        **** 
1008:main.c        ****                     LSM303D_Read_Acc(&data);
1009:main.c        ****                     while(dig.l2 != 1 || dig.r2 != 1){
1010:main.c        ****                         //motor_turn(50,50,0);
1011:main.c        ****                         if(data.accX > -4000){
 177              		.loc 1 1011 0
 178 00d0 BDF92030 		ldrsh	r3, [sp, #32]
 179 00d4 13F57A6F 		cmn	r3, #4000
 180 00d8 2CDD     		ble	.L8
 181              	.LBB4:
1012:main.c        ****                             print_mqtt("Zumo006/hit","%d", CySysTickGetValue());
 182              		.loc 1 1012 0
 183 00da FFF7FEFF 		bl	CySysTickGetValue
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 22


 184              	.LVL27:
 185 00de 0246     		mov	r2, r0
 186 00e0 3849     		ldr	r1, .L18+20
 187 00e2 3A48     		ldr	r0, .L18+28
 188 00e4 FFF7FEFF 		bl	print_mqtt
 189              	.LVL28:
1013:main.c        ****                             int r = rand() % 2;      // Returns a pseudo-random integer between 0 a
 190              		.loc 1 1013 0
 191 00e8 FFF7FEFF 		bl	rand
 192              	.LVL29:
 193 00ec 384C     		ldr	r4, .L18+32
 194 00ee 0440     		ands	r4, r0, r4
 195 00f0 03D5     		bpl	.L9
 196 00f2 013C     		subs	r4, r4, #1
 197 00f4 64F00104 		orn	r4, r4, #1
 198 00f8 0134     		adds	r4, r4, #1
 199              	.L9:
 200              	.LVL30:
1014:main.c        ****                             int r1 = rand() % 500;
 201              		.loc 1 1014 0
 202 00fa FFF7FEFF 		bl	rand
 203              	.LVL31:
 204 00fe 354A     		ldr	r2, .L18+36
 205 0100 82FB0032 		smull	r3, r2, r2, r0
 206 0104 C317     		asrs	r3, r0, #31
 207 0106 C3EB6212 		rsb	r2, r3, r2, asr #5
 208 010a 4FF4FA73 		mov	r3, #500
 209 010e 03FB1202 		mls	r2, r3, r2, r0
 210              	.LVL32:
1015:main.c        ****                             if(r == 0){
 211              		.loc 1 1015 0
 212 0112 3CB9     		cbnz	r4, .L10
1016:main.c        ****                                 //motor_backward(80,50);
1017:main.c        ****                                 motor_turn(200,50,r1);
 213              		.loc 1 1017 0
 214 0114 3221     		movs	r1, #50
 215 0116 C820     		movs	r0, #200
 216 0118 FFF7FEFF 		bl	motor_turn
 217              	.LVL33:
1018:main.c        ****                                 vTaskDelay(0);
 218              		.loc 1 1018 0
 219 011c 0020     		movs	r0, #0
 220 011e FFF7FEFF 		bl	vTaskDelay
 221              	.LVL34:
 222 0122 0CE0     		b	.L16
 223              	.LVL35:
 224              	.L10:
1019:main.c        ****                             }
1020:main.c        ****                             else{
1021:main.c        ****                                 motor_turn(50,200,r1);
 225              		.loc 1 1021 0
 226 0124 C821     		movs	r1, #200
 227 0126 3220     		movs	r0, #50
 228 0128 FFF7FEFF 		bl	motor_turn
 229              	.LVL36:
1022:main.c        ****                                 vTaskDelay(0);
 230              		.loc 1 1022 0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 23


 231 012c 0020     		movs	r0, #0
 232 012e FFF7FEFF 		bl	vTaskDelay
 233              	.LVL37:
 234 0132 04E0     		b	.L16
 235              	.LVL38:
 236              	.L8:
 237              	.LBE4:
1023:main.c        ****                             }
1024:main.c        ****                         }
1025:main.c        ****                         else{
1026:main.c        ****                             motor_turn(50,50,0);
 238              		.loc 1 1026 0
 239 0134 0022     		movs	r2, #0
 240 0136 3221     		movs	r1, #50
 241 0138 0846     		mov	r0, r1
 242 013a FFF7FEFF 		bl	motor_turn
 243              	.LVL39:
 244              	.L16:
1009:main.c        ****                         //motor_turn(50,50,0);
 245              		.loc 1 1009 0
 246 013e BDF81630 		ldrh	r3, [sp, #22]
 247 0142 012B     		cmp	r3, #1
 248 0144 C4D1     		bne	.L12
1009:main.c        ****                         //motor_turn(50,50,0);
 249              		.loc 1 1009 0 is_stmt 0 discriminator 1
 250 0146 BDF81C30 		ldrh	r3, [sp, #28]
 251 014a 012B     		cmp	r3, #1
 252 014c C0D1     		bne	.L12
1027:main.c        ****                         }
1028:main.c        ****                         
1029:main.c        ****                     }
1030:main.c        ****                     int r2 = rand() % 1000;
 253              		.loc 1 1030 0 is_stmt 1
 254 014e FFF7FEFF 		bl	rand
 255              	.LVL40:
 256 0152 204C     		ldr	r4, .L18+36
 257 0154 84FB0034 		smull	r3, r4, r4, r0
 258 0158 C317     		asrs	r3, r0, #31
 259 015a C3EBA414 		rsb	r4, r3, r4, asr #6
 260 015e 4FF47A73 		mov	r3, #1000
 261 0162 03FB1404 		mls	r4, r3, r4, r0
 262              	.LVL41:
1031:main.c        ****                     int r = rand() % 2;      // Returns a pseudo-random integer between 0 and RAND_
 263              		.loc 1 1031 0
 264 0166 FFF7FEFF 		bl	rand
 265              	.LVL42:
 266 016a 194B     		ldr	r3, .L18+32
 267 016c 1840     		ands	r0, r0, r3
 268 016e 03D5     		bpl	.L13
 269 0170 0138     		subs	r0, r0, #1
 270 0172 60F00100 		orn	r0, r0, #1
 271 0176 0130     		adds	r0, r0, #1
 272              	.L13:
 273              	.LVL43:
1032:main.c        ****                     if(r==0) {
 274              		.loc 1 1032 0
 275 0178 40B9     		cbnz	r0, .L14
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 24


1033:main.c        ****                         motor_turn(50,200,r2);
 276              		.loc 1 1033 0
 277 017a 2246     		mov	r2, r4
 278 017c C821     		movs	r1, #200
 279 017e 3220     		movs	r0, #50
 280              	.LVL44:
 281 0180 FFF7FEFF 		bl	motor_turn
 282              	.LVL45:
1034:main.c        ****                         vTaskDelay(0);
 283              		.loc 1 1034 0
 284 0184 0020     		movs	r0, #0
 285 0186 FFF7FEFF 		bl	vTaskDelay
 286              	.LVL46:
 287 018a 07E0     		b	.L7
 288              	.LVL47:
 289              	.L14:
1035:main.c        ****                     }
1036:main.c        ****                     else {
1037:main.c        ****                         motor_turn(50,200,r2);
 290              		.loc 1 1037 0
 291 018c 2246     		mov	r2, r4
 292 018e C821     		movs	r1, #200
 293 0190 3220     		movs	r0, #50
 294              	.LVL48:
 295 0192 FFF7FEFF 		bl	motor_turn
 296              	.LVL49:
1038:main.c        ****                         vTaskDelay(0);
 297              		.loc 1 1038 0
 298 0196 0020     		movs	r0, #0
 299 0198 FFF7FEFF 		bl	vTaskDelay
 300              	.LVL50:
 301              	.L7:
1005:main.c        ****                     reflectance_digital(&dig); 
 302              		.loc 1 1005 0
 303 019c 02A8     		add	r0, sp, #8
 304 019e FFF7FEFF 		bl	reflectance_read
 305              	.LVL51:
1006:main.c        **** 
 306              		.loc 1 1006 0
 307 01a2 05A8     		add	r0, sp, #20
 308 01a4 FFF7FEFF 		bl	reflectance_digital
 309              	.LVL52:
1008:main.c        ****                     while(dig.l2 != 1 || dig.r2 != 1){
 310              		.loc 1 1008 0
 311 01a8 08A8     		add	r0, sp, #32
 312 01aa FFF7FEFF 		bl	LSM303D_Read_Acc
 313              	.LVL53:
1009:main.c        ****                         //motor_turn(50,50,0);
 314              		.loc 1 1009 0
 315 01ae C6E7     		b	.L16
 316              	.L19:
 317              		.align	2
 318              	.L18:
 319 01b0 00000000 		.word	.LC0
 320 01b4 08000000 		.word	.LC1
 321 01b8 14000000 		.word	.LC2
 322 01bc 1C000000 		.word	.LC3
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 25


 323 01c0 2C000000 		.word	.LC4
 324 01c4 3C000000 		.word	.LC5
 325 01c8 40000000 		.word	.LC6
 326 01cc 50000000 		.word	.LC7
 327 01d0 01000080 		.word	-2147483647
 328 01d4 D34D6210 		.word	274877907
 329              	.LBE3:
 330              	.LBE2:
 331              		.cfi_endproc
 332              	.LFE85:
 333              		.size	zmain, .-zmain
 334              		.section	.rodata.str1.4,"aMS",%progbits,1
 335              		.align	2
 336              	.LC0:
 337 0000 0A537461 		.ascii	"\012Start\000"
 337      727400
 338 0007 00       		.space	1
 339              	.LC1:
 340 0008 0A0A4952 		.ascii	"\012\012IR test\000"
 340      20746573 
 340      7400
 341 0012 0000     		.space	2
 342              	.LC2:
 343 0014 6C696E65 		.ascii	"line\000"
 343      00
 344 0019 000000   		.space	3
 345              	.LC3:
 346 001c 5A756D6F 		.ascii	"Zumo006/ready\000"
 346      3030362F 
 346      72656164 
 346      7900
 347 002a 0000     		.space	2
 348              	.LC4:
 349 002c 42756666 		.ascii	"Buffer cleared\000"
 349      65722063 
 349      6C656172 
 349      656400
 350 003b 00       		.space	1
 351              	.LC5:
 352 003c 256400   		.ascii	"%d\000"
 353 003f 00       		.space	1
 354              	.LC6:
 355 0040 5A756D6F 		.ascii	"Zumo006/start\000"
 355      3030362F 
 355      73746172 
 355      7400
 356 004e 0000     		.space	2
 357              	.LC7:
 358 0050 5A756D6F 		.ascii	"Zumo006/hit\000"
 358      3030362F 
 358      68697400 
 359              		.text
 360              	.Letext0:
 361              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 362              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 363              		.file 4 ".\\ZumoLibrary/Reflectance.h"
 364              		.file 5 ".\\ZumoLibrary/LSM303D.h"
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 26


 365              		.file 6 "Generated_Source\\PSoC5/CyLib.h"
 366              		.file 7 ".\\ZumoLibrary/mqtt_sender.h"
 367              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 368              		.file 9 ".\\ZumoLibrary/Motor.h"
 369              		.file 10 "..\\FreeRTOS\\Source\\include/task.h"
 370              		.file 11 ".\\ZumoLibrary/IR.h"
 371              		.file 12 ".\\ZumoLibrary/Beep.h"
 372              		.file 13 "Generated_Source\\PSoC5/BatteryLed.h"
 373              		.file 14 "Generated_Source\\PSoC5/SW1.h"
 374              		.file 15 "Generated_Source\\PSoC5/core_cm3.h"
 375              		.file 16 "<built-in>"
 376              		.section	.debug_info,"",%progbits
 377              	.Ldebug_info0:
 378 0000 A2060000 		.4byte	0x6a2
 379 0004 0400     		.2byte	0x4
 380 0006 00000000 		.4byte	.Ldebug_abbrev0
 381 000a 04       		.byte	0x4
 382 000b 01       		.uleb128 0x1
 383 000c CD020000 		.4byte	.LASF54
 384 0010 0C       		.byte	0xc
 385 0011 43020000 		.4byte	.LASF55
 386 0015 42000000 		.4byte	.LASF56
 387 0019 00000000 		.4byte	.Ldebug_ranges0+0
 388 001d 00000000 		.4byte	0
 389 0021 00000000 		.4byte	.Ldebug_line0
 390 0025 02       		.uleb128 0x2
 391 0026 01       		.byte	0x1
 392 0027 06       		.byte	0x6
 393 0028 7F010000 		.4byte	.LASF0
 394 002c 03       		.uleb128 0x3
 395 002d 1F010000 		.4byte	.LASF2
 396 0031 02       		.byte	0x2
 397 0032 1D       		.byte	0x1d
 398 0033 37000000 		.4byte	0x37
 399 0037 02       		.uleb128 0x2
 400 0038 01       		.byte	0x1
 401 0039 08       		.byte	0x8
 402 003a 57010000 		.4byte	.LASF1
 403 003e 03       		.uleb128 0x3
 404 003f A7020000 		.4byte	.LASF3
 405 0043 02       		.byte	0x2
 406 0044 29       		.byte	0x29
 407 0045 49000000 		.4byte	0x49
 408 0049 02       		.uleb128 0x2
 409 004a 02       		.byte	0x2
 410 004b 05       		.byte	0x5
 411 004c 15000000 		.4byte	.LASF4
 412 0050 03       		.uleb128 0x3
 413 0051 37000000 		.4byte	.LASF5
 414 0055 02       		.byte	0x2
 415 0056 2B       		.byte	0x2b
 416 0057 5B000000 		.4byte	0x5b
 417 005b 02       		.uleb128 0x2
 418 005c 02       		.byte	0x2
 419 005d 07       		.byte	0x7
 420 005e EE010000 		.4byte	.LASF6
 421 0062 03       		.uleb128 0x3
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 27


 422 0063 8C020000 		.4byte	.LASF7
 423 0067 02       		.byte	0x2
 424 0068 3F       		.byte	0x3f
 425 0069 6D000000 		.4byte	0x6d
 426 006d 02       		.uleb128 0x2
 427 006e 04       		.byte	0x4
 428 006f 05       		.byte	0x5
 429 0070 FB000000 		.4byte	.LASF8
 430 0074 02       		.uleb128 0x2
 431 0075 04       		.byte	0x4
 432 0076 07       		.byte	0x7
 433 0077 4A020000 		.4byte	.LASF9
 434 007b 02       		.uleb128 0x2
 435 007c 08       		.byte	0x8
 436 007d 05       		.byte	0x5
 437 007e D9000000 		.4byte	.LASF10
 438 0082 02       		.uleb128 0x2
 439 0083 08       		.byte	0x8
 440 0084 07       		.byte	0x7
 441 0085 9C010000 		.4byte	.LASF11
 442 0089 04       		.uleb128 0x4
 443 008a 04       		.byte	0x4
 444 008b 05       		.byte	0x5
 445 008c 696E7400 		.ascii	"int\000"
 446 0090 02       		.uleb128 0x2
 447 0091 04       		.byte	0x4
 448 0092 07       		.byte	0x7
 449 0093 C7010000 		.4byte	.LASF12
 450 0097 03       		.uleb128 0x3
 451 0098 99000000 		.4byte	.LASF13
 452 009c 03       		.byte	0x3
 453 009d 18       		.byte	0x18
 454 009e 2C000000 		.4byte	0x2c
 455 00a2 03       		.uleb128 0x3
 456 00a3 1C020000 		.4byte	.LASF14
 457 00a7 03       		.byte	0x3
 458 00a8 20       		.byte	0x20
 459 00a9 3E000000 		.4byte	0x3e
 460 00ad 03       		.uleb128 0x3
 461 00ae D4010000 		.4byte	.LASF15
 462 00b2 03       		.byte	0x3
 463 00b3 24       		.byte	0x24
 464 00b4 50000000 		.4byte	0x50
 465 00b8 03       		.uleb128 0x3
 466 00b9 14020000 		.4byte	.LASF16
 467 00bd 03       		.byte	0x3
 468 00be 2C       		.byte	0x2c
 469 00bf 62000000 		.4byte	0x62
 470 00c3 02       		.uleb128 0x2
 471 00c4 04       		.byte	0x4
 472 00c5 04       		.byte	0x4
 473 00c6 D3000000 		.4byte	.LASF17
 474 00ca 02       		.uleb128 0x2
 475 00cb 08       		.byte	0x8
 476 00cc 04       		.byte	0x4
 477 00cd 5C020000 		.4byte	.LASF18
 478 00d1 02       		.uleb128 0x2
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 28


 479 00d2 01       		.byte	0x1
 480 00d3 08       		.byte	0x8
 481 00d4 0F020000 		.4byte	.LASF19
 482 00d8 02       		.uleb128 0x2
 483 00d9 08       		.byte	0x8
 484 00da 04       		.byte	0x4
 485 00db 32010000 		.4byte	.LASF20
 486 00df 02       		.uleb128 0x2
 487 00e0 04       		.byte	0x4
 488 00e1 07       		.byte	0x7
 489 00e2 1F000000 		.4byte	.LASF21
 490 00e6 05       		.uleb128 0x5
 491 00e7 90000000 		.4byte	.LASF22
 492 00eb 0C       		.byte	0xc
 493 00ec 04       		.byte	0x4
 494 00ed 0E       		.byte	0xe
 495 00ee 35010000 		.4byte	0x135
 496 00f2 06       		.uleb128 0x6
 497 00f3 6C3300   		.ascii	"l3\000"
 498 00f6 04       		.byte	0x4
 499 00f7 0F       		.byte	0xf
 500 00f8 AD000000 		.4byte	0xad
 501 00fc 00       		.byte	0
 502 00fd 06       		.uleb128 0x6
 503 00fe 6C3200   		.ascii	"l2\000"
 504 0101 04       		.byte	0x4
 505 0102 10       		.byte	0x10
 506 0103 AD000000 		.4byte	0xad
 507 0107 02       		.byte	0x2
 508 0108 06       		.uleb128 0x6
 509 0109 6C3100   		.ascii	"l1\000"
 510 010c 04       		.byte	0x4
 511 010d 11       		.byte	0x11
 512 010e AD000000 		.4byte	0xad
 513 0112 04       		.byte	0x4
 514 0113 06       		.uleb128 0x6
 515 0114 723100   		.ascii	"r1\000"
 516 0117 04       		.byte	0x4
 517 0118 12       		.byte	0x12
 518 0119 AD000000 		.4byte	0xad
 519 011d 06       		.byte	0x6
 520 011e 06       		.uleb128 0x6
 521 011f 723200   		.ascii	"r2\000"
 522 0122 04       		.byte	0x4
 523 0123 13       		.byte	0x13
 524 0124 AD000000 		.4byte	0xad
 525 0128 08       		.byte	0x8
 526 0129 06       		.uleb128 0x6
 527 012a 723300   		.ascii	"r3\000"
 528 012d 04       		.byte	0x4
 529 012e 14       		.byte	0x14
 530 012f AD000000 		.4byte	0xad
 531 0133 0A       		.byte	0xa
 532 0134 00       		.byte	0
 533 0135 05       		.uleb128 0x5
 534 0136 16010000 		.4byte	.LASF23
 535 013a 06       		.byte	0x6
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 29


 536 013b 05       		.byte	0x5
 537 013c 47       		.byte	0x47
 538 013d 66010000 		.4byte	0x166
 539 0141 07       		.uleb128 0x7
 540 0142 28000000 		.4byte	.LASF24
 541 0146 05       		.byte	0x5
 542 0147 49       		.byte	0x49
 543 0148 A2000000 		.4byte	0xa2
 544 014c 00       		.byte	0
 545 014d 07       		.uleb128 0x7
 546 014e 2D000000 		.4byte	.LASF25
 547 0152 05       		.byte	0x5
 548 0153 4A       		.byte	0x4a
 549 0154 A2000000 		.4byte	0xa2
 550 0158 02       		.byte	0x2
 551 0159 07       		.uleb128 0x7
 552 015a 32000000 		.4byte	.LASF26
 553 015e 05       		.byte	0x5
 554 015f 4B       		.byte	0x4b
 555 0160 A2000000 		.4byte	0xa2
 556 0164 04       		.byte	0x4
 557 0165 00       		.byte	0
 558 0166 08       		.uleb128 0x8
 559 0167 86020000 		.4byte	.LASF57
 560 016b 01       		.byte	0x1
 561 016c B803     		.2byte	0x3b8
 562 016e 00000000 		.4byte	.LFB85
 563 0172 D8010000 		.4byte	.LFE85-.LFB85
 564 0176 01       		.uleb128 0x1
 565 0177 9C       		.byte	0x9c
 566 0178 A1050000 		.4byte	0x5a1
 567 017c 09       		.uleb128 0x9
 568 017d 35020000 		.4byte	.LASF27
 569 0181 01       		.byte	0x1
 570 0182 BA03     		.2byte	0x3ba
 571 0184 35010000 		.4byte	0x135
 572 0188 02       		.uleb128 0x2
 573 0189 91       		.byte	0x91
 574 018a 70       		.sleb128 -16
 575 018b 0A       		.uleb128 0xa
 576 018c 7E020000 		.4byte	.LASF28
 577 0190 01       		.byte	0x1
 578 0191 BC03     		.2byte	0x3bc
 579 0193 97000000 		.4byte	0x97
 580 0197 00000000 		.4byte	.LLST0
 581 019b 0B       		.uleb128 0xb
 582 019c 12000000 		.4byte	.LBB2
 583 01a0 C6010000 		.4byte	.LBE2-.LBB2
 584 01a4 80050000 		.4byte	0x580
 585 01a8 0C       		.uleb128 0xc
 586 01a9 72656600 		.ascii	"ref\000"
 587 01ad 01       		.byte	0x1
 588 01ae C403     		.2byte	0x3c4
 589 01b0 E6000000 		.4byte	0xe6
 590 01b4 02       		.uleb128 0x2
 591 01b5 91       		.byte	0x91
 592 01b6 58       		.sleb128 -40
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 30


 593 01b7 0C       		.uleb128 0xc
 594 01b8 64696700 		.ascii	"dig\000"
 595 01bc 01       		.byte	0x1
 596 01bd C503     		.2byte	0x3c5
 597 01bf E6000000 		.4byte	0xe6
 598 01c3 02       		.uleb128 0x2
 599 01c4 91       		.byte	0x91
 600 01c5 64       		.sleb128 -28
 601 01c6 0D       		.uleb128 0xd
 602 01c7 6C656400 		.ascii	"led\000"
 603 01cb 01       		.byte	0x1
 604 01cc C603     		.2byte	0x3c6
 605 01ce A1050000 		.4byte	0x5a1
 606 01d2 13000000 		.4byte	.LLST1
 607 01d6 0E       		.uleb128 0xe
 608 01d7 A1000000 		.4byte	.LASF29
 609 01db 01       		.byte	0x1
 610 01dc C603     		.2byte	0x3c6
 611 01de A1050000 		.4byte	0x5a1
 612 01e2 01       		.byte	0x1
 613 01e3 0A       		.uleb128 0xa
 614 01e4 A7000000 		.4byte	.LASF30
 615 01e8 01       		.byte	0x1
 616 01e9 C603     		.2byte	0x3c6
 617 01eb A1050000 		.4byte	0x5a1
 618 01ef 33000000 		.4byte	.LLST2
 619 01f3 0E       		.uleb128 0xe
 620 01f4 DD010000 		.4byte	.LASF31
 621 01f8 01       		.byte	0x1
 622 01f9 C603     		.2byte	0x3c6
 623 01fb A1050000 		.4byte	0x5a1
 624 01ff 01       		.byte	0x1
 625 0200 0A       		.uleb128 0xa
 626 0201 E8010000 		.4byte	.LASF32
 627 0205 01       		.byte	0x1
 628 0206 E203     		.2byte	0x3e2
 629 0208 89000000 		.4byte	0x89
 630 020c 69000000 		.4byte	.LLST3
 631 0210 0F       		.uleb128 0xf
 632 0211 656E6400 		.ascii	"end\000"
 633 0215 01       		.byte	0x1
 634 0216 1404     		.2byte	0x414
 635 0218 89000000 		.4byte	0x89
 636 021c 0B       		.uleb128 0xb
 637 021d D0000000 		.4byte	.LBB3
 638 0221 08010000 		.4byte	.LBE3-.LBB3
 639 0225 D2030000 		.4byte	0x3d2
 640 0229 0D       		.uleb128 0xd
 641 022a 723200   		.ascii	"r2\000"
 642 022d 01       		.byte	0x1
 643 022e 0604     		.2byte	0x406
 644 0230 89000000 		.4byte	0x89
 645 0234 87000000 		.4byte	.LLST4
 646 0238 0D       		.uleb128 0xd
 647 0239 7200     		.ascii	"r\000"
 648 023b 01       		.byte	0x1
 649 023c 0704     		.2byte	0x407
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 31


 650 023e 89000000 		.4byte	0x89
 651 0242 9A000000 		.4byte	.LLST5
 652 0246 0B       		.uleb128 0xb
 653 0247 DA000000 		.4byte	.LBB4
 654 024b 5A000000 		.4byte	.LBE4-.LBB4
 655 024f 02030000 		.4byte	0x302
 656 0253 0D       		.uleb128 0xd
 657 0254 7200     		.ascii	"r\000"
 658 0256 01       		.byte	0x1
 659 0257 F503     		.2byte	0x3f5
 660 0259 89000000 		.4byte	0x89
 661 025d B8000000 		.4byte	.LLST6
 662 0261 0D       		.uleb128 0xd
 663 0262 723100   		.ascii	"r1\000"
 664 0265 01       		.byte	0x1
 665 0266 F603     		.2byte	0x3f6
 666 0268 89000000 		.4byte	0x89
 667 026c CB000000 		.4byte	.LLST7
 668 0270 10       		.uleb128 0x10
 669 0271 DE000000 		.4byte	.LVL27
 670 0275 B9050000 		.4byte	0x5b9
 671 0279 11       		.uleb128 0x11
 672 027a E8000000 		.4byte	.LVL28
 673 027e C4050000 		.4byte	0x5c4
 674 0282 99020000 		.4byte	0x299
 675 0286 12       		.uleb128 0x12
 676 0287 01       		.uleb128 0x1
 677 0288 50       		.byte	0x50
 678 0289 05       		.uleb128 0x5
 679 028a 03       		.byte	0x3
 680 028b 50000000 		.4byte	.LC7
 681 028f 12       		.uleb128 0x12
 682 0290 01       		.uleb128 0x1
 683 0291 51       		.byte	0x51
 684 0292 05       		.uleb128 0x5
 685 0293 03       		.byte	0x3
 686 0294 3C000000 		.4byte	.LC5
 687 0298 00       		.byte	0
 688 0299 10       		.uleb128 0x10
 689 029a EC000000 		.4byte	.LVL29
 690 029e CF050000 		.4byte	0x5cf
 691 02a2 10       		.uleb128 0x10
 692 02a3 FE000000 		.4byte	.LVL31
 693 02a7 CF050000 		.4byte	0x5cf
 694 02ab 11       		.uleb128 0x11
 695 02ac 1C010000 		.4byte	.LVL33
 696 02b0 DA050000 		.4byte	0x5da
 697 02b4 C5020000 		.4byte	0x2c5
 698 02b8 12       		.uleb128 0x12
 699 02b9 01       		.uleb128 0x1
 700 02ba 50       		.byte	0x50
 701 02bb 02       		.uleb128 0x2
 702 02bc 09       		.byte	0x9
 703 02bd C8       		.byte	0xc8
 704 02be 12       		.uleb128 0x12
 705 02bf 01       		.uleb128 0x1
 706 02c0 51       		.byte	0x51
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 32


 707 02c1 02       		.uleb128 0x2
 708 02c2 08       		.byte	0x8
 709 02c3 32       		.byte	0x32
 710 02c4 00       		.byte	0
 711 02c5 11       		.uleb128 0x11
 712 02c6 22010000 		.4byte	.LVL34
 713 02ca E5050000 		.4byte	0x5e5
 714 02ce D8020000 		.4byte	0x2d8
 715 02d2 12       		.uleb128 0x12
 716 02d3 01       		.uleb128 0x1
 717 02d4 50       		.byte	0x50
 718 02d5 01       		.uleb128 0x1
 719 02d6 30       		.byte	0x30
 720 02d7 00       		.byte	0
 721 02d8 11       		.uleb128 0x11
 722 02d9 2C010000 		.4byte	.LVL36
 723 02dd DA050000 		.4byte	0x5da
 724 02e1 F2020000 		.4byte	0x2f2
 725 02e5 12       		.uleb128 0x12
 726 02e6 01       		.uleb128 0x1
 727 02e7 50       		.byte	0x50
 728 02e8 02       		.uleb128 0x2
 729 02e9 08       		.byte	0x8
 730 02ea 32       		.byte	0x32
 731 02eb 12       		.uleb128 0x12
 732 02ec 01       		.uleb128 0x1
 733 02ed 51       		.byte	0x51
 734 02ee 02       		.uleb128 0x2
 735 02ef 09       		.byte	0x9
 736 02f0 C8       		.byte	0xc8
 737 02f1 00       		.byte	0
 738 02f2 13       		.uleb128 0x13
 739 02f3 32010000 		.4byte	.LVL37
 740 02f7 E5050000 		.4byte	0x5e5
 741 02fb 12       		.uleb128 0x12
 742 02fc 01       		.uleb128 0x1
 743 02fd 50       		.byte	0x50
 744 02fe 01       		.uleb128 0x1
 745 02ff 30       		.byte	0x30
 746 0300 00       		.byte	0
 747 0301 00       		.byte	0
 748 0302 11       		.uleb128 0x11
 749 0303 3E010000 		.4byte	.LVL39
 750 0307 DA050000 		.4byte	0x5da
 751 030b 21030000 		.4byte	0x321
 752 030f 12       		.uleb128 0x12
 753 0310 01       		.uleb128 0x1
 754 0311 50       		.byte	0x50
 755 0312 02       		.uleb128 0x2
 756 0313 08       		.byte	0x8
 757 0314 32       		.byte	0x32
 758 0315 12       		.uleb128 0x12
 759 0316 01       		.uleb128 0x1
 760 0317 51       		.byte	0x51
 761 0318 02       		.uleb128 0x2
 762 0319 08       		.byte	0x8
 763 031a 32       		.byte	0x32
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 33


 764 031b 12       		.uleb128 0x12
 765 031c 01       		.uleb128 0x1
 766 031d 52       		.byte	0x52
 767 031e 01       		.uleb128 0x1
 768 031f 30       		.byte	0x30
 769 0320 00       		.byte	0
 770 0321 10       		.uleb128 0x10
 771 0322 52010000 		.4byte	.LVL40
 772 0326 CF050000 		.4byte	0x5cf
 773 032a 10       		.uleb128 0x10
 774 032b 6A010000 		.4byte	.LVL42
 775 032f CF050000 		.4byte	0x5cf
 776 0333 11       		.uleb128 0x11
 777 0334 84010000 		.4byte	.LVL45
 778 0338 DA050000 		.4byte	0x5da
 779 033c 53030000 		.4byte	0x353
 780 0340 12       		.uleb128 0x12
 781 0341 01       		.uleb128 0x1
 782 0342 50       		.byte	0x50
 783 0343 02       		.uleb128 0x2
 784 0344 08       		.byte	0x8
 785 0345 32       		.byte	0x32
 786 0346 12       		.uleb128 0x12
 787 0347 01       		.uleb128 0x1
 788 0348 51       		.byte	0x51
 789 0349 02       		.uleb128 0x2
 790 034a 09       		.byte	0x9
 791 034b C8       		.byte	0xc8
 792 034c 12       		.uleb128 0x12
 793 034d 01       		.uleb128 0x1
 794 034e 52       		.byte	0x52
 795 034f 02       		.uleb128 0x2
 796 0350 74       		.byte	0x74
 797 0351 00       		.sleb128 0
 798 0352 00       		.byte	0
 799 0353 11       		.uleb128 0x11
 800 0354 8A010000 		.4byte	.LVL46
 801 0358 E5050000 		.4byte	0x5e5
 802 035c 66030000 		.4byte	0x366
 803 0360 12       		.uleb128 0x12
 804 0361 01       		.uleb128 0x1
 805 0362 50       		.byte	0x50
 806 0363 01       		.uleb128 0x1
 807 0364 30       		.byte	0x30
 808 0365 00       		.byte	0
 809 0366 11       		.uleb128 0x11
 810 0367 96010000 		.4byte	.LVL49
 811 036b DA050000 		.4byte	0x5da
 812 036f 86030000 		.4byte	0x386
 813 0373 12       		.uleb128 0x12
 814 0374 01       		.uleb128 0x1
 815 0375 50       		.byte	0x50
 816 0376 02       		.uleb128 0x2
 817 0377 08       		.byte	0x8
 818 0378 32       		.byte	0x32
 819 0379 12       		.uleb128 0x12
 820 037a 01       		.uleb128 0x1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 34


 821 037b 51       		.byte	0x51
 822 037c 02       		.uleb128 0x2
 823 037d 09       		.byte	0x9
 824 037e C8       		.byte	0xc8
 825 037f 12       		.uleb128 0x12
 826 0380 01       		.uleb128 0x1
 827 0381 52       		.byte	0x52
 828 0382 02       		.uleb128 0x2
 829 0383 74       		.byte	0x74
 830 0384 00       		.sleb128 0
 831 0385 00       		.byte	0
 832 0386 11       		.uleb128 0x11
 833 0387 9C010000 		.4byte	.LVL50
 834 038b E5050000 		.4byte	0x5e5
 835 038f 99030000 		.4byte	0x399
 836 0393 12       		.uleb128 0x12
 837 0394 01       		.uleb128 0x1
 838 0395 50       		.byte	0x50
 839 0396 01       		.uleb128 0x1
 840 0397 30       		.byte	0x30
 841 0398 00       		.byte	0
 842 0399 11       		.uleb128 0x11
 843 039a A2010000 		.4byte	.LVL51
 844 039e F1050000 		.4byte	0x5f1
 845 03a2 AD030000 		.4byte	0x3ad
 846 03a6 12       		.uleb128 0x12
 847 03a7 01       		.uleb128 0x1
 848 03a8 50       		.byte	0x50
 849 03a9 02       		.uleb128 0x2
 850 03aa 91       		.byte	0x91
 851 03ab 58       		.sleb128 -40
 852 03ac 00       		.byte	0
 853 03ad 11       		.uleb128 0x11
 854 03ae A8010000 		.4byte	.LVL52
 855 03b2 FC050000 		.4byte	0x5fc
 856 03b6 C1030000 		.4byte	0x3c1
 857 03ba 12       		.uleb128 0x12
 858 03bb 01       		.uleb128 0x1
 859 03bc 50       		.byte	0x50
 860 03bd 02       		.uleb128 0x2
 861 03be 91       		.byte	0x91
 862 03bf 64       		.sleb128 -28
 863 03c0 00       		.byte	0
 864 03c1 13       		.uleb128 0x13
 865 03c2 AE010000 		.4byte	.LVL53
 866 03c6 07060000 		.4byte	0x607
 867 03ca 12       		.uleb128 0x12
 868 03cb 01       		.uleb128 0x1
 869 03cc 50       		.byte	0x50
 870 03cd 02       		.uleb128 0x2
 871 03ce 91       		.byte	0x91
 872 03cf 70       		.sleb128 -16
 873 03d0 00       		.byte	0
 874 03d1 00       		.byte	0
 875 03d2 10       		.uleb128 0x10
 876 03d3 16000000 		.4byte	.LVL2
 877 03d7 12060000 		.4byte	0x612
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 35


 878 03db 11       		.uleb128 0x11
 879 03dc 1C000000 		.4byte	.LVL3
 880 03e0 1D060000 		.4byte	0x61d
 881 03e4 F2030000 		.4byte	0x3f2
 882 03e8 12       		.uleb128 0x12
 883 03e9 01       		.uleb128 0x1
 884 03ea 50       		.byte	0x50
 885 03eb 05       		.uleb128 0x5
 886 03ec 03       		.byte	0x3
 887 03ed 08000000 		.4byte	.LC1
 888 03f1 00       		.byte	0
 889 03f2 10       		.uleb128 0x10
 890 03f3 20000000 		.4byte	.LVL4
 891 03f7 2C060000 		.4byte	0x62c
 892 03fb 11       		.uleb128 0x11
 893 03fc 28000000 		.4byte	.LVL5
 894 0400 C4050000 		.4byte	0x5c4
 895 0404 1B040000 		.4byte	0x41b
 896 0408 12       		.uleb128 0x12
 897 0409 01       		.uleb128 0x1
 898 040a 50       		.byte	0x50
 899 040b 05       		.uleb128 0x5
 900 040c 03       		.byte	0x3
 901 040d 1C000000 		.4byte	.LC3
 902 0411 12       		.uleb128 0x12
 903 0412 01       		.uleb128 0x1
 904 0413 51       		.byte	0x51
 905 0414 05       		.uleb128 0x5
 906 0415 03       		.byte	0x3
 907 0416 14000000 		.4byte	.LC2
 908 041a 00       		.byte	0
 909 041b 10       		.uleb128 0x10
 910 041c 2C000000 		.4byte	.LVL6
 911 0420 37060000 		.4byte	0x637
 912 0424 11       		.uleb128 0x11
 913 0425 32000000 		.4byte	.LVL7
 914 0429 1D060000 		.4byte	0x61d
 915 042d 3B040000 		.4byte	0x43b
 916 0431 12       		.uleb128 0x12
 917 0432 01       		.uleb128 0x1
 918 0433 50       		.byte	0x50
 919 0434 05       		.uleb128 0x5
 920 0435 03       		.byte	0x3
 921 0436 2C000000 		.4byte	.LC4
 922 043a 00       		.byte	0
 923 043b 10       		.uleb128 0x10
 924 043c 36000000 		.4byte	.LVL8
 925 0440 42060000 		.4byte	0x642
 926 0444 11       		.uleb128 0x11
 927 0445 4A000000 		.4byte	.LVL9
 928 0449 4D060000 		.4byte	0x64d
 929 044d 7E040000 		.4byte	0x47e
 930 0451 12       		.uleb128 0x12
 931 0452 01       		.uleb128 0x1
 932 0453 50       		.byte	0x50
 933 0454 03       		.uleb128 0x3
 934 0455 0A       		.byte	0xa
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 36


 935 0456 2823     		.2byte	0x2328
 936 0458 12       		.uleb128 0x12
 937 0459 01       		.uleb128 0x1
 938 045a 51       		.byte	0x51
 939 045b 03       		.uleb128 0x3
 940 045c 0A       		.byte	0xa
 941 045d 2823     		.2byte	0x2328
 942 045f 12       		.uleb128 0x12
 943 0460 01       		.uleb128 0x1
 944 0461 52       		.byte	0x52
 945 0462 03       		.uleb128 0x3
 946 0463 0A       		.byte	0xa
 947 0464 F82A     		.2byte	0x2af8
 948 0466 12       		.uleb128 0x12
 949 0467 01       		.uleb128 0x1
 950 0468 53       		.byte	0x53
 951 0469 03       		.uleb128 0x3
 952 046a 0A       		.byte	0xa
 953 046b F82A     		.2byte	0x2af8
 954 046d 12       		.uleb128 0x12
 955 046e 02       		.uleb128 0x2
 956 046f 7D       		.byte	0x7d
 957 0470 00       		.sleb128 0
 958 0471 03       		.uleb128 0x3
 959 0472 0A       		.byte	0xa
 960 0473 2823     		.2byte	0x2328
 961 0475 12       		.uleb128 0x12
 962 0476 02       		.uleb128 0x2
 963 0477 7D       		.byte	0x7d
 964 0478 04       		.sleb128 4
 965 0479 03       		.uleb128 0x3
 966 047a 0A       		.byte	0xa
 967 047b 2823     		.2byte	0x2328
 968 047d 00       		.byte	0
 969 047e 11       		.uleb128 0x11
 970 047f 50000000 		.4byte	.LVL10
 971 0483 E5050000 		.4byte	0x5e5
 972 0487 92040000 		.4byte	0x492
 973 048b 12       		.uleb128 0x12
 974 048c 01       		.uleb128 0x1
 975 048d 50       		.byte	0x50
 976 048e 02       		.uleb128 0x2
 977 048f 08       		.byte	0x8
 978 0490 C8       		.byte	0xc8
 979 0491 00       		.byte	0
 980 0492 11       		.uleb128 0x11
 981 0493 5A000000 		.4byte	.LVL12
 982 0497 F1050000 		.4byte	0x5f1
 983 049b A6040000 		.4byte	0x4a6
 984 049f 12       		.uleb128 0x12
 985 04a0 01       		.uleb128 0x1
 986 04a1 50       		.byte	0x50
 987 04a2 02       		.uleb128 0x2
 988 04a3 91       		.byte	0x91
 989 04a4 58       		.sleb128 -40
 990 04a5 00       		.byte	0
 991 04a6 11       		.uleb128 0x11
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 37


 992 04a7 60000000 		.4byte	.LVL13
 993 04ab FC050000 		.4byte	0x5fc
 994 04af BA040000 		.4byte	0x4ba
 995 04b3 12       		.uleb128 0x12
 996 04b4 01       		.uleb128 0x1
 997 04b5 50       		.byte	0x50
 998 04b6 02       		.uleb128 0x2
 999 04b7 91       		.byte	0x91
 1000 04b8 64       		.sleb128 -28
 1001 04b9 00       		.byte	0
 1002 04ba 11       		.uleb128 0x11
 1003 04bb 8C000000 		.4byte	.LVL14
 1004 04bf 58060000 		.4byte	0x658
 1005 04c3 D2040000 		.4byte	0x4d2
 1006 04c7 12       		.uleb128 0x12
 1007 04c8 01       		.uleb128 0x1
 1008 04c9 50       		.byte	0x50
 1009 04ca 01       		.uleb128 0x1
 1010 04cb 30       		.byte	0x30
 1011 04cc 12       		.uleb128 0x12
 1012 04cd 01       		.uleb128 0x1
 1013 04ce 51       		.byte	0x51
 1014 04cf 01       		.uleb128 0x1
 1015 04d0 30       		.byte	0x30
 1016 04d1 00       		.byte	0
 1017 04d2 11       		.uleb128 0x11
 1018 04d3 9A000000 		.4byte	.LVL16
 1019 04d7 DA050000 		.4byte	0x5da
 1020 04db F2040000 		.4byte	0x4f2
 1021 04df 12       		.uleb128 0x12
 1022 04e0 01       		.uleb128 0x1
 1023 04e1 50       		.byte	0x50
 1024 04e2 02       		.uleb128 0x2
 1025 04e3 08       		.byte	0x8
 1026 04e4 32       		.byte	0x32
 1027 04e5 12       		.uleb128 0x12
 1028 04e6 01       		.uleb128 0x1
 1029 04e7 51       		.byte	0x51
 1030 04e8 02       		.uleb128 0x2
 1031 04e9 08       		.byte	0x8
 1032 04ea 32       		.byte	0x32
 1033 04eb 12       		.uleb128 0x12
 1034 04ec 01       		.uleb128 0x1
 1035 04ed 52       		.byte	0x52
 1036 04ee 02       		.uleb128 0x2
 1037 04ef 08       		.byte	0x8
 1038 04f0 32       		.byte	0x32
 1039 04f1 00       		.byte	0
 1040 04f2 11       		.uleb128 0x11
 1041 04f3 A2000000 		.4byte	.LVL17
 1042 04f7 63060000 		.4byte	0x663
 1043 04fb 0C050000 		.4byte	0x50c
 1044 04ff 12       		.uleb128 0x12
 1045 0500 01       		.uleb128 0x1
 1046 0501 50       		.byte	0x50
 1047 0502 02       		.uleb128 0x2
 1048 0503 08       		.byte	0x8
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 38


 1049 0504 3C       		.byte	0x3c
 1050 0505 12       		.uleb128 0x12
 1051 0506 01       		.uleb128 0x1
 1052 0507 51       		.byte	0x51
 1053 0508 02       		.uleb128 0x2
 1054 0509 08       		.byte	0x8
 1055 050a 50       		.byte	0x50
 1056 050b 00       		.byte	0
 1057 050c 11       		.uleb128 0x11
 1058 050d AE000000 		.4byte	.LVL18
 1059 0511 C4050000 		.4byte	0x5c4
 1060 0515 2C050000 		.4byte	0x52c
 1061 0519 12       		.uleb128 0x12
 1062 051a 01       		.uleb128 0x1
 1063 051b 50       		.byte	0x50
 1064 051c 05       		.uleb128 0x5
 1065 051d 03       		.byte	0x3
 1066 051e 1C000000 		.4byte	.LC3
 1067 0522 12       		.uleb128 0x12
 1068 0523 01       		.uleb128 0x1
 1069 0524 51       		.byte	0x51
 1070 0525 05       		.uleb128 0x5
 1071 0526 03       		.byte	0x3
 1072 0527 14000000 		.4byte	.LC2
 1073 052b 00       		.byte	0
 1074 052c 10       		.uleb128 0x10
 1075 052d B2000000 		.4byte	.LVL19
 1076 0531 6E060000 		.4byte	0x66e
 1077 0535 10       		.uleb128 0x10
 1078 0536 B6000000 		.4byte	.LVL20
 1079 053a 79060000 		.4byte	0x679
 1080 053e 10       		.uleb128 0x10
 1081 053f BA000000 		.4byte	.LVL21
 1082 0543 84060000 		.4byte	0x684
 1083 0547 10       		.uleb128 0x10
 1084 0548 BE000000 		.4byte	.LVL22
 1085 054c B9050000 		.4byte	0x5b9
 1086 0550 11       		.uleb128 0x11
 1087 0551 C8000000 		.4byte	.LVL24
 1088 0555 C4050000 		.4byte	0x5c4
 1089 0559 70050000 		.4byte	0x570
 1090 055d 12       		.uleb128 0x12
 1091 055e 01       		.uleb128 0x1
 1092 055f 50       		.byte	0x50
 1093 0560 05       		.uleb128 0x5
 1094 0561 03       		.byte	0x3
 1095 0562 40000000 		.4byte	.LC6
 1096 0566 12       		.uleb128 0x12
 1097 0567 01       		.uleb128 0x1
 1098 0568 51       		.byte	0x51
 1099 0569 05       		.uleb128 0x5
 1100 056a 03       		.byte	0x3
 1101 056b 3C000000 		.4byte	.LC5
 1102 056f 00       		.byte	0
 1103 0570 13       		.uleb128 0x13
 1104 0571 CE000000 		.4byte	.LVL25
 1105 0575 8F060000 		.4byte	0x68f
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 39


 1106 0579 12       		.uleb128 0x12
 1107 057a 01       		.uleb128 0x1
 1108 057b 50       		.byte	0x50
 1109 057c 01       		.uleb128 0x1
 1110 057d 31       		.byte	0x31
 1111 057e 00       		.byte	0
 1112 057f 00       		.byte	0
 1113 0580 11       		.uleb128 0x11
 1114 0581 0A000000 		.4byte	.LVL0
 1115 0585 1D060000 		.4byte	0x61d
 1116 0589 97050000 		.4byte	0x597
 1117 058d 12       		.uleb128 0x12
 1118 058e 01       		.uleb128 0x1
 1119 058f 50       		.byte	0x50
 1120 0590 05       		.uleb128 0x5
 1121 0591 03       		.byte	0x3
 1122 0592 00000000 		.4byte	.LC0
 1123 0596 00       		.byte	0
 1124 0597 10       		.uleb128 0x10
 1125 0598 0E000000 		.4byte	.LVL1
 1126 059c 9A060000 		.4byte	0x69a
 1127 05a0 00       		.byte	0
 1128 05a1 02       		.uleb128 0x2
 1129 05a2 01       		.byte	0x1
 1130 05a3 02       		.byte	0x2
 1131 05a4 24020000 		.4byte	.LASF33
 1132 05a8 14       		.uleb128 0x14
 1133 05a9 C0020000 		.4byte	.LASF58
 1134 05ad 0F       		.byte	0xf
 1135 05ae 1207     		.2byte	0x712
 1136 05b0 B4050000 		.4byte	0x5b4
 1137 05b4 15       		.uleb128 0x15
 1138 05b5 B8000000 		.4byte	0xb8
 1139 05b9 16       		.uleb128 0x16
 1140 05ba 04010000 		.4byte	.LASF34
 1141 05be 04010000 		.4byte	.LASF34
 1142 05c2 06       		.byte	0x6
 1143 05c3 B6       		.byte	0xb6
 1144 05c4 16       		.uleb128 0x16
 1145 05c5 2A020000 		.4byte	.LASF35
 1146 05c9 2A020000 		.4byte	.LASF35
 1147 05cd 07       		.byte	0x7
 1148 05ce 07       		.byte	0x7
 1149 05cf 16       		.uleb128 0x16
 1150 05d0 BC000000 		.4byte	.LASF36
 1151 05d4 BC000000 		.4byte	.LASF36
 1152 05d8 08       		.byte	0x8
 1153 05d9 88       		.byte	0x88
 1154 05da 16       		.uleb128 0x16
 1155 05db B1000000 		.4byte	.LASF37
 1156 05df B1000000 		.4byte	.LASF37
 1157 05e3 09       		.byte	0x9
 1158 05e4 12       		.byte	0x12
 1159 05e5 17       		.uleb128 0x17
 1160 05e6 B3010000 		.4byte	.LASF38
 1161 05ea B3010000 		.4byte	.LASF38
 1162 05ee 0A       		.byte	0xa
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 40


 1163 05ef ED02     		.2byte	0x2ed
 1164 05f1 16       		.uleb128 0x16
 1165 05f2 96020000 		.4byte	.LASF39
 1166 05f6 96020000 		.4byte	.LASF39
 1167 05fa 04       		.byte	0x4
 1168 05fb 18       		.byte	0x18
 1169 05fc 16       		.uleb128 0x16
 1170 05fd E7000000 		.4byte	.LASF40
 1171 0601 E7000000 		.4byte	.LASF40
 1172 0605 04       		.byte	0x4
 1173 0606 19       		.byte	0x19
 1174 0607 16       		.uleb128 0x16
 1175 0608 3E010000 		.4byte	.LASF41
 1176 060c 3E010000 		.4byte	.LASF41
 1177 0610 05       		.byte	0x5
 1178 0611 51       		.byte	0x51
 1179 0612 16       		.uleb128 0x16
 1180 0613 29010000 		.4byte	.LASF42
 1181 0617 29010000 		.4byte	.LASF42
 1182 061b 0B       		.byte	0xb
 1183 061c 11       		.byte	0x11
 1184 061d 18       		.uleb128 0x18
 1185 061e E3010000 		.4byte	.LASF59
 1186 0622 6F020000 		.4byte	.LASF60
 1187 0626 10       		.byte	0x10
 1188 0627 00       		.byte	0
 1189 0628 E3010000 		.4byte	.LASF59
 1190 062c 16       		.uleb128 0x16
 1191 062d 63020000 		.4byte	.LASF43
 1192 0631 63020000 		.4byte	.LASF43
 1193 0635 09       		.byte	0x9
 1194 0636 0B       		.byte	0xb
 1195 0637 16       		.uleb128 0x16
 1196 0638 BE010000 		.4byte	.LASF44
 1197 063c BE010000 		.4byte	.LASF44
 1198 0640 0B       		.byte	0xb
 1199 0641 18       		.byte	0x18
 1200 0642 16       		.uleb128 0x16
 1201 0643 C1000000 		.4byte	.LASF45
 1202 0647 C1000000 		.4byte	.LASF45
 1203 064b 04       		.byte	0x4
 1204 064c 17       		.byte	0x17
 1205 064d 16       		.uleb128 0x16
 1206 064e 65010000 		.4byte	.LASF46
 1207 0652 65010000 		.4byte	.LASF46
 1208 0656 04       		.byte	0x4
 1209 0657 1A       		.byte	0x1a
 1210 0658 16       		.uleb128 0x16
 1211 0659 01020000 		.4byte	.LASF47
 1212 065d 01020000 		.4byte	.LASF47
 1213 0661 09       		.byte	0x9
 1214 0662 0F       		.byte	0xf
 1215 0663 16       		.uleb128 0x16
 1216 0664 00000000 		.4byte	.LASF48
 1217 0668 00000000 		.4byte	.LASF48
 1218 066c 0C       		.byte	0xc
 1219 066d 05       		.byte	0x5
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 41


 1220 066e 16       		.uleb128 0x16
 1221 066f 4F010000 		.4byte	.LASF49
 1222 0673 4F010000 		.4byte	.LASF49
 1223 0677 0B       		.byte	0xb
 1224 0678 1B       		.byte	0x1b
 1225 0679 16       		.uleb128 0x16
 1226 067a 05000000 		.4byte	.LASF50
 1227 067e 05000000 		.4byte	.LASF50
 1228 0682 06       		.byte	0x6
 1229 0683 B0       		.byte	0xb0
 1230 0684 16       		.uleb128 0x16
 1231 0685 B1020000 		.4byte	.LASF51
 1232 0689 B1020000 		.4byte	.LASF51
 1233 068d 06       		.byte	0x6
 1234 068e AE       		.byte	0xae
 1235 068f 16       		.uleb128 0x16
 1236 0690 8B010000 		.4byte	.LASF52
 1237 0694 8B010000 		.4byte	.LASF52
 1238 0698 0D       		.byte	0xd
 1239 0699 26       		.byte	0x26
 1240 069a 16       		.uleb128 0x16
 1241 069b 3A020000 		.4byte	.LASF53
 1242 069f 3A020000 		.4byte	.LASF53
 1243 06a3 0E       		.byte	0xe
 1244 06a4 29       		.byte	0x29
 1245 06a5 00       		.byte	0
 1246              		.section	.debug_abbrev,"",%progbits
 1247              	.Ldebug_abbrev0:
 1248 0000 01       		.uleb128 0x1
 1249 0001 11       		.uleb128 0x11
 1250 0002 01       		.byte	0x1
 1251 0003 25       		.uleb128 0x25
 1252 0004 0E       		.uleb128 0xe
 1253 0005 13       		.uleb128 0x13
 1254 0006 0B       		.uleb128 0xb
 1255 0007 03       		.uleb128 0x3
 1256 0008 0E       		.uleb128 0xe
 1257 0009 1B       		.uleb128 0x1b
 1258 000a 0E       		.uleb128 0xe
 1259 000b 55       		.uleb128 0x55
 1260 000c 17       		.uleb128 0x17
 1261 000d 11       		.uleb128 0x11
 1262 000e 01       		.uleb128 0x1
 1263 000f 10       		.uleb128 0x10
 1264 0010 17       		.uleb128 0x17
 1265 0011 00       		.byte	0
 1266 0012 00       		.byte	0
 1267 0013 02       		.uleb128 0x2
 1268 0014 24       		.uleb128 0x24
 1269 0015 00       		.byte	0
 1270 0016 0B       		.uleb128 0xb
 1271 0017 0B       		.uleb128 0xb
 1272 0018 3E       		.uleb128 0x3e
 1273 0019 0B       		.uleb128 0xb
 1274 001a 03       		.uleb128 0x3
 1275 001b 0E       		.uleb128 0xe
 1276 001c 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 42


 1277 001d 00       		.byte	0
 1278 001e 03       		.uleb128 0x3
 1279 001f 16       		.uleb128 0x16
 1280 0020 00       		.byte	0
 1281 0021 03       		.uleb128 0x3
 1282 0022 0E       		.uleb128 0xe
 1283 0023 3A       		.uleb128 0x3a
 1284 0024 0B       		.uleb128 0xb
 1285 0025 3B       		.uleb128 0x3b
 1286 0026 0B       		.uleb128 0xb
 1287 0027 49       		.uleb128 0x49
 1288 0028 13       		.uleb128 0x13
 1289 0029 00       		.byte	0
 1290 002a 00       		.byte	0
 1291 002b 04       		.uleb128 0x4
 1292 002c 24       		.uleb128 0x24
 1293 002d 00       		.byte	0
 1294 002e 0B       		.uleb128 0xb
 1295 002f 0B       		.uleb128 0xb
 1296 0030 3E       		.uleb128 0x3e
 1297 0031 0B       		.uleb128 0xb
 1298 0032 03       		.uleb128 0x3
 1299 0033 08       		.uleb128 0x8
 1300 0034 00       		.byte	0
 1301 0035 00       		.byte	0
 1302 0036 05       		.uleb128 0x5
 1303 0037 13       		.uleb128 0x13
 1304 0038 01       		.byte	0x1
 1305 0039 03       		.uleb128 0x3
 1306 003a 0E       		.uleb128 0xe
 1307 003b 0B       		.uleb128 0xb
 1308 003c 0B       		.uleb128 0xb
 1309 003d 3A       		.uleb128 0x3a
 1310 003e 0B       		.uleb128 0xb
 1311 003f 3B       		.uleb128 0x3b
 1312 0040 0B       		.uleb128 0xb
 1313 0041 01       		.uleb128 0x1
 1314 0042 13       		.uleb128 0x13
 1315 0043 00       		.byte	0
 1316 0044 00       		.byte	0
 1317 0045 06       		.uleb128 0x6
 1318 0046 0D       		.uleb128 0xd
 1319 0047 00       		.byte	0
 1320 0048 03       		.uleb128 0x3
 1321 0049 08       		.uleb128 0x8
 1322 004a 3A       		.uleb128 0x3a
 1323 004b 0B       		.uleb128 0xb
 1324 004c 3B       		.uleb128 0x3b
 1325 004d 0B       		.uleb128 0xb
 1326 004e 49       		.uleb128 0x49
 1327 004f 13       		.uleb128 0x13
 1328 0050 38       		.uleb128 0x38
 1329 0051 0B       		.uleb128 0xb
 1330 0052 00       		.byte	0
 1331 0053 00       		.byte	0
 1332 0054 07       		.uleb128 0x7
 1333 0055 0D       		.uleb128 0xd
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 43


 1334 0056 00       		.byte	0
 1335 0057 03       		.uleb128 0x3
 1336 0058 0E       		.uleb128 0xe
 1337 0059 3A       		.uleb128 0x3a
 1338 005a 0B       		.uleb128 0xb
 1339 005b 3B       		.uleb128 0x3b
 1340 005c 0B       		.uleb128 0xb
 1341 005d 49       		.uleb128 0x49
 1342 005e 13       		.uleb128 0x13
 1343 005f 38       		.uleb128 0x38
 1344 0060 0B       		.uleb128 0xb
 1345 0061 00       		.byte	0
 1346 0062 00       		.byte	0
 1347 0063 08       		.uleb128 0x8
 1348 0064 2E       		.uleb128 0x2e
 1349 0065 01       		.byte	0x1
 1350 0066 3F       		.uleb128 0x3f
 1351 0067 19       		.uleb128 0x19
 1352 0068 03       		.uleb128 0x3
 1353 0069 0E       		.uleb128 0xe
 1354 006a 3A       		.uleb128 0x3a
 1355 006b 0B       		.uleb128 0xb
 1356 006c 3B       		.uleb128 0x3b
 1357 006d 05       		.uleb128 0x5
 1358 006e 27       		.uleb128 0x27
 1359 006f 19       		.uleb128 0x19
 1360 0070 8701     		.uleb128 0x87
 1361 0072 19       		.uleb128 0x19
 1362 0073 11       		.uleb128 0x11
 1363 0074 01       		.uleb128 0x1
 1364 0075 12       		.uleb128 0x12
 1365 0076 06       		.uleb128 0x6
 1366 0077 40       		.uleb128 0x40
 1367 0078 18       		.uleb128 0x18
 1368 0079 9742     		.uleb128 0x2117
 1369 007b 19       		.uleb128 0x19
 1370 007c 01       		.uleb128 0x1
 1371 007d 13       		.uleb128 0x13
 1372 007e 00       		.byte	0
 1373 007f 00       		.byte	0
 1374 0080 09       		.uleb128 0x9
 1375 0081 34       		.uleb128 0x34
 1376 0082 00       		.byte	0
 1377 0083 03       		.uleb128 0x3
 1378 0084 0E       		.uleb128 0xe
 1379 0085 3A       		.uleb128 0x3a
 1380 0086 0B       		.uleb128 0xb
 1381 0087 3B       		.uleb128 0x3b
 1382 0088 05       		.uleb128 0x5
 1383 0089 49       		.uleb128 0x49
 1384 008a 13       		.uleb128 0x13
 1385 008b 02       		.uleb128 0x2
 1386 008c 18       		.uleb128 0x18
 1387 008d 00       		.byte	0
 1388 008e 00       		.byte	0
 1389 008f 0A       		.uleb128 0xa
 1390 0090 34       		.uleb128 0x34
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 44


 1391 0091 00       		.byte	0
 1392 0092 03       		.uleb128 0x3
 1393 0093 0E       		.uleb128 0xe
 1394 0094 3A       		.uleb128 0x3a
 1395 0095 0B       		.uleb128 0xb
 1396 0096 3B       		.uleb128 0x3b
 1397 0097 05       		.uleb128 0x5
 1398 0098 49       		.uleb128 0x49
 1399 0099 13       		.uleb128 0x13
 1400 009a 02       		.uleb128 0x2
 1401 009b 17       		.uleb128 0x17
 1402 009c 00       		.byte	0
 1403 009d 00       		.byte	0
 1404 009e 0B       		.uleb128 0xb
 1405 009f 0B       		.uleb128 0xb
 1406 00a0 01       		.byte	0x1
 1407 00a1 11       		.uleb128 0x11
 1408 00a2 01       		.uleb128 0x1
 1409 00a3 12       		.uleb128 0x12
 1410 00a4 06       		.uleb128 0x6
 1411 00a5 01       		.uleb128 0x1
 1412 00a6 13       		.uleb128 0x13
 1413 00a7 00       		.byte	0
 1414 00a8 00       		.byte	0
 1415 00a9 0C       		.uleb128 0xc
 1416 00aa 34       		.uleb128 0x34
 1417 00ab 00       		.byte	0
 1418 00ac 03       		.uleb128 0x3
 1419 00ad 08       		.uleb128 0x8
 1420 00ae 3A       		.uleb128 0x3a
 1421 00af 0B       		.uleb128 0xb
 1422 00b0 3B       		.uleb128 0x3b
 1423 00b1 05       		.uleb128 0x5
 1424 00b2 49       		.uleb128 0x49
 1425 00b3 13       		.uleb128 0x13
 1426 00b4 02       		.uleb128 0x2
 1427 00b5 18       		.uleb128 0x18
 1428 00b6 00       		.byte	0
 1429 00b7 00       		.byte	0
 1430 00b8 0D       		.uleb128 0xd
 1431 00b9 34       		.uleb128 0x34
 1432 00ba 00       		.byte	0
 1433 00bb 03       		.uleb128 0x3
 1434 00bc 08       		.uleb128 0x8
 1435 00bd 3A       		.uleb128 0x3a
 1436 00be 0B       		.uleb128 0xb
 1437 00bf 3B       		.uleb128 0x3b
 1438 00c0 05       		.uleb128 0x5
 1439 00c1 49       		.uleb128 0x49
 1440 00c2 13       		.uleb128 0x13
 1441 00c3 02       		.uleb128 0x2
 1442 00c4 17       		.uleb128 0x17
 1443 00c5 00       		.byte	0
 1444 00c6 00       		.byte	0
 1445 00c7 0E       		.uleb128 0xe
 1446 00c8 34       		.uleb128 0x34
 1447 00c9 00       		.byte	0
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 45


 1448 00ca 03       		.uleb128 0x3
 1449 00cb 0E       		.uleb128 0xe
 1450 00cc 3A       		.uleb128 0x3a
 1451 00cd 0B       		.uleb128 0xb
 1452 00ce 3B       		.uleb128 0x3b
 1453 00cf 05       		.uleb128 0x5
 1454 00d0 49       		.uleb128 0x49
 1455 00d1 13       		.uleb128 0x13
 1456 00d2 1C       		.uleb128 0x1c
 1457 00d3 0B       		.uleb128 0xb
 1458 00d4 00       		.byte	0
 1459 00d5 00       		.byte	0
 1460 00d6 0F       		.uleb128 0xf
 1461 00d7 34       		.uleb128 0x34
 1462 00d8 00       		.byte	0
 1463 00d9 03       		.uleb128 0x3
 1464 00da 08       		.uleb128 0x8
 1465 00db 3A       		.uleb128 0x3a
 1466 00dc 0B       		.uleb128 0xb
 1467 00dd 3B       		.uleb128 0x3b
 1468 00de 05       		.uleb128 0x5
 1469 00df 49       		.uleb128 0x49
 1470 00e0 13       		.uleb128 0x13
 1471 00e1 00       		.byte	0
 1472 00e2 00       		.byte	0
 1473 00e3 10       		.uleb128 0x10
 1474 00e4 898201   		.uleb128 0x4109
 1475 00e7 00       		.byte	0
 1476 00e8 11       		.uleb128 0x11
 1477 00e9 01       		.uleb128 0x1
 1478 00ea 31       		.uleb128 0x31
 1479 00eb 13       		.uleb128 0x13
 1480 00ec 00       		.byte	0
 1481 00ed 00       		.byte	0
 1482 00ee 11       		.uleb128 0x11
 1483 00ef 898201   		.uleb128 0x4109
 1484 00f2 01       		.byte	0x1
 1485 00f3 11       		.uleb128 0x11
 1486 00f4 01       		.uleb128 0x1
 1487 00f5 31       		.uleb128 0x31
 1488 00f6 13       		.uleb128 0x13
 1489 00f7 01       		.uleb128 0x1
 1490 00f8 13       		.uleb128 0x13
 1491 00f9 00       		.byte	0
 1492 00fa 00       		.byte	0
 1493 00fb 12       		.uleb128 0x12
 1494 00fc 8A8201   		.uleb128 0x410a
 1495 00ff 00       		.byte	0
 1496 0100 02       		.uleb128 0x2
 1497 0101 18       		.uleb128 0x18
 1498 0102 9142     		.uleb128 0x2111
 1499 0104 18       		.uleb128 0x18
 1500 0105 00       		.byte	0
 1501 0106 00       		.byte	0
 1502 0107 13       		.uleb128 0x13
 1503 0108 898201   		.uleb128 0x4109
 1504 010b 01       		.byte	0x1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 46


 1505 010c 11       		.uleb128 0x11
 1506 010d 01       		.uleb128 0x1
 1507 010e 31       		.uleb128 0x31
 1508 010f 13       		.uleb128 0x13
 1509 0110 00       		.byte	0
 1510 0111 00       		.byte	0
 1511 0112 14       		.uleb128 0x14
 1512 0113 34       		.uleb128 0x34
 1513 0114 00       		.byte	0
 1514 0115 03       		.uleb128 0x3
 1515 0116 0E       		.uleb128 0xe
 1516 0117 3A       		.uleb128 0x3a
 1517 0118 0B       		.uleb128 0xb
 1518 0119 3B       		.uleb128 0x3b
 1519 011a 05       		.uleb128 0x5
 1520 011b 49       		.uleb128 0x49
 1521 011c 13       		.uleb128 0x13
 1522 011d 3F       		.uleb128 0x3f
 1523 011e 19       		.uleb128 0x19
 1524 011f 3C       		.uleb128 0x3c
 1525 0120 19       		.uleb128 0x19
 1526 0121 00       		.byte	0
 1527 0122 00       		.byte	0
 1528 0123 15       		.uleb128 0x15
 1529 0124 35       		.uleb128 0x35
 1530 0125 00       		.byte	0
 1531 0126 49       		.uleb128 0x49
 1532 0127 13       		.uleb128 0x13
 1533 0128 00       		.byte	0
 1534 0129 00       		.byte	0
 1535 012a 16       		.uleb128 0x16
 1536 012b 2E       		.uleb128 0x2e
 1537 012c 00       		.byte	0
 1538 012d 3F       		.uleb128 0x3f
 1539 012e 19       		.uleb128 0x19
 1540 012f 3C       		.uleb128 0x3c
 1541 0130 19       		.uleb128 0x19
 1542 0131 6E       		.uleb128 0x6e
 1543 0132 0E       		.uleb128 0xe
 1544 0133 03       		.uleb128 0x3
 1545 0134 0E       		.uleb128 0xe
 1546 0135 3A       		.uleb128 0x3a
 1547 0136 0B       		.uleb128 0xb
 1548 0137 3B       		.uleb128 0x3b
 1549 0138 0B       		.uleb128 0xb
 1550 0139 00       		.byte	0
 1551 013a 00       		.byte	0
 1552 013b 17       		.uleb128 0x17
 1553 013c 2E       		.uleb128 0x2e
 1554 013d 00       		.byte	0
 1555 013e 3F       		.uleb128 0x3f
 1556 013f 19       		.uleb128 0x19
 1557 0140 3C       		.uleb128 0x3c
 1558 0141 19       		.uleb128 0x19
 1559 0142 6E       		.uleb128 0x6e
 1560 0143 0E       		.uleb128 0xe
 1561 0144 03       		.uleb128 0x3
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 47


 1562 0145 0E       		.uleb128 0xe
 1563 0146 3A       		.uleb128 0x3a
 1564 0147 0B       		.uleb128 0xb
 1565 0148 3B       		.uleb128 0x3b
 1566 0149 05       		.uleb128 0x5
 1567 014a 00       		.byte	0
 1568 014b 00       		.byte	0
 1569 014c 18       		.uleb128 0x18
 1570 014d 2E       		.uleb128 0x2e
 1571 014e 00       		.byte	0
 1572 014f 3F       		.uleb128 0x3f
 1573 0150 19       		.uleb128 0x19
 1574 0151 3C       		.uleb128 0x3c
 1575 0152 19       		.uleb128 0x19
 1576 0153 6E       		.uleb128 0x6e
 1577 0154 0E       		.uleb128 0xe
 1578 0155 03       		.uleb128 0x3
 1579 0156 0E       		.uleb128 0xe
 1580 0157 3A       		.uleb128 0x3a
 1581 0158 0B       		.uleb128 0xb
 1582 0159 3B       		.uleb128 0x3b
 1583 015a 0B       		.uleb128 0xb
 1584 015b 6E       		.uleb128 0x6e
 1585 015c 0E       		.uleb128 0xe
 1586 015d 00       		.byte	0
 1587 015e 00       		.byte	0
 1588 015f 00       		.byte	0
 1589              		.section	.debug_loc,"",%progbits
 1590              	.Ldebug_loc0:
 1591              	.LLST0:
 1592 0000 0E000000 		.4byte	.LVL1
 1593 0004 15000000 		.4byte	.LVL2-1
 1594 0008 0100     		.2byte	0x1
 1595 000a 50       		.byte	0x50
 1596 000b 00000000 		.4byte	0
 1597 000f 00000000 		.4byte	0
 1598              	.LLST1:
 1599 0013 1C000000 		.4byte	.LVL3
 1600 0017 C8000000 		.4byte	.LVL24
 1601 001b 0200     		.2byte	0x2
 1602 001d 30       		.byte	0x30
 1603 001e 9F       		.byte	0x9f
 1604 001f C8000000 		.4byte	.LVL24
 1605 0023 D8010000 		.4byte	.LFE85
 1606 0027 0200     		.2byte	0x2
 1607 0029 31       		.byte	0x31
 1608 002a 9F       		.byte	0x9f
 1609 002b 00000000 		.4byte	0
 1610 002f 00000000 		.4byte	0
 1611              	.LLST2:
 1612 0033 1C000000 		.4byte	.LVL3
 1613 0037 54000000 		.4byte	.LVL11
 1614 003b 0200     		.2byte	0x2
 1615 003d 31       		.byte	0x31
 1616 003e 9F       		.byte	0x9f
 1617 003f 54000000 		.4byte	.LVL11
 1618 0043 8C000000 		.4byte	.LVL14
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 48


 1619 0047 0100     		.2byte	0x1
 1620 0049 54       		.byte	0x54
 1621 004a 8C000000 		.4byte	.LVL14
 1622 004e 90000000 		.4byte	.LVL15
 1623 0052 0200     		.2byte	0x2
 1624 0054 30       		.byte	0x30
 1625 0055 9F       		.byte	0x9f
 1626 0056 90000000 		.4byte	.LVL15
 1627 005a D0000000 		.4byte	.LVL26
 1628 005e 0100     		.2byte	0x1
 1629 0060 54       		.byte	0x54
 1630 0061 00000000 		.4byte	0
 1631 0065 00000000 		.4byte	0
 1632              	.LLST3:
 1633 0069 BE000000 		.4byte	.LVL22
 1634 006d C4000000 		.4byte	.LVL23
 1635 0071 0100     		.2byte	0x1
 1636 0073 50       		.byte	0x50
 1637 0074 C4000000 		.4byte	.LVL23
 1638 0078 C7000000 		.4byte	.LVL24-1
 1639 007c 0100     		.2byte	0x1
 1640 007e 52       		.byte	0x52
 1641 007f 00000000 		.4byte	0
 1642 0083 00000000 		.4byte	0
 1643              	.LLST4:
 1644 0087 66010000 		.4byte	.LVL41
 1645 008b 9C010000 		.4byte	.LVL50
 1646 008f 0100     		.2byte	0x1
 1647 0091 54       		.byte	0x54
 1648 0092 00000000 		.4byte	0
 1649 0096 00000000 		.4byte	0
 1650              	.LLST5:
 1651 009a 78010000 		.4byte	.LVL43
 1652 009e 80010000 		.4byte	.LVL44
 1653 00a2 0100     		.2byte	0x1
 1654 00a4 50       		.byte	0x50
 1655 00a5 8C010000 		.4byte	.LVL47
 1656 00a9 92010000 		.4byte	.LVL48
 1657 00ad 0100     		.2byte	0x1
 1658 00af 50       		.byte	0x50
 1659 00b0 00000000 		.4byte	0
 1660 00b4 00000000 		.4byte	0
 1661              	.LLST6:
 1662 00b8 FA000000 		.4byte	.LVL30
 1663 00bc 34010000 		.4byte	.LVL38
 1664 00c0 0100     		.2byte	0x1
 1665 00c2 54       		.byte	0x54
 1666 00c3 00000000 		.4byte	0
 1667 00c7 00000000 		.4byte	0
 1668              	.LLST7:
 1669 00cb 12010000 		.4byte	.LVL32
 1670 00cf 1B010000 		.4byte	.LVL33-1
 1671 00d3 0100     		.2byte	0x1
 1672 00d5 52       		.byte	0x52
 1673 00d6 24010000 		.4byte	.LVL35
 1674 00da 2B010000 		.4byte	.LVL36-1
 1675 00de 0100     		.2byte	0x1
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 49


 1676 00e0 52       		.byte	0x52
 1677 00e1 00000000 		.4byte	0
 1678 00e5 00000000 		.4byte	0
 1679              		.section	.debug_aranges,"",%progbits
 1680 0000 1C000000 		.4byte	0x1c
 1681 0004 0200     		.2byte	0x2
 1682 0006 00000000 		.4byte	.Ldebug_info0
 1683 000a 04       		.byte	0x4
 1684 000b 00       		.byte	0
 1685 000c 0000     		.2byte	0
 1686 000e 0000     		.2byte	0
 1687 0010 00000000 		.4byte	.LFB85
 1688 0014 D8010000 		.4byte	.LFE85-.LFB85
 1689 0018 00000000 		.4byte	0
 1690 001c 00000000 		.4byte	0
 1691              		.section	.debug_ranges,"",%progbits
 1692              	.Ldebug_ranges0:
 1693 0000 00000000 		.4byte	.LFB85
 1694 0004 D8010000 		.4byte	.LFE85
 1695 0008 00000000 		.4byte	0
 1696 000c 00000000 		.4byte	0
 1697              		.section	.debug_line,"",%progbits
 1698              	.Ldebug_line0:
 1699 0000 DF020000 		.section	.debug_str,"MS",%progbits,1
 1699      02006402 
 1699      00000201 
 1699      FB0E0D00 
 1699      01010101 
 1700              	.LASF48:
 1701 0000 42656570 		.ascii	"Beep\000"
 1701      00
 1702              	.LASF50:
 1703 0005 43795379 		.ascii	"CySysTickEnable\000"
 1703      73546963 
 1703      6B456E61 
 1703      626C6500 
 1704              	.LASF4:
 1705 0015 73686F72 		.ascii	"short int\000"
 1705      7420696E 
 1705      7400
 1706              	.LASF21:
 1707 001f 73697A65 		.ascii	"sizetype\000"
 1707      74797065 
 1707      00
 1708              	.LASF24:
 1709 0028 61636358 		.ascii	"accX\000"
 1709      00
 1710              	.LASF25:
 1711 002d 61636359 		.ascii	"accY\000"
 1711      00
 1712              	.LASF26:
 1713 0032 6163635A 		.ascii	"accZ\000"
 1713      00
 1714              	.LASF5:
 1715 0037 5F5F7569 		.ascii	"__uint16_t\000"
 1715      6E743136 
 1715      5F7400
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 50


 1716              	.LASF56:
 1717 0042 433A5C55 		.ascii	"C:\\Users\\ilyap\\Documents\\PSoC Creator\\Zumo_tan"
 1717      73657273 
 1717      5C696C79 
 1717      61705C44 
 1717      6F63756D 
 1718 0070 6B5C5A75 		.ascii	"k\\Zumo_robot\\ZumoBot_Tank.cydsn\000"
 1718      6D6F5F72 
 1718      6F626F74 
 1718      5C5A756D 
 1718      6F426F74 
 1719              	.LASF22:
 1720 0090 73656E73 		.ascii	"sensors_\000"
 1720      6F72735F 
 1720      00
 1721              	.LASF13:
 1722 0099 75696E74 		.ascii	"uint8_t\000"
 1722      385F7400 
 1723              	.LASF29:
 1724 00a1 6C6F6F70 		.ascii	"loop1\000"
 1724      3100
 1725              	.LASF30:
 1726 00a7 73746172 		.ascii	"startline\000"
 1726      746C696E 
 1726      6500
 1727              	.LASF37:
 1728 00b1 6D6F746F 		.ascii	"motor_turn\000"
 1728      725F7475 
 1728      726E00
 1729              	.LASF36:
 1730 00bc 72616E64 		.ascii	"rand\000"
 1730      00
 1731              	.LASF45:
 1732 00c1 7265666C 		.ascii	"reflectance_start\000"
 1732      65637461 
 1732      6E63655F 
 1732      73746172 
 1732      7400
 1733              	.LASF17:
 1734 00d3 666C6F61 		.ascii	"float\000"
 1734      7400
 1735              	.LASF10:
 1736 00d9 6C6F6E67 		.ascii	"long long int\000"
 1736      206C6F6E 
 1736      6720696E 
 1736      7400
 1737              	.LASF40:
 1738 00e7 7265666C 		.ascii	"reflectance_digital\000"
 1738      65637461 
 1738      6E63655F 
 1738      64696769 
 1738      74616C00 
 1739              	.LASF8:
 1740 00fb 6C6F6E67 		.ascii	"long int\000"
 1740      20696E74 
 1740      00
 1741              	.LASF34:
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 51


 1742 0104 43795379 		.ascii	"CySysTickGetValue\000"
 1742      73546963 
 1742      6B476574 
 1742      56616C75 
 1742      6500
 1743              	.LASF23:
 1744 0116 61636344 		.ascii	"accData_\000"
 1744      6174615F 
 1744      00
 1745              	.LASF2:
 1746 011f 5F5F7569 		.ascii	"__uint8_t\000"
 1746      6E74385F 
 1746      7400
 1747              	.LASF42:
 1748 0129 49525F53 		.ascii	"IR_Start\000"
 1748      74617274 
 1748      00
 1749              	.LASF20:
 1750 0132 6C6F6E67 		.ascii	"long double\000"
 1750      20646F75 
 1750      626C6500 
 1751              	.LASF41:
 1752 013e 4C534D33 		.ascii	"LSM303D_Read_Acc\000"
 1752      3033445F 
 1752      52656164 
 1752      5F416363 
 1752      00
 1753              	.LASF49:
 1754 014f 49525F77 		.ascii	"IR_wait\000"
 1754      61697400 
 1755              	.LASF1:
 1756 0157 756E7369 		.ascii	"unsigned char\000"
 1756      676E6564 
 1756      20636861 
 1756      7200
 1757              	.LASF46:
 1758 0165 7265666C 		.ascii	"reflectance_set_threshold\000"
 1758      65637461 
 1758      6E63655F 
 1758      7365745F 
 1758      74687265 
 1759              	.LASF0:
 1760 017f 7369676E 		.ascii	"signed char\000"
 1760      65642063 
 1760      68617200 
 1761              	.LASF52:
 1762 018b 42617474 		.ascii	"BatteryLed_Write\000"
 1762      6572794C 
 1762      65645F57 
 1762      72697465 
 1762      00
 1763              	.LASF11:
 1764 019c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1764      206C6F6E 
 1764      6720756E 
 1764      7369676E 
 1764      65642069 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 52


 1765              	.LASF38:
 1766 01b3 76546173 		.ascii	"vTaskDelay\000"
 1766      6B44656C 
 1766      617900
 1767              	.LASF44:
 1768 01be 49525F66 		.ascii	"IR_flush\000"
 1768      6C757368 
 1768      00
 1769              	.LASF12:
 1770 01c7 756E7369 		.ascii	"unsigned int\000"
 1770      676E6564 
 1770      20696E74 
 1770      00
 1771              	.LASF15:
 1772 01d4 75696E74 		.ascii	"uint16_t\000"
 1772      31365F74 
 1772      00
 1773              	.LASF31:
 1774 01dd 6C6F6F70 		.ascii	"loop2\000"
 1774      3200
 1775              	.LASF59:
 1776 01e3 70757473 		.ascii	"puts\000"
 1776      00
 1777              	.LASF32:
 1778 01e8 73746172 		.ascii	"start\000"
 1778      7400
 1779              	.LASF6:
 1780 01ee 73686F72 		.ascii	"short unsigned int\000"
 1780      7420756E 
 1780      7369676E 
 1780      65642069 
 1780      6E7400
 1781              	.LASF47:
 1782 0201 6D6F746F 		.ascii	"motor_forward\000"
 1782      725F666F 
 1782      72776172 
 1782      6400
 1783              	.LASF19:
 1784 020f 63686172 		.ascii	"char\000"
 1784      00
 1785              	.LASF16:
 1786 0214 696E7433 		.ascii	"int32_t\000"
 1786      325F7400 
 1787              	.LASF14:
 1788 021c 696E7431 		.ascii	"int16_t\000"
 1788      365F7400 
 1789              	.LASF33:
 1790 0224 5F426F6F 		.ascii	"_Bool\000"
 1790      6C00
 1791              	.LASF35:
 1792 022a 7072696E 		.ascii	"print_mqtt\000"
 1792      745F6D71 
 1792      747400
 1793              	.LASF27:
 1794 0235 64617461 		.ascii	"data\000"
 1794      00
 1795              	.LASF53:
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 53


 1796 023a 5357315F 		.ascii	"SW1_Read\000"
 1796      52656164 
 1796      00
 1797              	.LASF55:
 1798 0243 6D61696E 		.ascii	"main.c\000"
 1798      2E6300
 1799              	.LASF9:
 1800 024a 6C6F6E67 		.ascii	"long unsigned int\000"
 1800      20756E73 
 1800      69676E65 
 1800      6420696E 
 1800      7400
 1801              	.LASF18:
 1802 025c 646F7562 		.ascii	"double\000"
 1802      6C6500
 1803              	.LASF43:
 1804 0263 6D6F746F 		.ascii	"motor_start\000"
 1804      725F7374 
 1804      61727400 
 1805              	.LASF60:
 1806 026f 5F5F6275 		.ascii	"__builtin_puts\000"
 1806      696C7469 
 1806      6E5F7075 
 1806      747300
 1807              	.LASF28:
 1808 027e 62757474 		.ascii	"button_\000"
 1808      6F6E5F00 
 1809              	.LASF57:
 1810 0286 7A6D6169 		.ascii	"zmain\000"
 1810      6E00
 1811              	.LASF7:
 1812 028c 5F5F696E 		.ascii	"__int32_t\000"
 1812      7433325F 
 1812      7400
 1813              	.LASF39:
 1814 0296 7265666C 		.ascii	"reflectance_read\000"
 1814      65637461 
 1814      6E63655F 
 1814      72656164 
 1814      00
 1815              	.LASF3:
 1816 02a7 5F5F696E 		.ascii	"__int16_t\000"
 1816      7431365F 
 1816      7400
 1817              	.LASF51:
 1818 02b1 43795379 		.ascii	"CySysTickStart\000"
 1818      73546963 
 1818      6B537461 
 1818      727400
 1819              	.LASF58:
 1820 02c0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1820      52784275 
 1820      66666572 
 1820      00
 1821              	.LASF54:
 1822 02cd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1822      43313120 
ARM GAS  C:\Users\ilyap\AppData\Local\Temp\cccYqT6p.s 			page 54


 1822      352E342E 
 1822      31203230 
 1822      31363036 
 1823 0300 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1823      20726576 
 1823      6973696F 
 1823      6E203233 
 1823      37373135 
 1824 0333 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1824      66756E63 
 1824      74696F6E 
 1824      2D736563 
 1824      74696F6E 
 1825              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
